{"version":3,"file":"testbed.umd.js","sources":["../settings.ts","../draw.ts","../fullscreen_ui.ts","../particle_emitter.ts","../particle_parameter.ts","../test.ts","../tests/add_pair.ts","../tests/apply_force.ts","../tests/body_types.ts","../tests/box_stack.ts","../tests/breakable.ts","../tests/bridge.ts","../tests/bullet_test.ts","../tests/cantilever.ts","../tests/car.ts","../tests/chain.ts","../tests/character_collision.ts","../tests/circle_stack.ts","../tests/collision_filtering.ts","../tests/collision_processing.ts","../tests/compound_shapes.ts","../tests/confined.ts","../tests/continuous_test.ts","../tests/convex_hull.ts","../tests/conveyor_belt.ts","../tests/distance_joint.ts","../tests/distance_test.ts","../tests/dominos.ts","../tests/dump_loader.ts","../tests/dynamic_tree.ts","../tests/edge_shapes.ts","../tests/edge_test.ts","../tests/friction.ts","../tests/gear_joint.ts","../tests/heavy1.ts","../tests/heavy2.ts","../tests/mobile_balanced.ts","../tests/mobile_unbalanced.ts","../tests/motor_joint.ts","../tests/pinball.ts","../tests/platformer.ts","../tests/polygon_collision.ts","../tests/polygon_shapes.ts","../tests/prismatic_joint.ts","../tests/pulley_joint.ts","../tests/pyramid.ts","../tests/ray_cast.ts","../tests/restitution.ts","../tests/revolute_joint.ts","../tests/rope.ts","../tests/sensor.ts","../tests/shape_cast.ts","../tests/shape_editing.ts","../tests/skier.ts","../tests/slider_crank_1.ts","../tests/slider_crank_2.ts","../tests/theo_jansen.ts","../tests/tiles.ts","../tests/time_of_impact.ts","../tests/tumbler.ts","../tests/web.ts","../tests/wheel_joint.ts","../tests/wrecking_ball.ts","../tests/extras/blob_test.ts","../tests/extras/domino_tower.ts","../tests/extras/pyramid_topple.ts","../tests/extras/test_ccd.ts","../tests/extras/test_ragdoll.ts","../tests/extras/test_stack.ts","../tests/extras/top_down_car.ts","../tests/extras/segway.ts","../tests/extras/buoyancy_test.ts","../tests/particles/anti_pointy.ts","../tests/particles/corner_case.ts","../tests/particles/dam_break.ts","../tests/particles/drawing_particles.ts","../tests/particles/elastic_particles.ts","../tests/particles/eye_candy.ts","../tests/particles/faucet.ts","../tests/particles/fracker.ts","../tests/particles/impulse.ts","../tests/particles/liquid_timer.ts","../tests/particles/maxwell.ts","../tests/particles/multiple_particle_systems.ts","../tests/particles/particle_collision_filter.ts","../tests/particles/particles_surface_tension.ts","../tests/particles/particles.ts","../tests/particles/pointy.ts","../tests/particles/ramp.ts","../tests/particles/rigid_particles.ts","../tests/particles/sandbox.ts","../tests/particles/soup.ts","../tests/particles/soup_stirrer.ts","../tests/particles/sparky.ts","../tests/particles/wave_machine.ts","../main.ts"],"sourcesContent":["// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\n\nexport class Settings {\n  public m_testIndex: number = 0;\n  public m_windowWidth: number = 1600;\n  public m_windowHeight: number = 900;\n  public m_hertz: number = 60;\n  public m_velocityIterations: number = 8;\n  public m_positionIterations: number = 3;\n  // #if B2_ENABLE_PARTICLE\n  // Particle iterations are needed for numerical stability in particle\n  // simulations with small particles and relatively high gravity.\n  // b2CalculateParticleIterations helps to determine the number.\n  public m_particleIterations: number = b2.CalculateParticleIterations(10, 0.04, 1 / this.m_hertz);\n  // #endif\n  public m_drawShapes: boolean = true;\n  // #if B2_ENABLE_PARTICLE\n  public m_drawParticles: boolean = true;\n  // #endif\n  public m_drawJoints: boolean = true;\n  public m_drawAABBs: boolean = false;\n  public m_drawContactPoints: boolean = false;\n  public m_drawContactNormals: boolean = false;\n  public m_drawContactImpulse: boolean = false;\n  public m_drawFrictionImpulse: boolean = false;\n  public m_drawCOMs: boolean = false;\n  public m_drawControllers: boolean = true;\n  public m_drawStats: boolean = false;\n  public m_drawProfile: boolean = false;\n  public m_enableWarmStarting: boolean = true;\n  public m_enableContinuous: boolean = true;\n  public m_enableSubStepping: boolean = false;\n  public m_enableSleep: boolean = true;\n  public m_pause: boolean = false;\n  public m_singleStep: boolean = false;\n  // #if B2_ENABLE_PARTICLE\n  public m_strictContacts: boolean = false;\n  // #endif\n\n  public Reset(): void {\n    this.m_testIndex = 0;\n    this.m_windowWidth = 1600;\n    this.m_windowHeight = 900;\n    this.m_hertz = 60;\n    this.m_velocityIterations = 8;\n    this.m_positionIterations = 3;\n    // #if B2_ENABLE_PARTICLE\n    // Particle iterations are needed for numerical stability in particle\n    // simulations with small particles and relatively high gravity.\n    // b2CalculateParticleIterations helps to determine the number.\n    this.m_particleIterations = b2.CalculateParticleIterations(10, 0.04, 1 / this.m_hertz);\n    // #endif\n    this.m_drawShapes = true;\n    // #if B2_ENABLE_PARTICLE\n    this.m_drawParticles = true;\n    // #endif\n    this.m_drawJoints = true;\n    this.m_drawAABBs = false;\n    this.m_drawContactPoints = false;\n    this.m_drawContactNormals = false;\n    this.m_drawContactImpulse = false;\n    this.m_drawFrictionImpulse = false;\n    this.m_drawCOMs = false;\n    // #if B2_ENABLE_CONTROLLER\n    this.m_drawControllers = true;\n    // #endif\n    this.m_drawStats = false;\n    this.m_drawProfile = false;\n    this.m_enableWarmStarting = true;\n    this.m_enableContinuous = true;\n    this.m_enableSubStepping = false;\n    this.m_enableSleep = true;\n    this.m_pause = false;\n    this.m_singleStep = false;\n    // #if B2_ENABLE_PARTICLE\n    this.m_strictContacts = false;\n    // #endif\n  }\n\n  public Save(): void { }\n  public Load(): void { }\n}\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\n\nexport class Camera {\n  public readonly m_center: b2.Vec2 = new b2.Vec2(0, 20);\n  ///public readonly m_roll: b2.Rot = new b2.Rot(b2.DegToRad(0));\n  public m_extent: number = 25;\n  public m_zoom: number = 1;\n  public m_width: number = 1280;\n  public m_height: number = 800;\n\n  public ConvertScreenToWorld(screenPoint: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    return this.ConvertElementToWorld(screenPoint, out);\n  }\n\n  public ConvertWorldToScreen(worldPoint: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    return this.ConvertWorldToElement(worldPoint, out);\n  }\n\n  public ConvertViewportToElement(viewport: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    // 0,0 at center of canvas, x right and y up\n    const element_x: number = viewport.x + (0.5 * this.m_width);\n    const element_y: number = (0.5 * this.m_height) - viewport.y;\n    return out.Set(element_x, element_y);\n  }\n\n  public ConvertElementToViewport(element: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    // 0,0 at center of canvas, x right and y up\n    const viewport_x: number = element.x - (0.5 * this.m_width);\n    const viewport_y: number = (0.5 * this.m_height) - element.y;\n    return out.Set(viewport_x, viewport_y);\n  }\n\n  public ConvertProjectionToViewport(projection: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    const viewport: b2.Vec2 = out.Copy(projection);\n    b2.Vec2.MulSV(1 / this.m_zoom, viewport, viewport);\n    ///b2.Vec2.MulSV(this.m_extent, viewport, viewport);\n    b2.Vec2.MulSV(0.5 * this.m_height / this.m_extent, projection, projection);\n    return viewport;\n  }\n\n  public ConvertViewportToProjection(viewport: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    const projection: b2.Vec2 = out.Copy(viewport);\n    ///b2.Vec2.MulSV(1 / this.m_extent, projection, projection);\n    b2.Vec2.MulSV(2 * this.m_extent / this.m_height, projection, projection);\n    b2.Vec2.MulSV(this.m_zoom, projection, projection);\n    return projection;\n  }\n\n  public ConvertWorldToProjection(world: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    const projection: b2.Vec2 = out.Copy(world);\n    b2.Vec2.SubVV(projection, this.m_center, projection);\n    ///b2.Rot.MulTRV(this.m_roll, projection, projection);\n    return projection;\n  }\n\n  public ConvertProjectionToWorld(projection: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    const world: b2.Vec2 = out.Copy(projection);\n    ///b2.Rot.MulRV(this.m_roll, world, world);\n    b2.Vec2.AddVV(this.m_center, world, world);\n    return world;\n  }\n\n  public ConvertElementToWorld(element: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    const viewport: b2.Vec2 = this.ConvertElementToViewport(element, out);\n    const projection: b2.Vec2 = this.ConvertViewportToProjection(viewport, out);\n    return this.ConvertProjectionToWorld(projection, out);\n  }\n\n  public ConvertWorldToElement(world: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    const projection: b2.Vec2 = this.ConvertWorldToProjection(world, out);\n    const viewport: b2.Vec2 = this.ConvertProjectionToViewport(projection, out);\n    return this.ConvertViewportToElement(viewport, out);\n  }\n\n  public ConvertElementToProjection(element: b2.Vec2, out: b2.Vec2): b2.Vec2 {\n    const viewport: b2.Vec2 = this.ConvertElementToViewport(element, out);\n    return this.ConvertViewportToProjection(viewport, out);\n  }\n}\n\n// This class implements debug drawing callbacks that are invoked\n// inside b2World::Step.\nexport class DebugDraw extends b2.Draw {\n  public m_ctx: CanvasRenderingContext2D | null = null;\n\n  constructor() {\n    super();\n  }\n\n  public PushTransform(xf: b2.Transform): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.save();\n      ctx.translate(xf.p.x, xf.p.y);\n      ctx.rotate(xf.q.GetAngle());\n    }\n  }\n\n  public PopTransform(xf: b2.Transform): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.restore();\n    }\n  }\n\n  public DrawPolygon(vertices: b2.Vec2[], vertexCount: number, color: b2.Color): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(vertices[0].x, vertices[0].y);\n      for (let i: number = 1; i < vertexCount; i++) {\n        ctx.lineTo(vertices[i].x, vertices[i].y);\n      }\n      ctx.closePath();\n      ctx.strokeStyle = color.MakeStyleString(1);\n      ctx.stroke();\n    }\n  }\n\n  public DrawSolidPolygon(vertices: b2.Vec2[], vertexCount: number, color: b2.Color): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(vertices[0].x, vertices[0].y);\n      for (let i: number = 1; i < vertexCount; i++) {\n        ctx.lineTo(vertices[i].x, vertices[i].y);\n      }\n      ctx.closePath();\n      ctx.fillStyle = color.MakeStyleString(0.5);\n      ctx.fill();\n      ctx.strokeStyle = color.MakeStyleString(1);\n      ctx.stroke();\n    }\n  }\n\n  public DrawCircle(center: b2.Vec2, radius: number, color: b2.Color): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.beginPath();\n      ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true);\n      ctx.strokeStyle = color.MakeStyleString(1);\n      ctx.stroke();\n    }\n  }\n\n  public DrawSolidCircle(center: b2.Vec2, radius: number, axis: b2.Vec2, color: b2.Color): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      const cx: number = center.x;\n      const cy: number = center.y;\n      ctx.beginPath();\n      ctx.arc(cx, cy, radius, 0, b2.pi * 2, true);\n      ctx.moveTo(cx, cy);\n      ctx.lineTo((cx + axis.x * radius), (cy + axis.y * radius));\n      ctx.fillStyle = color.MakeStyleString(0.5);\n      ctx.fill();\n      ctx.strokeStyle = color.MakeStyleString(1);\n      ctx.stroke();\n    }\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  public DrawParticles(centers: b2.Vec2[], radius: number, colors: b2.Color[] | null, count: number) {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      if (colors !== null) {\n        for (let i = 0; i < count; ++i) {\n          const center = centers[i];\n          const color = colors[i];\n          ctx.fillStyle = color.MakeStyleString();\n          // ctx.fillRect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\n          ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true); ctx.fill();\n        }\n      } else {\n        ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n        // ctx.beginPath();\n        for (let i = 0; i < count; ++i) {\n          const center = centers[i];\n          // ctx.rect(center.x - radius, center.y - radius, 2 * radius, 2 * radius);\n          ctx.beginPath(); ctx.arc(center.x, center.y, radius, 0, b2.pi * 2, true); ctx.fill();\n        }\n        // ctx.fill();\n      }\n    }\n  }\n  // #endif\n\n  public DrawSegment(p1: b2.Vec2, p2: b2.Vec2, color: b2.Color): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.strokeStyle = color.MakeStyleString(1);\n      ctx.stroke();\n    }\n  }\n\n  public DrawTransform(xf: b2.Transform): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      this.PushTransform(xf);\n\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(1, 0);\n      ctx.strokeStyle = b2.Color.RED.MakeStyleString(1);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(0, 1);\n      ctx.strokeStyle = b2.Color.GREEN.MakeStyleString(1);\n      ctx.stroke();\n\n      this.PopTransform(xf);\n    }\n  }\n\n  public DrawPoint(p: b2.Vec2, size: number, color: b2.Color): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.fillStyle = color.MakeStyleString();\n      size *= g_camera.m_zoom;\n      size /= g_camera.m_extent;\n      const hsize: number = size / 2;\n      ctx.fillRect(p.x - hsize, p.y - hsize, size, size);\n    }\n  }\n\n  private static DrawString_s_color: b2.Color = new b2.Color(0.9, 0.6, 0.6);\n  public DrawString(x: number, y: number, message: string): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.font = \"15px DroidSans\";\n      const color: b2.Color = DebugDraw.DrawString_s_color;\n      ctx.fillStyle = color.MakeStyleString();\n      ctx.fillText(message, x, y);\n      ctx.restore();\n    }\n  }\n\n  private static DrawStringWorld_s_p: b2.Vec2 = new b2.Vec2();\n  private static DrawStringWorld_s_cc: b2.Vec2 = new b2.Vec2();\n  private static DrawStringWorld_s_color: b2.Color = new b2.Color(0.5, 0.9, 0.5);\n  public DrawStringWorld(x: number, y: number, message: string): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      const p: b2.Vec2 = DebugDraw.DrawStringWorld_s_p.Set(x, y);\n\n      // world -> viewport\n      const vt: b2.Vec2 = g_camera.m_center;\n      b2.Vec2.SubVV(p, vt, p);\n      ///const vr = g_camera.m_roll;\n      ///b2.Rot.MulTRV(vr, p, p);\n      const vs: number = g_camera.m_zoom;\n      b2.Vec2.MulSV(1 / vs, p, p);\n\n      // viewport -> canvas\n      const cs: number = 0.5 * g_camera.m_height / g_camera.m_extent;\n      b2.Vec2.MulSV(cs, p, p);\n      p.y *= -1;\n      const cc: b2.Vec2 = DebugDraw.DrawStringWorld_s_cc.Set(0.5 * ctx.canvas.width, 0.5 * ctx.canvas.height);\n      b2.Vec2.AddVV(p, cc, p);\n\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.font = \"15px DroidSans\";\n      const color: b2.Color = DebugDraw.DrawStringWorld_s_color;\n      ctx.fillStyle = color.MakeStyleString();\n      ctx.fillText(message, p.x, p.y);\n      ctx.restore();\n    }\n  }\n\n  public DrawAABB(aabb: b2.AABB, color: b2.Color): void {\n    const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n    if (ctx) {\n      ctx.strokeStyle = color.MakeStyleString();\n      const x: number = aabb.lowerBound.x;\n      const y: number = aabb.lowerBound.y;\n      const w: number = aabb.upperBound.x - aabb.lowerBound.x;\n      const h: number = aabb.upperBound.y - aabb.lowerBound.y;\n      ctx.strokeRect(x, y, w, h);\n    }\n  }\n}\n\nexport const g_debugDraw: DebugDraw = new DebugDraw();\nexport const g_camera: Camera = new Camera();\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\n/**\n * Handles drawing and selection of full screen UI.\n */\nexport class FullScreenUI {\n  constructor() {\n    this.Reset();\n  }\n\n  /**\n   * Whether particle parameters are enabled.\n   */\n  public m_particleParameterSelectionEnabled: boolean = false;\n\n  /**\n   * Reset the UI to it's initial state.\n   */\n  public Reset(): void {\n    this.m_particleParameterSelectionEnabled = false;\n  }\n\n  /**\n   * Enable / disable particle parameter selection.\n   */\n  public SetParticleParameterSelectionEnabled(enable: boolean): void {\n    this.m_particleParameterSelectionEnabled = enable;\n  }\n\n  /**\n   * Get whether particle parameter selection is enabled.\n   */\n  public GetParticleParameterSelectionEnabled(): boolean {\n    return this.m_particleParameterSelectionEnabled;\n  }\n}\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\n\nexport class EmittedParticleCallback {\n  /**\n   * Called for each created particle.\n   */\n  public ParticleCreated(system: b2.ParticleSystem, particleIndex: number): void {}\n}\n\n/**\n * Emit particles from a circular region.\n */\nexport class RadialEmitter {\n  /**\n   * Pointer to global world\n   */\n  public m_particleSystem: b2.ParticleSystem | null = null;\n  /**\n   * Called for each created particle.\n   */\n  public m_callback: EmittedParticleCallback | null = null;\n  /**\n   * Center of particle emitter\n   */\n  public m_origin: b2.Vec2 = new b2.Vec2();\n  /**\n   * Launch direction.\n   */\n  public m_startingVelocity: b2.Vec2 = new b2.Vec2();\n  /**\n   * Speed particles are emitted\n   */\n  public m_speed = 0.0;\n  /**\n   * Half width / height of particle emitter\n   */\n  public m_halfSize: b2.Vec2 = new b2.Vec2();\n  /**\n   * Particles per second\n   */\n  public m_emitRate = 1.0;\n  /**\n   * Initial color of particle emitted.\n   */\n  public m_color: b2.Color = new b2.Color();\n  /**\n   * Number particles to emit on the next frame\n   */\n  public m_emitRemainder = 0.0;\n  /**\n   * Flags for created particles, see b2ParticleFlag.\n   */\n  public m_flags: b2.ParticleFlag = b2.ParticleFlag.b2_waterParticle;\n  /**\n   * Group to put newly created particles in.\n   */\n  public m_group: b2.ParticleGroup | null = null;\n\n  /**\n   * Calculate a random number 0.0..1.0.\n   */\n  public static Random(): number {\n    return Math.random();\n  }\n\n  public __dtor__(): void {\n    this.SetGroup(null);\n  }\n\n  /**\n   * Set the center of the emitter.\n   */\n  public SetPosition(origin: b2.Vec2): void {\n    this.m_origin.Copy(origin);\n  }\n\n  /**\n   * Get the center of the emitter.\n   */\n  public GetPosition(out: b2.Vec2): b2.Vec2 {\n    return out.Copy(this.m_origin);\n  }\n\n  /**\n   * Set the size of the circle which emits particles.\n   */\n  public SetSize(size: b2.Vec2): void {\n    this.m_halfSize.Copy(size).SelfMul(0.5);\n  }\n\n  /**\n   * Get the size of the circle which emits particles.\n   */\n  public GetSize(out: b2.Vec2): b2.Vec2 {\n    return out.Copy(this.m_halfSize).SelfMul(2.0);\n  }\n\n  /**\n   * Set the starting velocity of emitted particles.\n   */\n  public SetVelocity(velocity: b2.Vec2): void {\n    this.m_startingVelocity.Copy(velocity);\n  }\n\n  /**\n   * Get the starting velocity.\n   */\n  public GetVelocity(out: b2.Vec2): b2.Vec2 {\n    return out.Copy(this.m_startingVelocity);\n  }\n\n  /**\n   * Set the speed of particles along the direction from the\n   * center of the emitter.\n   */\n  public SetSpeed(speed: number): void {\n    this.m_speed = speed;\n  }\n\n  /**\n   * Get the speed of particles along the direction from the\n   * center of the emitter.\n   */\n  public GetSpeed(): number {\n    return this.m_speed;\n  }\n\n  /**\n   * Set the flags for created particles.\n   */\n  public SetParticleFlags(flags: b2.ParticleFlag): void {\n    this.m_flags = flags;\n  }\n\n  /**\n   * Get the flags for created particles.\n   */\n  public GetParticleFlags(): b2.ParticleFlag {\n    return this.m_flags;\n  }\n\n  /**\n   * Set the color of particles.\n   */\n  public SetColor(color: b2.Color): void {\n    this.m_color.Copy(color);\n  }\n\n  /**\n   * Get the color of particles emitter.\n   */\n  public GetColor(out: b2.Color): b2.Color {\n    return out.Copy(this.m_color);\n  }\n\n  /**\n   * Set the emit rate in particles per second.\n   */\n  public SetEmitRate(emitRate: number): void {\n    this.m_emitRate = emitRate;\n  }\n\n  /**\n   * Get the current emit rate.\n   */\n  public GetEmitRate(): number {\n    return this.m_emitRate;\n  }\n\n  /**\n   * Set the particle system this emitter is adding particles to.\n   */\n  public SetParticleSystem(particleSystem: b2.ParticleSystem): void {\n    this.m_particleSystem = particleSystem;\n  }\n\n  /**\n   * Get the particle system this emitter is adding particle to.\n   */\n  public GetParticleSystem(): b2.ParticleSystem | null {\n    return this.m_particleSystem;\n  }\n\n  /**\n   * Set the callback that is called on the creation of each\n   * particle.\n   */\n  public SetCallback(callback: EmittedParticleCallback): void {\n    this.m_callback = callback;\n  }\n\n  /**\n   * Get the callback that is called on the creation of each\n   * particle.\n   */\n  public GetCallback(): EmittedParticleCallback | null {\n    return this.m_callback;\n  }\n\n  /**\n   * This class sets the group flags to b2_particleGroupCanBeEmpty\n   * so that it isn't destroyed and clears the\n   * b2_particleGroupCanBeEmpty on the group when the emitter no\n   * longer references it so that the group can potentially be\n   * cleaned up.\n   */\n  public SetGroup(group: b2.ParticleGroup | null): void {\n    if (this.m_group) {\n      this.m_group.SetGroupFlags(this.m_group.GetGroupFlags() & ~b2.ParticleGroupFlag.b2_particleGroupCanBeEmpty);\n    }\n    this.m_group = group;\n    if (this.m_group) {\n      this.m_group.SetGroupFlags(this.m_group.GetGroupFlags() | b2.ParticleGroupFlag.b2_particleGroupCanBeEmpty);\n    }\n  }\n\n  /**\n   * Get the group particles should be created within.\n   */\n  public GetGroup(): b2.ParticleGroup | null {\n    return this.m_group;\n  }\n\n  /**\n   * dt is seconds that have passed, particleIndices is an\n   * optional pointer to an array which tracks which particles\n   * have been created and particleIndicesCount is the size of the\n   * particleIndices array. This function returns the number of\n   * particles created during this simulation step.\n   */\n  public Step(dt: number, particleIndices?: number[], particleIndicesCount: number = particleIndices ? particleIndices.length : 0): number {\n    if (this.m_particleSystem === null) { throw new Error(); }\n    let numberOfParticlesCreated = 0;\n    // How many (fractional) particles should we have emitted this frame?\n    this.m_emitRemainder += this.m_emitRate * dt;\n\n    const pd = new b2.ParticleDef();\n    pd.color.Copy(this.m_color);\n    pd.flags = this.m_flags;\n    pd.group = this.m_group;\n\n    // Keep emitting particles on this frame until we only have a\n    // fractional particle left.\n    while (this.m_emitRemainder > 1.0) {\n      this.m_emitRemainder -= 1.0;\n\n      // Randomly pick a position within the emitter's radius.\n      const angle = RadialEmitter.Random() * 2.0 * b2.pi;\n      // Distance from the center of the circle.\n      const distance = RadialEmitter.Random();\n      const positionOnUnitCircle = new b2.Vec2(Math.sin(angle), Math.cos(angle));\n\n      // Initial position.\n      pd.position.Set(\n        this.m_origin.x + positionOnUnitCircle.x * distance * this.m_halfSize.x,\n        this.m_origin.y + positionOnUnitCircle.y * distance * this.m_halfSize.y);\n      // Send it flying\n      pd.velocity.Copy(this.m_startingVelocity);\n      if (this.m_speed !== 0.0) {\n        ///  pd.velocity += positionOnUnitCircle * m_speed;\n        pd.velocity.SelfMulAdd(this.m_speed, positionOnUnitCircle);\n      }\n\n      const particleIndex = this.m_particleSystem.CreateParticle(pd);\n      if (this.m_callback) {\n        this.m_callback.ParticleCreated(this.m_particleSystem, particleIndex);\n      }\n      if (particleIndices && (numberOfParticlesCreated < particleIndicesCount)) {\n        particleIndices[numberOfParticlesCreated] = particleIndex;\n      }\n      ++numberOfParticlesCreated;\n    }\n    return numberOfParticlesCreated;\n  }\n}\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\n\nexport enum ParticleParameterOptions {\n  OptionStrictContacts = 1 << 0,\n  OptionDrawShapes = 1 << 1,\n  OptionDrawParticles = 1 << 2,\n  OptionDrawJoints = 1 << 3,\n  OptionDrawAABBs = 1 << 4,\n  OptionDrawContactPoints = 1 << 5,\n  OptionDrawContactNormals = 1 << 6,\n  OptionDrawContactImpulse = 1 << 7,\n  OptionDrawFrictionImpulse = 1 << 8,\n  OptionDrawCOMs = 1 << 9,\n  OptionDrawStats = 1 << 10,\n  OptionDrawProfile = 1 << 11,\n}\n\nexport class ParticleParameterValue {\n  /**\n   * ParticleParameterValue of a particle parameter.\n   */\n  constructor(value: ParticleParameterValue);\n  constructor(value: number, options: ParticleParameterOptions, name: string);\n  constructor(...args: any[]) {\n    if (args[0] instanceof ParticleParameterValue) {\n      this.Copy(args[0]);\n    } else {\n      this.value = args[0];\n      this.options = args[1];\n      this.name = args[2];\n    }\n  }\n\n  /**\n   * ParticleParameterValue associated with the parameter.\n   */\n  public value: number = 0;\n\n  /**\n   * Any global (non particle-specific) options associated with\n   * this parameter\n   */\n  public options: ParticleParameterOptions = 0;\n\n  /**\n   * Name to display when this parameter is selected.\n   */\n  public name = \"\";\n\n  public Copy(other: ParticleParameterValue): this {\n    this.value = other.value;\n    this.options = other.options;\n    this.name = other.name;\n    return this;\n  }\n}\n\nexport class ParticleParameterDefinition {\n  /**\n   * Particle parameter definition.\n   */\n  constructor(values: ParticleParameterValue[], numValues: number = values.length) {\n    this.values = values;\n    this.numValues = numValues;\n  }\n\n  public values: ParticleParameterValue[];\n  public numValues: number = 0;\n\n  public CalculateValueMask(): number {\n    let mask = 0;\n    for (let i = 0; i < this.numValues; i++) {\n      mask |= this.values[i].value;\n    }\n    return mask;\n  }\n}\n\nexport class ParticleParameter {\n  public static readonly k_DefaultOptions: ParticleParameterOptions = ParticleParameterOptions.OptionDrawShapes | ParticleParameterOptions.OptionDrawParticles;\n  public static readonly k_particleTypes: ParticleParameterValue[] = [\n    new ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, ParticleParameter.k_DefaultOptions, \"water\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, ParticleParameter.k_DefaultOptions | ParticleParameterOptions.OptionStrictContacts, \"water (strict)\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_springParticle, ParticleParameter.k_DefaultOptions, \"spring\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_elasticParticle, ParticleParameter.k_DefaultOptions, \"elastic\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_viscousParticle, ParticleParameter.k_DefaultOptions, \"viscous\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_powderParticle, ParticleParameter.k_DefaultOptions, \"powder\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_tensileParticle, ParticleParameter.k_DefaultOptions, \"tensile\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_colorMixingParticle, ParticleParameter.k_DefaultOptions, \"color mixing\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_wallParticle, ParticleParameter.k_DefaultOptions, \"wall\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_barrierParticle | b2.ParticleFlag.b2_wallParticle, ParticleParameter.k_DefaultOptions, \"barrier\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_staticPressureParticle, ParticleParameter.k_DefaultOptions, \"static pressure\"),\n    new ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, ParticleParameter.k_DefaultOptions | ParticleParameterOptions.OptionDrawAABBs, \"water (bounding boxes)\"),\n  ];\n  public static readonly k_defaultDefinition: ParticleParameterDefinition[] = [\n    new ParticleParameterDefinition(ParticleParameter.k_particleTypes),\n  ];\n\n  public m_index = 0;\n  public m_changed = false;\n  public m_restartOnChange = false;\n  public m_value: ParticleParameterValue | null = null;\n  public m_definition: ParticleParameterDefinition[] = ParticleParameter.k_defaultDefinition;\n  public m_definitionCount = 0;\n  public m_valueCount = 0;\n\n  constructor() {\n    this.Reset();\n  }\n\n  public Reset() {\n    this.m_restartOnChange = true;\n    this.m_index = 0;\n    this.SetDefinition(ParticleParameter.k_defaultDefinition);\n    this.Set(0);\n  }\n\n  public SetDefinition(definition: ParticleParameterDefinition[], definitionCount: number = definition.length): void {\n    this.m_definition = definition;\n    this.m_definitionCount = definitionCount;\n    this.m_valueCount = 0;\n    for (let i = 0; i < this.m_definitionCount; ++i) {\n      this.m_valueCount += this.m_definition[i].numValues;\n    }\n    // Refresh the selected value.\n    this.Set(this.Get());\n  }\n\n  public Get(): number {\n    return this.m_index;\n  }\n\n  public Set(index: number): void {\n    this.m_changed = this.m_index !== index;\n    this.m_index = this.m_valueCount ? index % this.m_valueCount : index;\n    this.m_value = this.FindParticleParameterValue();\n    // DEBUG: b2.Assert(this.m_value !== null);\n  }\n\n  public Increment(): void {\n    const index = this.Get();\n    this.Set(index >= this.m_valueCount ? 0 : index + 1);\n  }\n\n  public Decrement(): void {\n    const index = this.Get();\n    this.Set(index === 0 ? this.m_valueCount - 1 : index - 1);\n  }\n\n  public Changed(restart: boolean[]): boolean {\n    const changed = this.m_changed;\n    this.m_changed = false;\n    if (restart) {\n      restart[0] = changed && this.GetRestartOnChange();\n    }\n    return changed;\n  }\n\n  public GetValue(): number {\n    if (this.m_value === null) { throw new Error(); }\n    return this.m_value.value;\n  }\n\n  public GetName(): string {\n    if (this.m_value === null) { throw new Error(); }\n    return this.m_value.name;\n  }\n\n  public GetOptions(): ParticleParameterOptions {\n    if (this.m_value === null) { throw new Error(); }\n    return this.m_value.options;\n  }\n\n  public SetRestartOnChange(enable: boolean): void {\n    this.m_restartOnChange = enable;\n  }\n\n  public GetRestartOnChange(): boolean {\n    return this.m_restartOnChange;\n  }\n\n  public FindIndexByValue(value: number): number {\n    let index = 0;\n    for (let i = 0; i < this.m_definitionCount; ++i) {\n      const definition = this.m_definition[i];\n      const numValues = definition.numValues;\n      for (let j = 0; j < numValues; ++j, ++index) {\n        if (definition.values[j].value === value) { return index; }\n      }\n    }\n    return -1;\n  }\n\n  public FindParticleParameterValue(): ParticleParameterValue | null {\n    let start = 0;\n    const index = this.Get();\n    for (let i = 0; i < this.m_definitionCount; ++i) {\n      const definition = this.m_definition[i];\n      const end = start + definition.numValues;\n      if (index >= start && index < end) {\n        return definition.values[index - start];\n      }\n      start = end;\n    }\n    return null;\n  }\n}\n\n// #endif\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport { Settings } from \"./settings.js\";\nimport { g_debugDraw } from \"./draw.js\";\n// #if B2_ENABLE_PARTICLE\nimport { FullScreenUI } from \"./fullscreen_ui.js\";\nimport { ParticleParameter, ParticleParameterValue, ParticleParameterDefinition } from \"./particle_parameter.js\";\n// #endif\n\nexport const DRAW_STRING_NEW_LINE: number = 16;\n\nexport function RandomFloat(lo: number = -1, hi: number = 1) {\n  let r = Math.random();\n  r = (hi - lo) * r + lo;\n  return r;\n}\n\nexport class TestEntry {\n  public category: string = \"\";\n  public name: string = \"unknown\";\n  public createFcn: () => Test;\n\n  constructor(category: string, name: string, createFcn: () => Test) {\n    this.category = category;\n    this.name = name;\n    this.createFcn = createFcn;\n  }\n}\n\nexport const g_testEntries: TestEntry[] = [\n]\n\nexport function RegisterTest(category: string, name: string, fcn: () => Test): number {\n  return g_testEntries.push(new TestEntry(category, name, fcn));\n}\n\nexport class DestructionListener extends b2.DestructionListener {\n  public test: Test;\n\n  constructor(test: Test) {\n    super();\n\n    this.test = test;\n  }\n\n  public SayGoodbyeJoint(joint: b2.Joint): void {\n    if (this.test.m_mouseJoint === joint) {\n      this.test.m_mouseJoint = null;\n    } else {\n      this.test.JointDestroyed(joint);\n    }\n  }\n\n  public SayGoodbyeFixture(fixture: b2.Fixture): void {}\n\n  // #if B2_ENABLE_PARTICLE\n  public SayGoodbyeParticleGroup(group: b2.ParticleGroup) {\n    this.test.ParticleGroupDestroyed(group);\n  }\n  // #endif\n}\n\nexport class ContactPoint {\n  public fixtureA!: b2.Fixture;\n  public fixtureB!: b2.Fixture;\n  public readonly normal: b2.Vec2 = new b2.Vec2();\n  public readonly position: b2.Vec2 = new b2.Vec2();\n  public state: b2.PointState = b2.PointState.b2_nullState;\n  public normalImpulse: number = 0;\n  public tangentImpulse: number = 0;\n  public separation: number = 0;\n}\n\n// #if B2_ENABLE_PARTICLE\nclass QueryCallback2 extends b2.QueryCallback {\n  public m_particleSystem: b2.ParticleSystem;\n  public m_shape: b2.Shape;\n  public m_velocity: b2.Vec2;\n  constructor(particleSystem: b2.ParticleSystem, shape: b2.Shape, velocity: b2.Vec2) {\n    super();\n    this.m_particleSystem = particleSystem;\n    this.m_shape = shape;\n    this.m_velocity = velocity;\n  }\n\n  public ReportFixture(fixture: b2.Fixture): boolean {\n    return false;\n  }\n\n  public ReportParticle(particleSystem: b2.ParticleSystem, index: number): boolean {\n    if (particleSystem !== this.m_particleSystem) {\n      return false;\n    }\n    const xf = b2.Transform.IDENTITY;\n    const p = this.m_particleSystem.GetPositionBuffer()[index];\n    if (this.m_shape.TestPoint(xf, p)) {\n      const v = this.m_particleSystem.GetVelocityBuffer()[index];\n      v.Copy(this.m_velocity);\n    }\n    return true;\n  }\n}\n// #endif\n\nexport class Test extends b2.ContactListener {\n  // #if B2_ENABLE_PARTICLE\n  public static readonly fullscreenUI = new FullScreenUI();\n  public static readonly particleParameter = new ParticleParameter();\n  // #endif\n  public static readonly k_maxContactPoints: number = 2048;\n\n  public m_world: b2.World;\n  // #if B2_ENABLE_PARTICLE\n  public m_particleSystem: b2.ParticleSystem;\n  // #endif\n  public m_bomb: b2.Body | null = null;\n  public m_textLine: number = 30;\n  public m_mouseJoint: b2.MouseJoint | null = null;\n  public readonly m_points: ContactPoint[] = b2.MakeArray(Test.k_maxContactPoints, (i) => new ContactPoint());\n  public m_pointCount: number = 0;\n  public m_destructionListener: DestructionListener;\n  public readonly m_bombSpawnPoint: b2.Vec2 = new b2.Vec2();\n  public m_bombSpawning: boolean = false;\n  public readonly m_mouseWorld: b2.Vec2 = new b2.Vec2();\n  // #if B2_ENABLE_PARTICLE\n  public m_mouseTracing: boolean = false;\n  public readonly m_mouseTracerPosition: b2.Vec2 = new b2.Vec2();\n  public readonly m_mouseTracerVelocity: b2.Vec2 = new b2.Vec2();\n  // #endif\n  public m_stepCount: number = 0;\n  public readonly m_maxProfile: b2.Profile = new b2.Profile();\n  public readonly m_totalProfile: b2.Profile = new b2.Profile();\n  public m_groundBody: b2.Body;\n  // #if B2_ENABLE_PARTICLE\n  public m_particleParameters: ParticleParameterValue[] | null = null;\n  public m_particleParameterDef: ParticleParameterDefinition | null = null;\n  // #endif\n\n  constructor() {\n    super();\n\n    // #if B2_ENABLE_PARTICLE\n    const particleSystemDef = new b2.ParticleSystemDef();\n    // #endif\n    const gravity: b2.Vec2 = new b2.Vec2(0, -10);\n    this.m_world = new b2.World(gravity);\n    // #if B2_ENABLE_PARTICLE\n    this.m_particleSystem = this.m_world.CreateParticleSystem(particleSystemDef);\n    // #endif\n    this.m_bomb = null;\n    this.m_textLine = 30;\n    this.m_mouseJoint = null;\n\n    this.m_destructionListener = new DestructionListener(this);\n    this.m_world.SetDestructionListener(this.m_destructionListener);\n    this.m_world.SetContactListener(this);\n    this.m_world.SetDebugDraw(g_debugDraw);\n\n    // #if B2_ENABLE_PARTICLE\n    this.m_particleSystem.SetGravityScale(0.4);\n    this.m_particleSystem.SetDensity(1.2);\n    // #endif\n\n    const bodyDef: b2.BodyDef = new b2.BodyDef();\n    this.m_groundBody = this.m_world.CreateBody(bodyDef);\n  }\n\n  public JointDestroyed(joint: b2.Joint): void {}\n\n  // #if B2_ENABLE_PARTICLE\n  public ParticleGroupDestroyed(group: b2.ParticleGroup) {}\n  // #endif\n\n  public BeginContact(contact: b2.Contact): void {}\n\n  public EndContact(contact: b2.Contact): void {}\n\n  private static PreSolve_s_state1: b2.PointState[] = [/*b2.maxManifoldPoints*/];\n  private static PreSolve_s_state2: b2.PointState[] = [/*b2.maxManifoldPoints*/];\n  private static PreSolve_s_worldManifold: b2.WorldManifold = new b2.WorldManifold();\n  public PreSolve(contact: b2.Contact, oldManifold: b2.Manifold): void {\n    const manifold: b2.Manifold = contact.GetManifold();\n\n    if (manifold.pointCount === 0) {\n      return;\n    }\n\n    const fixtureA: b2.Fixture | null = contact.GetFixtureA();\n    const fixtureB: b2.Fixture | null = contact.GetFixtureB();\n\n    const state1: b2.PointState[] = Test.PreSolve_s_state1;\n    const state2: b2.PointState[] = Test.PreSolve_s_state2;\n    b2.GetPointStates(state1, state2, oldManifold, manifold);\n\n    const worldManifold: b2.WorldManifold = Test.PreSolve_s_worldManifold;\n    contact.GetWorldManifold(worldManifold);\n\n    for (let i: number = 0; i < manifold.pointCount && this.m_pointCount < Test.k_maxContactPoints; ++i) {\n      const cp: ContactPoint = this.m_points[this.m_pointCount];\n      cp.fixtureA = fixtureA;\n      cp.fixtureB = fixtureB;\n      cp.position.Copy(worldManifold.points[i]);\n      cp.normal.Copy(worldManifold.normal);\n      cp.state = state2[i];\n      cp.normalImpulse = manifold.points[i].normalImpulse;\n      cp.tangentImpulse = manifold.points[i].tangentImpulse;\n      cp.separation = worldManifold.separations[i];\n      ++this.m_pointCount;\n    }\n  }\n\n  public PostSolve(contact: b2.Contact, impulse: b2.ContactImpulse): void {}\n\n  public Keyboard(key: string): void {}\n\n  public KeyboardUp(key: string): void {}\n\n  public SetTextLine(line: number): void {\n    this.m_textLine = line;\n  }\n\n  public DrawTitle(title: string): void {\n    g_debugDraw.DrawString(5, DRAW_STRING_NEW_LINE, title);\n    this.m_textLine = 3 * DRAW_STRING_NEW_LINE;\n  }\n\n  public MouseDown(p: b2.Vec2): void {\n    this.m_mouseWorld.Copy(p);\n    // #if B2_ENABLE_PARTICLE\n    this.m_mouseTracing = true;\n    this.m_mouseTracerPosition.Copy(p);\n    this.m_mouseTracerVelocity.SetZero();\n    // #endif\n\n    if (this.m_mouseJoint !== null) {\n      this.m_world.DestroyJoint(this.m_mouseJoint);\n      this.m_mouseJoint = null;\n    }\n\n    let hit_fixture: b2.Fixture | null | any = null; // HACK: tsc doesn't detect calling callbacks\n\n    // Query the world for overlapping shapes.\n    this.m_world.QueryPointAABB(p, (fixture: b2.Fixture): boolean => {\n      const body = fixture.GetBody();\n      if (body.GetType() === b2.BodyType.b2_dynamicBody) {\n        const inside = fixture.TestPoint(p);\n        if (inside) {\n          hit_fixture = fixture;\n          return false; // We are done, terminate the query.\n        }\n      }\n      return true; // Continue the query.\n    });\n\n    if (hit_fixture) {\n      const frequencyHz = 5.0;\n      const dampingRatio = 0.7;\n\n      const body = hit_fixture.GetBody();\n      const jd: b2.MouseJointDef = new b2.MouseJointDef();\n      jd.bodyA = this.m_groundBody;\n      jd.bodyB = body;\n      jd.target.Copy(p);\n      jd.maxForce = 1000 * body.GetMass();\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n\n      this.m_mouseJoint = this.m_world.CreateJoint(jd);\n      body.SetAwake(true);\n    }\n  }\n\n  public SpawnBomb(worldPt: b2.Vec2): void {\n    this.m_bombSpawnPoint.Copy(worldPt);\n    this.m_bombSpawning = true;\n  }\n\n  public CompleteBombSpawn(p: b2.Vec2): void {\n    if (!this.m_bombSpawning) {\n      return;\n    }\n\n    const multiplier: number = 30;\n    const vel: b2.Vec2 = b2.Vec2.SubVV(this.m_bombSpawnPoint, p, new b2.Vec2());\n    vel.SelfMul(multiplier);\n    this.LaunchBombAt(this.m_bombSpawnPoint, vel);\n    this.m_bombSpawning = false;\n  }\n\n  public ShiftMouseDown(p: b2.Vec2): void {\n    this.m_mouseWorld.Copy(p);\n\n    if (this.m_mouseJoint !== null) {\n      return;\n    }\n\n    this.SpawnBomb(p);\n  }\n\n  public MouseUp(p: b2.Vec2): void {\n    // #if B2_ENABLE_PARTICLE\n    this.m_mouseTracing = false;\n    // #endif\n    if (this.m_mouseJoint) {\n      this.m_world.DestroyJoint(this.m_mouseJoint);\n      this.m_mouseJoint = null;\n    }\n\n    if (this.m_bombSpawning) {\n      this.CompleteBombSpawn(p);\n    }\n  }\n\n  public MouseMove(p: b2.Vec2): void {\n    this.m_mouseWorld.Copy(p);\n\n    if (this.m_mouseJoint) {\n      this.m_mouseJoint.SetTarget(p);\n    }\n  }\n\n  public LaunchBomb(): void {\n    const p: b2.Vec2 = new b2.Vec2(b2.RandomRange(-15, 15), 30);\n    const v: b2.Vec2 = b2.Vec2.MulSV(-5, p, new b2.Vec2());\n    this.LaunchBombAt(p, v);\n  }\n\n  public LaunchBombAt(position: b2.Vec2, velocity: b2.Vec2): void {\n    if (this.m_bomb) {\n      this.m_world.DestroyBody(this.m_bomb);\n      this.m_bomb = null;\n    }\n\n    const bd: b2.BodyDef = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Copy(position);\n    bd.bullet = true;\n    this.m_bomb = this.m_world.CreateBody(bd);\n    this.m_bomb.SetLinearVelocity(velocity);\n\n    const circle: b2.CircleShape = new b2.CircleShape();\n    circle.m_radius = 0.3;\n\n    const fd: b2.FixtureDef = new b2.FixtureDef();\n    fd.shape = circle;\n    fd.density = 20;\n    fd.restitution = 0;\n\n    // b2.Vec2 minV = position - b2.Vec2(0.3f,0.3f);\n    // b2.Vec2 maxV = position + b2.Vec2(0.3f,0.3f);\n\n    // b2.AABB aabb;\n    // aabb.lowerBound = minV;\n    // aabb.upperBound = maxV;\n\n    this.m_bomb.CreateFixture(fd);\n  }\n\n  public Step(settings: Settings): void {\n    let timeStep = settings.m_hertz > 0 ? 1 / settings.m_hertz : 0;\n\n    if (settings.m_pause) {\n      if (settings.m_singleStep) {\n        settings.m_singleStep = false;\n      } else {\n        timeStep = 0;\n      }\n\n      g_debugDraw.DrawString(5, this.m_textLine, \"****PAUSED****\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n    }\n\n    let flags = b2.DrawFlags.e_none;\n    if (settings.m_drawShapes) { flags |= b2.DrawFlags.e_shapeBit;        }\n    // #if B2_ENABLE_PARTICLE\n    if (settings.m_drawParticles) { flags |= b2.DrawFlags.e_particleBit; }\n    // #endif\n    if (settings.m_drawJoints) { flags |= b2.DrawFlags.e_jointBit;        }\n    if (settings.m_drawAABBs ) { flags |= b2.DrawFlags.e_aabbBit;         }\n    if (settings.m_drawCOMs  ) { flags |= b2.DrawFlags.e_centerOfMassBit; }\n    // #if B2_ENABLE_CONTROLLER\n    if (settings.m_drawControllers  ) { flags |= b2.DrawFlags.e_controllerBit; }\n    // #endif\n    g_debugDraw.SetFlags(flags);\n\n    this.m_world.SetAllowSleeping(settings.m_enableSleep);\n    this.m_world.SetWarmStarting(settings.m_enableWarmStarting);\n    this.m_world.SetContinuousPhysics(settings.m_enableContinuous);\n    this.m_world.SetSubStepping(settings.m_enableSubStepping);\n    // #if B2_ENABLE_PARTICLE\n    this.m_particleSystem.SetStrictContactCheck(settings.m_strictContacts);\n    // #endif\n\n    this.m_pointCount = 0;\n\n    // #if B2_ENABLE_PARTICLE\n    this.m_world.Step(timeStep, settings.m_velocityIterations, settings.m_positionIterations, settings.m_particleIterations);\n    // #else\n    // this.m_world.Step(timeStep, settings.velocityIterations, settings.positionIterations);\n    // #endif\n\n    this.m_world.DebugDraw();\n\n    if (timeStep > 0) {\n      ++this.m_stepCount;\n    }\n\n    if (settings.m_drawStats) {\n      const bodyCount = this.m_world.GetBodyCount();\n      const contactCount = this.m_world.GetContactCount();\n      const jointCount = this.m_world.GetJointCount();\n      g_debugDraw.DrawString(5, this.m_textLine, \"bodies/contacts/joints = \" + bodyCount + \"/\" + contactCount + \"/\" + jointCount);\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n\n      // #if B2_ENABLE_PARTICLE\n      const particleCount = this.m_particleSystem.GetParticleCount();\n      const groupCount = this.m_particleSystem.GetParticleGroupCount();\n      const pairCount = this.m_particleSystem.GetPairCount();\n      const triadCount = this.m_particleSystem.GetTriadCount();\n      g_debugDraw.DrawString(5, this.m_textLine, \"particles/groups/pairs/triads = \" + particleCount + \"/\" + groupCount + \"/\" + pairCount + \"/\" + triadCount);\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      // #endif\n\n      const proxyCount = this.m_world.GetProxyCount();\n      const height = this.m_world.GetTreeHeight();\n      const balance = this.m_world.GetTreeBalance();\n      const quality = this.m_world.GetTreeQuality();\n      g_debugDraw.DrawString(5, this.m_textLine, \"proxies/height/balance/quality = \" + proxyCount + \"/\" + height + \"/\" + balance + \"/\" + quality.toFixed(2));\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n    }\n\n    // Track maximum profile times\n    {\n      const p = this.m_world.GetProfile();\n      this.m_maxProfile.step = b2.Max(this.m_maxProfile.step, p.step);\n      this.m_maxProfile.collide = b2.Max(this.m_maxProfile.collide, p.collide);\n      this.m_maxProfile.solve = b2.Max(this.m_maxProfile.solve, p.solve);\n      this.m_maxProfile.solveInit = b2.Max(this.m_maxProfile.solveInit, p.solveInit);\n      this.m_maxProfile.solveVelocity = b2.Max(this.m_maxProfile.solveVelocity, p.solveVelocity);\n      this.m_maxProfile.solvePosition = b2.Max(this.m_maxProfile.solvePosition, p.solvePosition);\n      this.m_maxProfile.solveTOI = b2.Max(this.m_maxProfile.solveTOI, p.solveTOI);\n      this.m_maxProfile.broadphase = b2.Max(this.m_maxProfile.broadphase, p.broadphase);\n\n      this.m_totalProfile.step += p.step;\n      this.m_totalProfile.collide += p.collide;\n      this.m_totalProfile.solve += p.solve;\n      this.m_totalProfile.solveInit += p.solveInit;\n      this.m_totalProfile.solveVelocity += p.solveVelocity;\n      this.m_totalProfile.solvePosition += p.solvePosition;\n      this.m_totalProfile.solveTOI += p.solveTOI;\n      this.m_totalProfile.broadphase += p.broadphase;\n    }\n\n    if (settings.m_drawProfile) {\n      const p = this.m_world.GetProfile();\n\n      const aveProfile: b2.Profile = new b2.Profile();\n      if (this.m_stepCount > 0) {\n        const scale: number = 1 / this.m_stepCount;\n        aveProfile.step = scale * this.m_totalProfile.step;\n        aveProfile.collide = scale * this.m_totalProfile.collide;\n        aveProfile.solve = scale * this.m_totalProfile.solve;\n        aveProfile.solveInit = scale * this.m_totalProfile.solveInit;\n        aveProfile.solveVelocity = scale * this.m_totalProfile.solveVelocity;\n        aveProfile.solvePosition = scale * this.m_totalProfile.solvePosition;\n        aveProfile.solveTOI = scale * this.m_totalProfile.solveTOI;\n        aveProfile.broadphase = scale * this.m_totalProfile.broadphase;\n      }\n\n      g_debugDraw.DrawString(5, this.m_textLine, \"step [ave] (max) = \" + p.step.toFixed(2) + \" [\" + aveProfile.step.toFixed(2) + \"] (\" + this.m_maxProfile.step.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      g_debugDraw.DrawString(5, this.m_textLine, \"collide [ave] (max) = \" + p.collide.toFixed(2) + \" [\" + aveProfile.collide.toFixed(2) + \"] (\" + this.m_maxProfile.collide.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve [ave] (max) = \" + p.solve.toFixed(2) + \" [\" + aveProfile.solve.toFixed(2) + \"] (\" + this.m_maxProfile.solve.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve init [ave] (max) = \" + p.solveInit.toFixed(2) + \" [\" + aveProfile.solveInit.toFixed(2) + \"] (\" + this.m_maxProfile.solveInit.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve velocity [ave] (max) = \" + p.solveVelocity.toFixed(2) + \" [\" + aveProfile.solveVelocity.toFixed(2) + \"] (\" + this.m_maxProfile.solveVelocity.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      g_debugDraw.DrawString(5, this.m_textLine, \"solve position [ave] (max) = \" + p.solvePosition.toFixed(2) + \" [\" + aveProfile.solvePosition.toFixed(2) + \"] (\" + this.m_maxProfile.solvePosition.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      g_debugDraw.DrawString(5, this.m_textLine, \"solveTOI [ave] (max) = \" + p.solveTOI.toFixed(2) + \" [\" + aveProfile.solveTOI.toFixed(2) + \"] (\" + this.m_maxProfile.solveTOI.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n      g_debugDraw.DrawString(5, this.m_textLine, \"broad-phase [ave] (max) = \" + p.broadphase.toFixed(2) + \" [\" + aveProfile.broadphase.toFixed(2) + \"] (\" + this.m_maxProfile.broadphase.toFixed(2) + \")\");\n      this.m_textLine += DRAW_STRING_NEW_LINE;\n    }\n\n    // #if B2_ENABLE_PARTICLE\n    if (this.m_mouseTracing && !this.m_mouseJoint) {\n      const delay = 0.1;\n      ///b2Vec2 acceleration = 2 / delay * (1 / delay * (m_mouseWorld - m_mouseTracerPosition) - m_mouseTracerVelocity);\n      const acceleration = new b2.Vec2();\n      acceleration.x = 2 / delay * (1 / delay * (this.m_mouseWorld.x - this.m_mouseTracerPosition.x) - this.m_mouseTracerVelocity.x);\n      acceleration.y = 2 / delay * (1 / delay * (this.m_mouseWorld.y - this.m_mouseTracerPosition.y) - this.m_mouseTracerVelocity.y);\n      ///m_mouseTracerVelocity += timeStep * acceleration;\n      this.m_mouseTracerVelocity.SelfMulAdd(timeStep, acceleration);\n      ///m_mouseTracerPosition += timeStep * m_mouseTracerVelocity;\n      this.m_mouseTracerPosition.SelfMulAdd(timeStep, this.m_mouseTracerVelocity);\n      const shape = new b2.CircleShape();\n      shape.m_p.Copy(this.m_mouseTracerPosition);\n      shape.m_radius = 2 * this.GetDefaultViewZoom();\n      ///QueryCallback2 callback(m_particleSystem, &shape, m_mouseTracerVelocity);\n      const callback = new QueryCallback2(this.m_particleSystem, shape, this.m_mouseTracerVelocity);\n      const aabb = new b2.AABB();\n      const xf = new b2.Transform();\n      xf.SetIdentity();\n      shape.ComputeAABB(aabb, xf, 0);\n      this.m_world.QueryAABB(callback, aabb);\n    }\n    // #endif\n\n    if (this.m_bombSpawning) {\n      const c: b2.Color = new b2.Color(0, 0, 1);\n      g_debugDraw.DrawPoint(this.m_bombSpawnPoint, 4, c);\n\n      c.SetRGB(0.8, 0.8, 0.8);\n      g_debugDraw.DrawSegment(this.m_mouseWorld, this.m_bombSpawnPoint, c);\n    }\n\n    if (settings.m_drawContactPoints) {\n      const k_impulseScale: number = 0.1;\n      const k_axisScale: number = 0.3;\n\n      for (let i: number = 0; i < this.m_pointCount; ++i) {\n        const point = this.m_points[i];\n\n        if (point.state === b2.PointState.b2_addState) {\n          // Add\n          g_debugDraw.DrawPoint(point.position, 10, new b2.Color(0.3, 0.95, 0.3));\n        } else if (point.state === b2.PointState.b2_persistState) {\n          // Persist\n          g_debugDraw.DrawPoint(point.position, 5, new b2.Color(0.3, 0.3, 0.95));\n        }\n\n        if (settings.m_drawContactNormals) {\n          const p1 = point.position;\n          const p2: b2.Vec2 = b2.Vec2.AddVV(p1, b2.Vec2.MulSV(k_axisScale, point.normal, b2.Vec2.s_t0), new b2.Vec2());\n          g_debugDraw.DrawSegment(p1, p2, new b2.Color(0.9, 0.9, 0.9));\n        } else if (settings.m_drawContactImpulse) {\n          const p1 = point.position;\n          const p2: b2.Vec2 = b2.Vec2.AddVMulSV(p1, k_impulseScale * point.normalImpulse, point.normal, new b2.Vec2());\n          g_debugDraw.DrawSegment(p1, p2, new b2.Color(0.9, 0.9, 0.3));\n        }\n\n        if (settings.m_drawFrictionImpulse) {\n          const tangent: b2.Vec2 = b2.Vec2.CrossVOne(point.normal, new b2.Vec2());\n          const p1 = point.position;\n          const p2: b2.Vec2 = b2.Vec2.AddVMulSV(p1, k_impulseScale * point.tangentImpulse, tangent, new b2.Vec2());\n          g_debugDraw.DrawSegment(p1, p2, new b2.Color(0.9, 0.9, 0.3));\n        }\n      }\n    }\n  }\n\n  public ShiftOrigin(newOrigin: b2.Vec2): void {\n    this.m_world.ShiftOrigin(newOrigin);\n  }\n\n  public GetDefaultViewZoom(): number {\n    return 1.0;\n  }\n\n  // #if B2_ENABLE_PARTICLE\n  public static readonly k_ParticleColors: b2.Color[] = [\n    new b2.Color().SetByteRGBA(0xff, 0x00, 0x00, 0xff), // red\n    new b2.Color().SetByteRGBA(0x00, 0xff, 0x00, 0xff), // green\n    new b2.Color().SetByteRGBA(0x00, 0x00, 0xff, 0xff), // blue\n    new b2.Color().SetByteRGBA(0xff, 0x8c, 0x00, 0xff), // orange\n    new b2.Color().SetByteRGBA(0x00, 0xce, 0xd1, 0xff), // turquoise\n    new b2.Color().SetByteRGBA(0xff, 0x00, 0xff, 0xff), // magenta\n    new b2.Color().SetByteRGBA(0xff, 0xd7, 0x00, 0xff), // gold\n    new b2.Color().SetByteRGBA(0x00, 0xff, 0xff, 0xff), // cyan\n  ];\n\n  public static readonly k_ParticleColorsCount = Test.k_ParticleColors.length;\n\n  /**\n   * Apply a preset range of colors to a particle group.\n   *\n   * A different color out of k_ParticleColors is applied to each\n   * particlesPerColor particles in the specified group.\n   *\n   * If particlesPerColor is 0, the particles in the group are\n   * divided into k_ParticleColorsCount equal sets of colored\n   * particles.\n   */\n  public ColorParticleGroup(group: b2.ParticleGroup, particlesPerColor: number) {\n    // DEBUG: b2.Assert(group !== null);\n    const colorBuffer = this.m_particleSystem.GetColorBuffer();\n    const particleCount = group.GetParticleCount();\n    const groupStart = group.GetBufferIndex();\n    const groupEnd = particleCount + groupStart;\n    const colorCount = Test.k_ParticleColors.length;\n    if (!particlesPerColor) {\n      particlesPerColor = Math.floor(particleCount / colorCount);\n      if (!particlesPerColor) {\n        particlesPerColor = 1;\n      }\n    }\n    for (let i = groupStart; i < groupEnd; i++) {\n      ///colorBuffer[i].Copy(box2d.Testbed.Test.k_ParticleColors[Math.floor(i / particlesPerColor) % colorCount]);\n      colorBuffer[i] = Test.k_ParticleColors[Math.floor(i / particlesPerColor) % colorCount].Clone();\n    }\n  }\n\n  /**\n   * Remove particle parameters matching \"filterMask\" from the set\n   * of particle parameters available for this test.\n   */\n  public InitializeParticleParameters(filterMask: number) {\n    const defaultNumValues = ParticleParameter.k_defaultDefinition[0].numValues;\n    const defaultValues = ParticleParameter.k_defaultDefinition[0].values;\n    ///  m_particleParameters = new ParticleParameter::Value[defaultNumValues];\n    this.m_particleParameters = [];\n    // Disable selection of wall and barrier particle types.\n    let numValues = 0;\n    for (let i = 0; i < defaultNumValues; i++) {\n      if (defaultValues[i].value & filterMask) {\n        continue;\n      }\n      ///memcpy(&m_particleParameters[numValues], &defaultValues[i], sizeof(defaultValues[0]));\n      this.m_particleParameters[numValues] = new ParticleParameterValue(defaultValues[i]);\n      numValues++;\n    }\n    this.m_particleParameterDef = new ParticleParameterDefinition(this.m_particleParameters, numValues);\n    ///m_particleParameterDef.values = m_particleParameters;\n    ///m_particleParameterDef.numValues = numValues;\n    Test.SetParticleParameters([this.m_particleParameterDef], 1);\n  }\n\n  /**\n   * Restore default particle parameters.\n   */\n  public RestoreParticleParameters() {\n    if (this.m_particleParameters) {\n      Test.SetParticleParameters(ParticleParameter.k_defaultDefinition, 1);\n      ///  delete [] m_particleParameters;\n      this.m_particleParameters = null;\n    }\n  }\n\n  /**\n   * Set whether to restart the test on particle parameter\n   * changes. This parameter is re-enabled when the test changes.\n   */\n  public static SetRestartOnParticleParameterChange(enable: boolean): void {\n    Test.particleParameter.SetRestartOnChange(enable);\n  }\n\n  /**\n   * Set the currently selected particle parameter value.  This\n   * value must match one of the values in\n   * Main::k_particleTypes or one of the values referenced by\n   * particleParameterDef passed to SetParticleParameters().\n   */\n  public static SetParticleParameterValue(value: number): number {\n    const index = Test.particleParameter.FindIndexByValue(value);\n    // If the particle type isn't found, so fallback to the first entry in the\n    // parameter.\n    Test.particleParameter.Set(index >= 0 ? index : 0);\n    return Test.particleParameter.GetValue();\n  }\n\n  /**\n   * Get the currently selected particle parameter value and\n   * enable particle parameter selection arrows on Android.\n   */\n  public static GetParticleParameterValue(): number {\n    // Enable display of particle type selection arrows.\n    Test.fullscreenUI.SetParticleParameterSelectionEnabled(true);\n    return Test.particleParameter.GetValue();\n  }\n\n  /**\n   * Override the default particle parameters for the test.\n   */\n  public static SetParticleParameters(particleParameterDef: ParticleParameterDefinition[], particleParameterDefCount: number = particleParameterDef.length) {\n    Test.particleParameter.SetDefinition(particleParameterDef, particleParameterDefCount);\n  }\n\n  // #endif\n}\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class AddPair extends testbed.Test {\n  constructor() {\n    super();\n\n    this.m_world.SetGravity(new b2.Vec2(0.0, 0.0));\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.SetZero();\n      shape.m_radius = 0.1;\n\n      const minX = -6.0;\n      const maxX = 0.0;\n      const minY = 4.0;\n      const maxY = 6.0;\n\n      for (let i = 0; i < 400; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(b2.RandomRange(minX, maxX), b2.RandomRange(minY, maxY));\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 0.01);\n      }\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(1.5, 1.5);\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-40.0, 5.0);\n      bd.bullet = true;\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(shape, 1.0);\n      body.SetLinearVelocity(new b2.Vec2(10.0, 0.0));\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new AddPair();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Benchmark\", \"Add Pair\", AddPair.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This test shows how to apply forces and torques to a body.\n// It also shows how to use the friction joint that can be useful\n// for overhead games.\nexport class ApplyForce extends testbed.Test {\n  public m_body: b2.Body;\n\n  constructor() {\n    super();\n\n    this.m_world.SetGravity(new b2.Vec2(0.0, 0.0));\n\n    const k_restitution = 0.4;\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(0.0, 20.0);\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n\n      const sd = new b2.FixtureDef();\n      sd.shape = shape;\n      sd.density = 0.0;\n      sd.restitution = k_restitution;\n\n      // Left vertical\n      shape.SetTwoSided(new b2.Vec2(-20.0, -20.0), new b2.Vec2(-20.0, 20.0));\n      ground.CreateFixture(sd);\n\n      // Right vertical\n      shape.SetTwoSided(new b2.Vec2(20.0, -20.0), new b2.Vec2(20.0, 20.0));\n      ground.CreateFixture(sd);\n\n      // Top horizontal\n      shape.SetTwoSided(new b2.Vec2(-20.0, 20.0), new b2.Vec2(20.0, 20.0));\n      ground.CreateFixture(sd);\n\n      // Bottom horizontal\n      shape.SetTwoSided(new b2.Vec2(-20.0, -20.0), new b2.Vec2(20.0, -20.0));\n      ground.CreateFixture(sd);\n    }\n\n    {\n      const xf1 = new b2.Transform();\n      xf1.q.SetAngle(0.3524 * b2.pi);\n      xf1.p.Copy(b2.Rot.MulRV(xf1.q, new b2.Vec2(1.0, 0.0), new b2.Vec2()));\n\n      const vertices = new Array();\n      vertices[0] = b2.Transform.MulXV(xf1, new b2.Vec2(-1.0, 0.0), new b2.Vec2());\n      vertices[1] = b2.Transform.MulXV(xf1, new b2.Vec2(1.0, 0.0), new b2.Vec2());\n      vertices[2] = b2.Transform.MulXV(xf1, new b2.Vec2(0.0, 0.5), new b2.Vec2());\n\n      const poly1 = new b2.PolygonShape();\n      poly1.Set(vertices, 3);\n\n      const sd1 = new b2.FixtureDef();\n      sd1.shape = poly1;\n      sd1.density = 2.0;\n\n      const xf2 = new b2.Transform();\n      xf2.q.SetAngle(-0.3524 * b2.pi);\n      xf2.p.Copy(b2.Rot.MulRV(xf2.q, new b2.Vec2(-1.0, 0.0), new b2.Vec2()));\n\n      vertices[0] = b2.Transform.MulXV(xf2, new b2.Vec2(-1.0, 0.0), new b2.Vec2());\n      vertices[1] = b2.Transform.MulXV(xf2, new b2.Vec2(1.0, 0.0), new b2.Vec2());\n      vertices[2] = b2.Transform.MulXV(xf2, new b2.Vec2(0.0, 0.5), new b2.Vec2());\n\n      const poly2 = new b2.PolygonShape();\n      poly2.Set(vertices, 3);\n\n      const sd2 = new b2.FixtureDef();\n      sd2.shape = poly2;\n      sd2.density = 2.0;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      bd.position.Set(0.0, 3.0);\n      bd.angle = b2.pi;\n      bd.allowSleep = false;\n      this.m_body = this.m_world.CreateBody(bd);\n      this.m_body.CreateFixture(sd1);\n      this.m_body.CreateFixture(sd2);\n\n      const gravity: number = 10.0;\n      const I: number = this.m_body.GetInertia();\n      const mass: number = this.m_body.GetMass();\n\n      // Compute an effective radius that can be used to\n      // set the max torque for a friction joint\n      // For a circle: I = 0.5 * m * r * r ==> r = sqrt(2 * I / m)\n      const radius: number = b2.Sqrt(2.0 * I / mass);\n\n      const jd = new b2.FrictionJointDef();\n      jd.bodyA = ground;\n      jd.bodyB = this.m_body;\n      jd.localAnchorA.SetZero();\n      jd.localAnchorB.Copy(this.m_body.GetLocalCenter());\n      jd.collideConnected = true;\n      jd.maxForce = 0.5 * mass * gravity;\n      jd.maxTorque = 0.2 * mass * radius * gravity;\n\n      this.m_world.CreateJoint(jd);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.5);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n      fd.friction = 0.3;\n\n      for (let i = 0; i < 10; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n\n        bd.position.Set(0.0, 7.0 + 1.54 * i);\n        const body = this.m_world.CreateBody(bd);\n\n        body.CreateFixture(fd);\n\n        const gravity = 10.0;\n        const I = body.GetInertia();\n        const mass = body.GetMass();\n\n        // For a circle: I = 0.5 * m * r * r ==> r = sqrt(2 * I / m)\n        const radius = b2.Sqrt(2.0 * I / mass);\n\n        const jd = new b2.FrictionJointDef();\n        jd.localAnchorA.SetZero();\n        jd.localAnchorB.SetZero();\n        jd.bodyA = ground;\n        jd.bodyB = body;\n        jd.collideConnected = true;\n        jd.maxForce = mass * gravity;\n        jd.maxTorque = 0.1 * mass * radius * gravity;\n\n        this.m_world.CreateJoint(jd);\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"w\":\n        {\n          const f = this.m_body.GetWorldVector(new b2.Vec2(0.0, -50.0), new b2.Vec2());\n          const p = this.m_body.GetWorldPoint(new b2.Vec2(0.0, 3.0), new b2.Vec2());\n          this.m_body.ApplyForce(f, p, true);\n        }\n        break;\n\n      case \"a\":\n        {\n          this.m_body.ApplyTorque(10.0, true);\n        }\n        break;\n\n      case \"d\":\n        {\n          this.m_body.ApplyTorque(-10.0, true);\n        }\n        break;\n    }\n\n    super.Keyboard(key);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Forward (W), Turn (A) and (D)`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new ApplyForce();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Forces\", \"Apply Force\", ApplyForce.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class BodyTypes extends testbed.Test {\n  public m_attachment: b2.Body;\n  public m_platform: b2.Body;\n  public m_speed = 0;\n\n  constructor() {\n    super();\n\n    const bd = new b2.BodyDef();\n    const ground = this.m_world.CreateBody(bd);\n\n    const shape = new b2.EdgeShape();\n    shape.SetTwoSided(new b2.Vec2(-20.0, 0.0), new b2.Vec2(20.0, 0.0));\n\n    const fd = new b2.FixtureDef();\n    fd.shape = shape;\n\n    ground.CreateFixture(fd);\n\n    // Define attachment\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 3.0);\n      this.m_attachment = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 2.0);\n      this.m_attachment.CreateFixture(shape, 2.0);\n    }\n\n    // Define platform\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-4.0, 5.0);\n      this.m_platform = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 4.0, new b2.Vec2(4.0, 0.0), 0.5 * b2.pi);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.friction = 0.6;\n      fd.density = 2.0;\n      this.m_platform.CreateFixture(fd);\n\n      const rjd = new b2.RevoluteJointDef();\n      rjd.Initialize(this.m_attachment, this.m_platform, new b2.Vec2(0.0, 5.0));\n      rjd.maxMotorTorque = 50.0;\n      rjd.enableMotor = true;\n      this.m_world.CreateJoint(rjd);\n\n      const pjd = new b2.PrismaticJointDef();\n      pjd.Initialize(ground, this.m_platform, new b2.Vec2(0.0, 5.0), new b2.Vec2(1.0, 0.0));\n\n      pjd.maxMotorForce = 1000.0;\n      pjd.enableMotor = true;\n      pjd.lowerTranslation = -10.0;\n      pjd.upperTranslation = 10.0;\n      pjd.enableLimit = true;\n\n      this.m_world.CreateJoint(pjd);\n\n      this.m_speed = 3.0;\n    }\n\n    // Create a payload\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 8.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.75, 0.75);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.friction = 0.6;\n      fd.density = 2.0;\n\n      body.CreateFixture(fd);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"d\":\n        this.m_platform.SetType(b2.BodyType.b2_dynamicBody);\n        break;\n\n      case \"s\":\n        this.m_platform.SetType(b2.BodyType.b2_staticBody);\n        break;\n\n      case \"k\":\n        this.m_platform.SetType(b2.BodyType.b2_kinematicBody);\n        this.m_platform.SetLinearVelocity(new b2.Vec2(-this.m_speed, 0.0));\n        this.m_platform.SetAngularVelocity(0.0);\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    // Drive the kinematic body.\n    if (this.m_platform.GetType() === b2.BodyType.b2_kinematicBody) {\n      const p = this.m_platform.GetTransform().p;\n      const v = this.m_platform.GetLinearVelocity();\n\n      if ((p.x < -10.0 && v.x < 0.0) ||\n        (p.x > 10.0 && v.x > 0.0)) {\n        this.m_platform.SetLinearVelocity(new b2.Vec2(-v.x, v.y));\n      }\n    }\n\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: (d) dynamic, (s) static, (k) kinematic\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new BodyTypes();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Body Types\", BodyTypes.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class BoxStack extends testbed.Test {\n  public static readonly e_columnCount = 1;\n  public static readonly e_rowCount = 15;\n\n  public m_bullet: b2.Body | null = null;\n  public m_bodies: b2.Body[];\n  public m_indices: number[];\n\n  constructor() {\n    super();\n\n    this.m_bodies = new Array(BoxStack.e_rowCount * BoxStack.e_columnCount);\n    this.m_indices = new Array(BoxStack.e_rowCount * BoxStack.e_columnCount);\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(new b2.Vec2(20.0, 0.0), new b2.Vec2(20.0, 20.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    const xs = [0.0, -10.0, -5.0, 5.0, 10.0];\n\n    for (let j = 0; j < BoxStack.e_columnCount; ++j) {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.5);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n      fd.friction = 0.3;\n\n      for (let i = 0; i < BoxStack.e_rowCount; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n\n        const n = j * BoxStack.e_rowCount + i;\n        // DEBUG: b2.Assert(n < BoxStack.e_rowCount * BoxStack.e_columnCount);\n        this.m_indices[n] = n;\n        bd.userData = this.m_indices[n];\n\n        const x = 0.0;\n        //const x = b2.RandomRange(-0.02, 0.02);\n        //const x = i % 2 === 0 ? -0.01 : 0.01;\n        bd.position.Set(xs[j] + x, 0.55 + 1.1 * i);\n        const body = this.m_world.CreateBody(bd);\n\n        this.m_bodies[n] = body;\n\n        body.CreateFixture(fd);\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \",\":\n        if (this.m_bullet) {\n          this.m_world.DestroyBody(this.m_bullet);\n          this.m_bullet = null;\n        }\n\n        {\n          const shape = new b2.CircleShape();\n          shape.m_radius = 0.25;\n\n          const fd = new b2.FixtureDef();\n          fd.shape = shape;\n          fd.density = 20.0;\n          fd.restitution = 0.05;\n\n          const bd = new b2.BodyDef();\n          bd.type = b2.BodyType.b2_dynamicBody;\n          bd.bullet = true;\n          bd.position.Set(-31.0, 5.0);\n\n          this.m_bullet = this.m_world.CreateBody(bd);\n          this.m_bullet.CreateFixture(fd);\n\n          this.m_bullet.SetLinearVelocity(new b2.Vec2(400.0, 0.0));\n        }\n        break;\n      case \"b\":\n        b2.set_g_blockSolve(!b2.get_g_blockSolve());\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press: (,) to launch a bullet.\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    // testbed.g_debugDraw.DrawString(5, this.m_textLine, `Blocksolve = ${(b2.blockSolve) ? (1) : (0)}`);\n    //if (this.m_stepCount === 300)\n    //{\n    //  if (this.m_bullet !== null)\n    //  {\n    //    this.m_world.DestroyBody(this.m_bullet);\n    //    this.m_bullet = null;\n    //  }\n\n    //  {\n    //    const shape = new b2.CircleShape();\n    //    shape.m_radius = 0.25;\n\n    //    const fd = new b2.FixtureDef();\n    //    fd.shape = shape;\n    //    fd.density = 20.0;\n    //    fd.restitution = 0.05;\n\n    //    const bd = new b2.BodyDef();\n    //    bd.type = b2.BodyType.b2_dynamicBody;\n    //    bd.bullet = true;\n    //    bd.position.Set(-31.0, 5.0);\n\n    //    this.m_bullet = this.m_world.CreateBody(bd);\n    //    this.m_bullet.CreateFixture(fd);\n\n    //    this.m_bullet.SetLinearVelocity(new b2.Vec2(400.0, 0.0));\n    //  }\n    //}\n  }\n\n  public static Create(): testbed.Test {\n    return new BoxStack();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Stacking\", \"Boxes\", BoxStack.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This is used to test sensor shapes.\nexport class Breakable extends testbed.Test {\n  public static readonly e_count = 7;\n\n  public readonly m_body1: b2.Body;\n  public readonly m_velocity = new b2.Vec2();\n  public m_angularVelocity = 0;\n  public readonly m_shape1 = new b2.PolygonShape();\n  public readonly m_shape2 = new b2.PolygonShape();\n  public m_piece1: b2.Fixture | null = null;\n  public m_piece2: b2.Fixture | null = null;\n  public m_broke = false;\n  public m_break = false;\n\n  constructor() {\n    super();\n\n    // Ground body\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Breakable dynamic body\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 40.0);\n      bd.angle = 0.25 * b2.pi;\n      this.m_body1 = this.m_world.CreateBody(bd);\n\n      this.m_shape1 = new b2.PolygonShape();\n      this.m_shape1.SetAsBox(0.5, 0.5, new b2.Vec2(-0.5, 0.0), 0.0);\n      this.m_piece1 = this.m_body1.CreateFixture(this.m_shape1, 1.0);\n\n      this.m_shape2 = new b2.PolygonShape();\n      this.m_shape2.SetAsBox(0.5, 0.5, new b2.Vec2(0.5, 0.0), 0.0);\n      this.m_piece2 = this.m_body1.CreateFixture(this.m_shape2, 1.0);\n    }\n  }\n\n  public PostSolve(contact: b2.Contact, impulse: b2.ContactImpulse) {\n    if (this.m_broke) {\n      // The body already broke.\n      return;\n    }\n\n    // Should the body break?\n    const count = contact.GetManifold().pointCount;\n\n    let maxImpulse = 0.0;\n    for (let i = 0; i < count; ++i) {\n      maxImpulse = b2.Max(maxImpulse, impulse.normalImpulses[i]);\n    }\n\n    if (maxImpulse > 40.0) {\n      // Flag the body for breaking.\n      this.m_break = true;\n    }\n  }\n\n  public Break() {\n    if (this.m_piece1 === null) { return; }\n    if (this.m_piece2 === null) { return; }\n    // Create two bodies from one.\n    const body1 = this.m_piece1.GetBody();\n    const center = body1.GetWorldCenter();\n\n    body1.DestroyFixture(this.m_piece2);\n    this.m_piece2 = null;\n\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Copy(body1.GetPosition());\n    bd.angle = body1.GetAngle();\n\n    const body2 = this.m_world.CreateBody(bd);\n    this.m_piece2 = body2.CreateFixture(this.m_shape2, 1.0);\n\n    // Compute consistent velocities for new bodies based on\n    // cached velocity.\n    const center1 = body1.GetWorldCenter();\n    const center2 = body2.GetWorldCenter();\n\n    const velocity1 = b2.Vec2.AddVCrossSV(this.m_velocity, this.m_angularVelocity, b2.Vec2.SubVV(center1, center, b2.Vec2.s_t0), new b2.Vec2());\n    const velocity2 = b2.Vec2.AddVCrossSV(this.m_velocity, this.m_angularVelocity, b2.Vec2.SubVV(center2, center, b2.Vec2.s_t0), new b2.Vec2());\n\n    body1.SetAngularVelocity(this.m_angularVelocity);\n    body1.SetLinearVelocity(velocity1);\n\n    body2.SetAngularVelocity(this.m_angularVelocity);\n    body2.SetLinearVelocity(velocity2);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    if (this.m_break) {\n      this.Break();\n      this.m_broke = true;\n      this.m_break = false;\n    }\n\n    // Cache velocities to improve movement on breakage.\n    if (!this.m_broke) {\n      this.m_velocity.Copy(this.m_body1.GetLinearVelocity());\n      this.m_angularVelocity = this.m_body1.GetAngularVelocity();\n    }\n\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Breakable();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Breakable\", Breakable.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Bridge extends testbed.Test {\n  public static readonly e_count = 30;\n\n  public m_middle!: b2.Body;\n\n  constructor() {\n    super();\n\n    let ground = null;\n\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.125);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      fd.friction = 0.2;\n\n      const jd = new b2.RevoluteJointDef();\n\n      let prevBody = ground;\n      for (let i = 0; i < Bridge.e_count; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-14.5 + 1.0 * i, 5.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(fd);\n\n        const anchor = new b2.Vec2(-15.0 + 1.0 * i, 5.0);\n        jd.Initialize(prevBody, body, anchor);\n        this.m_world.CreateJoint(jd);\n\n        if (i === (Bridge.e_count >> 1)) {\n          this.m_middle = body;\n        }\n        prevBody = body;\n      }\n\n      const anchor = new b2.Vec2(-15.0 + 1.0 * Bridge.e_count, 5.0);\n      jd.Initialize(prevBody, ground, anchor);\n      this.m_world.CreateJoint(jd);\n    }\n\n    for (let i = 0; i < 2; ++i) {\n      const vertices = new Array();\n      vertices[0] = new b2.Vec2(-0.5, 0.0);\n      vertices[1] = new b2.Vec2(0.5, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n\n      const shape = new b2.PolygonShape();\n      shape.Set(vertices);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-8.0 + 8.0 * i, 12.0);\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(fd);\n    }\n\n    for (let i = 0; i < 3; ++i) {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.5;\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-6.0 + 6.0 * i, 10.0);\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(fd);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Bridge();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Bridge\", Bridge.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class BulletTest extends testbed.Test {\n  public m_body: b2.Body;\n  public m_bullet: b2.Body;\n  public m_x: number = 0;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(0.0, 0.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const edge = new b2.EdgeShape();\n\n      edge.SetTwoSided(new b2.Vec2(-10.0, 0.0), new b2.Vec2(10.0, 0.0));\n      body.CreateFixture(edge, 0.0);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.2, 1.0, new b2.Vec2(0.5, 1.0), 0.0);\n      body.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 4.0);\n\n      const box = new b2.PolygonShape();\n      box.SetAsBox(2.0, 0.1);\n\n      this.m_body = this.m_world.CreateBody(bd);\n      this.m_body.CreateFixture(box, 1.0);\n\n      box.SetAsBox(0.25, 0.25);\n\n      //this.m_x = b2.RandomRange(-1.0, 1.0);\n      this.m_x = 0.20352793;\n      bd.position.Set(this.m_x, 10.0);\n      bd.bullet = true;\n\n      this.m_bullet = this.m_world.CreateBody(bd);\n      this.m_bullet.CreateFixture(box, 100.0);\n\n      this.m_bullet.SetLinearVelocity(new b2.Vec2(0.0, -50.0));\n    }\n  }\n\n  public Launch() {\n    this.m_body.SetTransformVec(new b2.Vec2(0.0, 4.0), 0.0);\n    this.m_body.SetLinearVelocity(b2.Vec2_zero);\n    this.m_body.SetAngularVelocity(0.0);\n\n    this.m_x = b2.RandomRange(-1.0, 1.0);\n    this.m_bullet.SetTransformVec(new b2.Vec2(this.m_x, 10.0), 0.0);\n    this.m_bullet.SetLinearVelocity(new b2.Vec2(0.0, -50.0));\n    this.m_bullet.SetAngularVelocity(0.0);\n\n    //  extern int32 b2.gjkCalls, b2.gjkIters, b2.gjkMaxIters;\n    //  extern int32 b2.toiCalls, b2.toiIters, b2.toiMaxIters;\n    //  extern int32 b2.toiRootIters, b2.toiMaxRootIters;\n\n    // b2.gjkCalls = 0;\n    // b2.gjkIters = 0;\n    // b2.gjkMaxIters = 0;\n    b2.gjk_reset();\n\n    // b2.toiCalls = 0;\n    // b2.toiIters = 0;\n    // b2.toiMaxIters = 0;\n    // b2.toiRootIters = 0;\n    // b2.toiMaxRootIters = 0;\n    b2.toi_reset();\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    if (b2.gjkCalls > 0) {\n      // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"gjk calls = %d, ave gjk iters = %3.1f, max gjk iters = %d\",\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `gjk calls = ${b2.gjkCalls.toFixed(0)}, ave gjk iters = ${(b2.gjkIters / b2.gjkCalls).toFixed(1)}, max gjk iters = ${b2.gjkMaxIters.toFixed(0)}`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    }\n\n    if (b2.toiCalls > 0) {\n      // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"toi calls = %d, ave toi iters = %3.1f, max toi iters = %d\",\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `toi calls = ${b2.toiCalls}, ave toi iters = ${(b2.toiIters / b2.toiCalls).toFixed(1)}, max toi iters = ${b2.toiMaxRootIters}`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n      // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"ave toi root iters = %3.1f, max toi root iters = %d\",\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `ave toi root iters = ${(b2.toiRootIters / b2.toiCalls).toFixed(1)}, max toi root iters = ${b2.toiMaxRootIters}`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    }\n\n    if (this.m_stepCount % 60 === 0) {\n      this.Launch();\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new BulletTest();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Continuous\", \"Bullet Test\", BulletTest.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// It is difficult to make a cantilever made of links completely rigid with weld joints.\n// You will have to use a high number of iterations to make them stiff.\n// So why not go ahead and use soft weld joints? They behave like a revolute\n// joint with a rotational spring.\nexport class Cantilever extends testbed.Test {\n  public static readonly e_count = 8;\n\n  constructor() {\n    super();\n\n    let ground = null;\n\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.125);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n\n      const jd = new b2.WeldJointDef();\n\n      let prevBody = ground;\n      for (let i = 0; i < Cantilever.e_count; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-14.5 + 1.0 * i, 5.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(fd);\n\n        const anchor = new b2.Vec2(-15.0 + 1.0 * i, 5.0);\n        jd.Initialize(prevBody, body, anchor);\n        this.m_world.CreateJoint(jd);\n\n        prevBody = body;\n      }\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(1.0, 0.125);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n\n      const jd = new b2.WeldJointDef();\n      const frequencyHz: number = 5.0;\n      const dampingRatio: number = 0.7;\n\n      let prevBody = ground;\n      for (let i = 0; i < 3; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-14.0 + 2.0 * i, 15.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(fd);\n\n        const anchor = new b2.Vec2(-15.0 + 2.0 * i, 15.0);\n        jd.Initialize(prevBody, body, anchor);\n\t\t\t\tb2.AngularStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n        this.m_world.CreateJoint(jd);\n\n        prevBody = body;\n      }\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.125);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n\n      const jd = new b2.WeldJointDef();\n\n      let prevBody = ground;\n      for (let i = 0; i < Cantilever.e_count; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-4.5 + 1.0 * i, 15.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(fd);\n\n        if (i > 0) {\n          const anchor = new b2.Vec2(-5.0 + 1.0 * i, 15.0);\n          jd.Initialize(prevBody, body, anchor);\n          this.m_world.CreateJoint(jd);\n        }\n\n        prevBody = body;\n      }\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.125);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n\n      const jd = new b2.WeldJointDef();\n      const frequencyHz: number = 8.0;\n      const dampingRatio: number = 0.7;\n\n      let prevBody = ground;\n      for (let i = 0; i < Cantilever.e_count; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(5.5 + 1.0 * i, 10.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(fd);\n\n        if (i > 0) {\n          const anchor = new b2.Vec2(5.0 + 1.0 * i, 10.0);\n          jd.Initialize(prevBody, body, anchor);\n          b2.AngularStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n          this.m_world.CreateJoint(jd);\n        }\n\n        prevBody = body;\n      }\n    }\n\n    for (let i = 0; i < 2; ++i) {\n      const vertices = new Array();\n      vertices[0] = new b2.Vec2(-0.5, 0.0);\n      vertices[1] = new b2.Vec2(0.5, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n\n      const shape = new b2.PolygonShape();\n      shape.Set(vertices);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-8.0 + 8.0 * i, 12.0);\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(fd);\n    }\n\n    for (let i = 0; i < 2; ++i) {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.5;\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-6.0 + 6.0 * i, 10.0);\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(fd);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Cantilever();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Cantilever\", Cantilever.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This is a fun demo that shows off the wheel joint\nexport class Car extends testbed.Test {\n  public m_car: b2.Body;\n  public m_wheel1: b2.Body;\n  public m_wheel2: b2.Body;\n  public m_speed: number = 0.0;\n  public m_spring1: b2.WheelJoint;\n  public m_spring2: b2.WheelJoint;\n\n  constructor() {\n    super();\n\n    this.m_speed = 50.0;\n\n    let ground: b2.Body;\n    {\n      const bd: b2.BodyDef = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape: b2.EdgeShape = new b2.EdgeShape();\n\n      const fd: b2.FixtureDef = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 0.0;\n      fd.friction = 0.6;\n\n      shape.SetTwoSided(new b2.Vec2(-20.0, 0.0), new b2.Vec2(20.0, 0.0));\n      ground.CreateFixture(fd);\n\n      const hs: number[] = [0.25, 1.0, 4.0, 0.0, 0.0, -1.0, -2.0, -2.0, -1.25, 0.0];\n\n      let x: number = 20.0, y1: number = 0.0;\n      const dx: number = 5.0;\n\n      for (let i: number = 0; i < 10; ++i) {\n        const y2: number = hs[i];\n        shape.SetTwoSided(new b2.Vec2(x, y1), new b2.Vec2(x + dx, y2));\n        ground.CreateFixture(fd);\n        y1 = y2;\n        x += dx;\n      }\n\n      for (let i: number = 0; i < 10; ++i) {\n        const y2: number = hs[i];\n        shape.SetTwoSided(new b2.Vec2(x, y1), new b2.Vec2(x + dx, y2));\n        ground.CreateFixture(fd);\n        y1 = y2;\n        x += dx;\n      }\n\n      shape.SetTwoSided(new b2.Vec2(x, 0.0), new b2.Vec2(x + 40.0, 0.0));\n      ground.CreateFixture(fd);\n\n      x += 80.0;\n      shape.SetTwoSided(new b2.Vec2(x, 0.0), new b2.Vec2(x + 40.0, 0.0));\n      ground.CreateFixture(fd);\n\n      x += 40.0;\n      shape.SetTwoSided(new b2.Vec2(x, 0.0), new b2.Vec2(x + 10.0, 5.0));\n      ground.CreateFixture(fd);\n\n      x += 20.0;\n      shape.SetTwoSided(new b2.Vec2(x, 0.0), new b2.Vec2(x + 40.0, 0.0));\n      ground.CreateFixture(fd);\n\n      x += 40.0;\n      shape.SetTwoSided(new b2.Vec2(x, 0.0), new b2.Vec2(x, 20.0));\n      ground.CreateFixture(fd);\n    }\n\n    // Teeter\n    {\n      const bd: b2.BodyDef = new b2.BodyDef();\n      bd.position.Set(140.0, 1.0);\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body: b2.Body = this.m_world.CreateBody(bd);\n\n      const box: b2.PolygonShape = new b2.PolygonShape();\n      box.SetAsBox(10.0, 0.25);\n      body.CreateFixture(box, 1.0);\n\n      const jd: b2.RevoluteJointDef = new b2.RevoluteJointDef();\n      jd.Initialize(ground, body, body.GetPosition());\n      jd.lowerAngle = -8.0 * b2.pi / 180.0;\n      jd.upperAngle = 8.0 * b2.pi / 180.0;\n      jd.enableLimit = true;\n      this.m_world.CreateJoint(jd);\n\n      body.ApplyAngularImpulse(100.0);\n    }\n\n    // Bridge\n    {\n      const N: number = 20;\n      const shape: b2.PolygonShape = new b2.PolygonShape();\n      shape.SetAsBox(1.0, 0.125);\n\n      const fd: b2.FixtureDef = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n      fd.friction = 0.6;\n\n      const jd: b2.RevoluteJointDef = new b2.RevoluteJointDef();\n\n      let prevBody: b2.Body = ground;\n      for (let i: number = 0; i < N; ++i) {\n        const bd: b2.BodyDef = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(161.0 + 2.0 * i, -0.125);\n        const body: b2.Body = this.m_world.CreateBody(bd);\n        body.CreateFixture(fd);\n\n        const anchor: b2.Vec2 = new b2.Vec2(160.0 + 2.0 * i, -0.125);\n        jd.Initialize(prevBody, body, anchor);\n        this.m_world.CreateJoint(jd);\n\n        prevBody = body;\n      }\n\n      const anchor: b2.Vec2 = new b2.Vec2(160.0 + 2.0 * N, -0.125);\n      jd.Initialize(prevBody, ground, anchor);\n      this.m_world.CreateJoint(jd);\n    }\n\n    // Boxes\n    {\n      const box: b2.PolygonShape = new b2.PolygonShape();\n      box.SetAsBox(0.5, 0.5);\n\n      let body: b2.Body;\n      const bd: b2.BodyDef = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      bd.position.Set(230.0, 0.5);\n      body = this.m_world.CreateBody(bd);\n      body.CreateFixture(box, 0.5);\n\n      bd.position.Set(230.0, 1.5);\n      body = this.m_world.CreateBody(bd);\n      body.CreateFixture(box, 0.5);\n\n      bd.position.Set(230.0, 2.5);\n      body = this.m_world.CreateBody(bd);\n      body.CreateFixture(box, 0.5);\n\n      bd.position.Set(230.0, 3.5);\n      body = this.m_world.CreateBody(bd);\n      body.CreateFixture(box, 0.5);\n\n      bd.position.Set(230.0, 4.5);\n      body = this.m_world.CreateBody(bd);\n      body.CreateFixture(box, 0.5);\n    }\n\n    // Car\n    {\n      const chassis: b2.PolygonShape = new b2.PolygonShape();\n      const vertices: b2.Vec2[] = b2.Vec2.MakeArray(8);\n      vertices[0].Set(-1.5, -0.5);\n      vertices[1].Set(1.5, -0.5);\n      vertices[2].Set(1.5, 0.0);\n      vertices[3].Set(0.0, 0.9);\n      vertices[4].Set(-1.15, 0.9);\n      vertices[5].Set(-1.5, 0.2);\n      chassis.Set(vertices, 6);\n\n      const circle: b2.CircleShape = new b2.CircleShape();\n      circle.m_radius = 0.4;\n\n      const bd: b2.BodyDef = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 1.0);\n      this.m_car = this.m_world.CreateBody(bd);\n      this.m_car.CreateFixture(chassis, 1.0);\n\n      const fd: b2.FixtureDef = new b2.FixtureDef();\n      fd.shape = circle;\n      fd.density = 1.0;\n      fd.friction = 0.9;\n\n      bd.position.Set(-1.0, 0.35);\n      this.m_wheel1 = this.m_world.CreateBody(bd);\n      this.m_wheel1.CreateFixture(fd);\n\n      bd.position.Set(1.0, 0.4);\n      this.m_wheel2 = this.m_world.CreateBody(bd);\n      this.m_wheel2.CreateFixture(fd);\n\n      const jd: b2.WheelJointDef = new b2.WheelJointDef();\n      const axis: b2.Vec2 = new b2.Vec2(0.0, 1.0);\n\n\t\t\tconst mass1: number = this.m_wheel1.GetMass();\n\t\t\tconst mass2: number = this.m_wheel2.GetMass();\n\n\t\t\tconst hertz: number = 4.0;\n\t\t\tconst dampingRatio: number = 0.7;\n\t\t\tconst omega: number = 2.0 * b2.pi * hertz;\n\n      jd.Initialize(this.m_car, this.m_wheel1, this.m_wheel1.GetPosition(), axis);\n      jd.motorSpeed = 0.0;\n      jd.maxMotorTorque = 20.0;\n      jd.enableMotor = true;\n\t\t\tjd.stiffness = mass1 * omega * omega;\n\t\t\tjd.damping = 2.0 * mass1 * dampingRatio * omega;\n\t\t\tjd.lowerTranslation = -0.25;\n\t\t\tjd.upperTranslation = 0.25;\n\t\t\tjd.enableLimit = true;\n      this.m_spring1 = this.m_world.CreateJoint(jd);\n\n      jd.Initialize(this.m_car, this.m_wheel2, this.m_wheel2.GetPosition(), axis);\n      jd.motorSpeed = 0.0;\n      jd.maxMotorTorque = 10.0;\n      jd.enableMotor = false;\n\t\t\tjd.stiffness = mass2 * omega * omega;\n\t\t\tjd.damping = 2.0 * mass2 * dampingRatio * omega;\n\t\t\tjd.lowerTranslation = -0.25;\n\t\t\tjd.upperTranslation = 0.25;\n\t\t\tjd.enableLimit = true;\n      this.m_spring2 = this.m_world.CreateJoint(jd);\n    }\n  }\n\n  public Keyboard(key: string): void {\n    switch (key) {\n    case \"a\":\n      this.m_spring1.SetMotorSpeed(this.m_speed);\n      break;\n\n    case \"s\":\n      this.m_spring1.SetMotorSpeed(0.0);\n      break;\n\n    case \"d\":\n      this.m_spring1.SetMotorSpeed(-this.m_speed);\n      break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: left = a, brake = s, right = d, hz down = q, hz up = e\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    testbed.g_camera.m_center.x = this.m_car.GetPosition().x;\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Car();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Car\", Car.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nconst TEST_BAD_BODY: boolean = false;\n\nexport class Chain extends testbed.Test {\n  public static readonly e_count = 30;\n\n  constructor() {\n    super();\n\n    let ground = null;\n\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.6, 0.125);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      fd.friction = 0.2;\n\n      const jd = new b2.RevoluteJointDef();\n      jd.collideConnected = false;\n\n      const y = 25.0;\n      let prevBody = ground;\n      for (let i = 0; i < Chain.e_count; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(0.5 + i, y);\n        const body = this.m_world.CreateBody(bd);\n\n        if (TEST_BAD_BODY) {\n          if (i === 10) {\n            // Test zero density dynamic body\n            fd.density = 0.0;\n          } else {\n            fd.density = 20.0;\n          }\n        }\n\n        body.CreateFixture(fd);\n\n        const anchor = new b2.Vec2(i, y);\n        jd.Initialize(prevBody, body, anchor);\n        this.m_world.CreateJoint(jd);\n\n        prevBody = body;\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Chain();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Chain\", Chain.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/// This is a test of typical character collision scenarios. This does not\n/// show how you should implement a character in your application.\n/// Instead this is used to test smooth collision on edge chains.\nexport class CharacterCollision extends testbed.Test {\n  public m_character: b2.Body;\n\n  constructor() {\n    super();\n\n    // Ground body\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-20.0, 0.0), new b2.Vec2(20.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Collinear edges with no adjacency information.\n    // This shows the problematic case where a box shape can hit\n    // an internal vertex.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-8.0, 1.0), new b2.Vec2(-6.0, 1.0));\n      ground.CreateFixture(shape, 0.0);\n      shape.SetTwoSided(new b2.Vec2(-6.0, 1.0), new b2.Vec2(-4.0, 1.0));\n      ground.CreateFixture(shape, 0.0);\n      shape.SetTwoSided(new b2.Vec2(-4.0, 1.0), new b2.Vec2(-2.0, 1.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Chain shape\n    {\n      const bd = new b2.BodyDef();\n      bd.angle = 0.25 * b2.pi;\n      const ground = this.m_world.CreateBody(bd);\n\n      const vs = b2.Vec2.MakeArray(4);\n      vs[0].Set(5.0, 7.0);\n      vs[1].Set(6.0, 8.0);\n      vs[2].Set(7.0, 8.0);\n      vs[3].Set(8.0, 7.0);\n      const shape = new b2.ChainShape();\n      shape.CreateLoop(vs);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Square tiles. This shows that adjacency shapes may\n    // have non-smooth collision. There is no solution\n    // to this problem.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(1.0, 1.0, new b2.Vec2(4.0, 3.0), 0.0);\n      ground.CreateFixture(shape, 0.0);\n      shape.SetAsBox(1.0, 1.0, new b2.Vec2(6.0, 3.0), 0.0);\n      ground.CreateFixture(shape, 0.0);\n      shape.SetAsBox(1.0, 1.0, new b2.Vec2(8.0, 3.0), 0.0);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Square made from an edge loop. Collision should be smooth.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const vs = b2.Vec2.MakeArray(4);\n      vs[0].Set(-1.0, 3.0);\n      vs[1].Set(1.0, 3.0);\n      vs[2].Set(1.0, 5.0);\n      vs[3].Set(-1.0, 5.0);\n      const shape = new b2.ChainShape();\n      shape.CreateLoop(vs);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Edge loop. Collision should be smooth.\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(-10.0, 4.0);\n      const ground = this.m_world.CreateBody(bd);\n\n      const vs = b2.Vec2.MakeArray(10);\n      vs[0].Set(0.0, 0.0);\n      vs[1].Set(6.0, 0.0);\n      vs[2].Set(6.0, 2.0);\n      vs[3].Set(4.0, 1.0);\n      vs[4].Set(2.0, 2.0);\n      vs[5].Set(0.0, 2.0);\n      vs[6].Set(-2.0, 2.0);\n      vs[7].Set(-4.0, 3.0);\n      vs[8].Set(-6.0, 2.0);\n      vs[9].Set(-6.0, 0.0);\n      const shape = new b2.ChainShape();\n      shape.CreateLoop(vs);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Square character 1\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(-3.0, 8.0);\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.fixedRotation = true;\n      bd.allowSleep = false;\n\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.5);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      body.CreateFixture(fd);\n    }\n\n    // Square character 2\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(-5.0, 5.0);\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.fixedRotation = true;\n      bd.allowSleep = false;\n\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.25, 0.25);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      body.CreateFixture(fd);\n    }\n\n    // Hexagon character\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(-5.0, 8.0);\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.fixedRotation = true;\n      bd.allowSleep = false;\n\n      const body = this.m_world.CreateBody(bd);\n\n      let angle = 0.0;\n      const delta = b2.pi / 3.0;\n      const vertices = b2.Vec2.MakeArray(6);\n      for (let i = 0; i < 6; ++i) {\n        vertices[i].Set(0.5 * b2.Cos(angle), 0.5 * b2.Sin(angle));\n        angle += delta;\n      }\n\n      const shape = new b2.PolygonShape();\n      shape.Set(vertices, 6);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      body.CreateFixture(fd);\n    }\n\n    // Circle character\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(3.0, 5.0);\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.fixedRotation = true;\n      bd.allowSleep = false;\n\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.5;\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      body.CreateFixture(fd);\n    }\n\n    // Circle character\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(-7.0, 6.0);\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.allowSleep = false;\n\n      this.m_character = this.m_world.CreateBody(bd);\n\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.25;\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      fd.friction = 1.0;\n      this.m_character.CreateFixture(fd);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    const v = this.m_character.GetLinearVelocity().Clone();\n    v.x = -5.0;\n    this.m_character.SetLinearVelocity(v);\n\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"This tests various character collision shapes\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Limitation: square and hexagon can snag on aligned boxes.\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Feature: edge chains have smooth collision inside and out.\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new CharacterCollision();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Character Collision\", CharacterCollision.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class CircleStack extends testbed.Test {\n  public static readonly e_count: number = 10;\n\n  public m_bodies: b2.Body[] = [];\n\n  constructor() {\n    super();\n\n    {\n      const bd: b2.BodyDef = new b2.BodyDef();\n      const ground: b2.Body = this.m_world.CreateBody(bd);\n\n      const shape: b2.EdgeShape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape: b2.CircleShape = new b2.CircleShape();\n      shape.m_radius = 1.0;\n\n      for (let i: number = 0; i < CircleStack.e_count; ++i) {\n        const bd: b2.BodyDef = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(0.0, 4.0 + 3.0 * i);\n\n        this.m_bodies[i] = this.m_world.CreateBody(bd);\n\n        this.m_bodies[i].CreateFixture(shape, 1.0);\n\n        this.m_bodies[i].SetLinearVelocity(new b2.Vec2(0.0, -50.0));\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    // for (let i: number = 0; i < CircleStack.e_count; ++i)\n    // {\n    //   printf(\"%g \", this.m_bodies[i].GetWorldCenter().y);\n    // }\n\n    // for (let i: number = 0; i < CircleStack.e_count; ++i)\n    // {\n    //   printf(\"%g \", this.m_bodies[i].GetLinearVelocity().y);\n    // }\n\n    // printf(\"\\n\");\n  }\n\n  public static Create(): testbed.Test {\n    return new CircleStack();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Stacking\", \"Circles\", CircleStack.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This is a test of collision filtering.\n// There is a triangle, a box, and a circle.\n// There are 6 shapes. 3 large and 3 small.\n// The 3 small ones always collide.\n// The 3 large ones never collide.\n// The boxes don't collide with triangles (except if both are small).\nexport class CollisionFiltering extends testbed.Test {\n  public static readonly k_smallGroup = 1;\n  public static readonly k_largeGroup = -1;\n  public static readonly k_triangleCategory = 0x0002;\n  public static readonly k_boxCategory = 0x0004;\n  public static readonly k_circleCategory = 0x0008;\n  public static readonly k_triangleMask = 0xFFFF;\n  public static readonly k_boxMask = 0xFFFF ^ CollisionFiltering.k_triangleCategory;\n  public static readonly k_circleMask = 0xFFFF;\n\n  constructor() {\n    super();\n\n    // Ground body\n    {\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n\n      const sd = new b2.FixtureDef();\n      sd.shape = shape;\n      sd.friction = 0.3;\n\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(sd);\n    }\n\n    // Small triangle\n    const vertices = new Array();\n    vertices[0] = new b2.Vec2(-1.0, 0.0);\n    vertices[1] = new b2.Vec2(1.0, 0.0);\n    vertices[2] = new b2.Vec2(0.0, 2.0);\n    const polygon = new b2.PolygonShape();\n    polygon.Set(vertices, 3);\n\n    const triangleShapeDef = new b2.FixtureDef();\n    triangleShapeDef.shape = polygon;\n    triangleShapeDef.density = 1.0;\n\n    triangleShapeDef.filter.groupIndex = CollisionFiltering.k_smallGroup;\n    triangleShapeDef.filter.categoryBits = CollisionFiltering.k_triangleCategory;\n    triangleShapeDef.filter.maskBits = CollisionFiltering.k_triangleMask;\n\n    const triangleBodyDef = new b2.BodyDef();\n    triangleBodyDef.type = b2.BodyType.b2_dynamicBody;\n    triangleBodyDef.position.Set(-5.0, 2.0);\n\n    const body1 = this.m_world.CreateBody(triangleBodyDef);\n    body1.CreateFixture(triangleShapeDef);\n\n    // Large triangle (recycle definitions)\n    vertices[0].SelfMul(2.0);\n    vertices[1].SelfMul(2.0);\n    vertices[2].SelfMul(2.0);\n    polygon.Set(vertices, 3);\n    triangleShapeDef.filter.groupIndex = CollisionFiltering.k_largeGroup;\n    triangleBodyDef.position.Set(-5.0, 6.0);\n    triangleBodyDef.fixedRotation = true; // look at me!\n\n    const body2 = this.m_world.CreateBody(triangleBodyDef);\n    body2.CreateFixture(triangleShapeDef);\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-5.0, 10.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const p = new b2.PolygonShape();\n      p.SetAsBox(0.5, 1.0);\n      body.CreateFixture(p, 1.0);\n\n      const jd = new b2.PrismaticJointDef();\n      jd.bodyA = body2;\n      jd.bodyB = body;\n      jd.enableLimit = true;\n      jd.localAnchorA.Set(0.0, 4.0);\n      jd.localAnchorB.SetZero();\n      jd.localAxisA.Set(0.0, 1.0);\n      jd.lowerTranslation = -1.0;\n      jd.upperTranslation = 1.0;\n\n      this.m_world.CreateJoint(jd);\n    }\n\n    // Small box\n    polygon.SetAsBox(1.0, 0.5);\n    const boxShapeDef = new b2.FixtureDef();\n    boxShapeDef.shape = polygon;\n    boxShapeDef.density = 1.0;\n    boxShapeDef.restitution = 0.1;\n\n    boxShapeDef.filter.groupIndex = CollisionFiltering.k_smallGroup;\n    boxShapeDef.filter.categoryBits = CollisionFiltering.k_boxCategory;\n    boxShapeDef.filter.maskBits = CollisionFiltering.k_boxMask;\n\n    const boxBodyDef = new b2.BodyDef();\n    boxBodyDef.type = b2.BodyType.b2_dynamicBody;\n    boxBodyDef.position.Set(0.0, 2.0);\n\n    const body3 = this.m_world.CreateBody(boxBodyDef);\n    body3.CreateFixture(boxShapeDef);\n\n    // Large box (recycle definitions)\n    polygon.SetAsBox(2.0, 1.0);\n    boxShapeDef.filter.groupIndex = CollisionFiltering.k_largeGroup;\n    boxBodyDef.position.Set(0.0, 6.0);\n\n    const body4 = this.m_world.CreateBody(boxBodyDef);\n    body4.CreateFixture(boxShapeDef);\n\n    // Small circle\n    const circle = new b2.CircleShape();\n    circle.m_radius = 1.0;\n\n    const circleShapeDef = new b2.FixtureDef();\n    circleShapeDef.shape = circle;\n    circleShapeDef.density = 1.0;\n\n    circleShapeDef.filter.groupIndex = CollisionFiltering.k_smallGroup;\n    circleShapeDef.filter.categoryBits = CollisionFiltering.k_circleCategory;\n    circleShapeDef.filter.maskBits = CollisionFiltering.k_circleMask;\n\n    const circleBodyDef = new b2.BodyDef();\n    circleBodyDef.type = b2.BodyType.b2_dynamicBody;\n    circleBodyDef.position.Set(5.0, 2.0);\n\n    const body5 = this.m_world.CreateBody(circleBodyDef);\n    body5.CreateFixture(circleShapeDef);\n\n    // Large circle\n    circle.m_radius *= 2.0;\n    circleShapeDef.filter.groupIndex = CollisionFiltering.k_largeGroup;\n    circleBodyDef.position.Set(5.0, 6.0);\n\n    const body6 = this.m_world.CreateBody(circleBodyDef);\n    body6.CreateFixture(circleShapeDef);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new CollisionFiltering();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Collision Filtering\", CollisionFiltering.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This test shows collision processing and tests\n// deferred body destruction.\nexport class CollisionProcessing extends testbed.Test {\n  constructor() {\n    super();\n\n    // Ground body\n    {\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n\n      const sd = new b2.FixtureDef();\n      sd.shape = shape;\n\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(sd);\n    }\n\n    const xLo = -5.0,\n      xHi = 5.0;\n    const yLo = 2.0,\n      yHi = 35.0;\n\n    // Small triangle\n    const vertices = new Array(3);\n    vertices[0] = new b2.Vec2(-1.0, 0.0);\n    vertices[1] = new b2.Vec2(1.0, 0.0);\n    vertices[2] = new b2.Vec2(0.0, 2.0);\n\n    const polygon = new b2.PolygonShape();\n    polygon.Set(vertices, 3);\n\n    const triangleShapeDef = new b2.FixtureDef();\n    triangleShapeDef.shape = polygon;\n    triangleShapeDef.density = 1.0;\n\n    const triangleBodyDef = new b2.BodyDef();\n    triangleBodyDef.type = b2.BodyType.b2_dynamicBody;\n    triangleBodyDef.position.Set(b2.RandomRange(xLo, xHi), b2.RandomRange(yLo, yHi));\n\n    const body1 = this.m_world.CreateBody(triangleBodyDef);\n    body1.CreateFixture(triangleShapeDef);\n\n    // Large triangle (recycle definitions)\n    vertices[0].SelfMul(2.0);\n    vertices[1].SelfMul(2.0);\n    vertices[2].SelfMul(2.0);\n    polygon.Set(vertices, 3);\n\n    triangleBodyDef.position.Set(b2.RandomRange(xLo, xHi), b2.RandomRange(yLo, yHi));\n\n    const body2 = this.m_world.CreateBody(triangleBodyDef);\n    body2.CreateFixture(triangleShapeDef);\n\n    // Small box\n    polygon.SetAsBox(1.0, 0.5);\n\n    const boxShapeDef = new b2.FixtureDef();\n    boxShapeDef.shape = polygon;\n    boxShapeDef.density = 1.0;\n\n    const boxBodyDef = new b2.BodyDef();\n    boxBodyDef.type = b2.BodyType.b2_dynamicBody;\n    boxBodyDef.position.Set(b2.RandomRange(xLo, xHi), b2.RandomRange(yLo, yHi));\n\n    const body3 = this.m_world.CreateBody(boxBodyDef);\n    body3.CreateFixture(boxShapeDef);\n\n    // Large box (recycle definitions)\n    polygon.SetAsBox(2.0, 1.0);\n    boxBodyDef.position.Set(b2.RandomRange(xLo, xHi), b2.RandomRange(yLo, yHi));\n\n    const body4 = this.m_world.CreateBody(boxBodyDef);\n    body4.CreateFixture(boxShapeDef);\n\n    // Small circle\n    const circle = new b2.CircleShape();\n    circle.m_radius = 1.0;\n\n    const circleShapeDef = new b2.FixtureDef();\n    circleShapeDef.shape = circle;\n    circleShapeDef.density = 1.0;\n\n    const circleBodyDef = new b2.BodyDef();\n    circleBodyDef.type = b2.BodyType.b2_dynamicBody;\n    circleBodyDef.position.Set(b2.RandomRange(xLo, xHi), b2.RandomRange(yLo, yHi));\n\n    const body5 = this.m_world.CreateBody(circleBodyDef);\n    body5.CreateFixture(circleShapeDef);\n\n    // Large circle\n    circle.m_radius *= 2.0;\n    circleBodyDef.position.Set(b2.RandomRange(xLo, xHi), b2.RandomRange(yLo, yHi));\n\n    const body6 = this.m_world.CreateBody(circleBodyDef);\n    body6.CreateFixture(circleShapeDef);\n\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    // We are going to destroy some bodies according to contact\n    // points. We must buffer the bodies that should be destroyed\n    // because they may belong to multiple contact points.\n    const k_maxNuke = 6;\n    const nuke = new Array(k_maxNuke);\n    let nukeCount = 0;\n\n    // Traverse the contact results. Destroy bodies that\n    // are touching heavier bodies.\n    for (let i = 0; i < this.m_pointCount; ++i) {\n      const point = this.m_points[i];\n\n      const body1 = point.fixtureA.GetBody();\n      const body2 = point.fixtureB.GetBody();\n      const mass1 = body1.GetMass();\n      const mass2 = body2.GetMass();\n\n      if (mass1 > 0.0 && mass2 > 0.0) {\n        if (mass2 > mass1) {\n          nuke[nukeCount++] = body1;\n        } else {\n          nuke[nukeCount++] = body2;\n        }\n\n        if (nukeCount === k_maxNuke) {\n          break;\n        }\n      }\n    }\n\n    // Sort the nuke array to group duplicates.\n    nuke.sort((a, b) => {\n      return a - b;\n    });\n\n    // Destroy the bodies, skipping duplicates.\n    let i = 0;\n    while (i < nukeCount) {\n      const b = nuke[i++];\n      while (i < nukeCount && nuke[i] === b) {\n        ++i;\n      }\n\n      if (b !== this.m_bomb) {\n        this.m_world.DestroyBody(b);\n      }\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new CollisionProcessing();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Collision Processing\", CollisionProcessing.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class CompoundShapes extends testbed.Test {\n  public m_table1: b2.Body;\n  public m_table2: b2.Body;\n  public m_ship1: b2.Body;\n  public m_ship2: b2.Body;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(50.0, 0.0), new b2.Vec2(-50.0, 0.0));\n\n      body.CreateFixture(shape, 0.0);\n    }\n\n    // Table 1\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Set(-15.0, 1.0);\n      this.m_table1 = this.m_world.CreateBody(bd);\n\n      const top = new b2.PolygonShape();\n      top.SetAsBox(3.0, 0.5, new b2.Vec2(0.0, 3.5), 0.0);\n\n      const leftLeg = new b2.PolygonShape();\n      leftLeg.SetAsBox(0.5, 1.5, new b2.Vec2(-2.5, 1.5), 0.0);\n\n      const rightLeg = new b2.PolygonShape();\n      rightLeg.SetAsBox(0.5, 1.5, new b2.Vec2(2.5, 1.5), 0.0);\n\n      this.m_table1.CreateFixture(top, 2.0);\n      this.m_table1.CreateFixture(leftLeg, 2.0);\n      this.m_table1.CreateFixture(rightLeg, 2.0);\n    }\n\n    // Table 2\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Set(-5.0, 1.0);\n      this.m_table2 = this.m_world.CreateBody(bd);\n\n      const top = new b2.PolygonShape();\n      top.SetAsBox(3.0, 0.5, new b2.Vec2(0.0, 3.5), 0.0);\n\n      const leftLeg = new b2.PolygonShape();\n      leftLeg.SetAsBox(0.5, 2.0, new b2.Vec2(-2.5, 2.0), 0.0);\n\n      const rightLeg = new b2.PolygonShape();\n      rightLeg.SetAsBox(0.5, 2.0, new b2.Vec2(2.5, 2.0), 0.0);\n\n      this.m_table2.CreateFixture(top, 2.0);\n      this.m_table2.CreateFixture(leftLeg, 2.0);\n      this.m_table2.CreateFixture(rightLeg, 2.0);\n    }\n\n    // Spaceship 1\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Set(5.0, 1.0);\n      this.m_ship1 = this.m_world.CreateBody(bd);\n\n      const vertices = b2.Vec2.MakeArray(3);\n\n      const left = new b2.PolygonShape();\n      vertices[0].Set(-2.0, 0.0);\n      vertices[1].Set(0.0, 4.0 / 3.0);\n      vertices[2].Set(0.0, 4.0);\n      left.Set(vertices, 3);\n\n      const right = new b2.PolygonShape();\n      vertices[0].Set(2.0, 0.0);\n      vertices[1].Set(0.0, 4.0 / 3.0);\n      vertices[2].Set(0.0, 4.0);\n      right.Set(vertices, 3);\n\n      this.m_ship1.CreateFixture(left, 2.0);\n      this.m_ship1.CreateFixture(right, 2.0);\n    }\n\n    // Spaceship 2\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Set(15.0, 1.0);\n      this.m_ship2 = this.m_world.CreateBody(bd);\n\n      const vertices = b2.Vec2.MakeArray(3);\n\n      const left = new b2.PolygonShape();\n      vertices[0].Set(-2.0, 0.0);\n      vertices[1].Set(1.0, 2.0);\n      vertices[2].Set(0.0, 4.0);\n      left.Set(vertices, 3);\n\n      const right = new b2.PolygonShape();\n      vertices[0].Set(2.0, 0.0);\n      vertices[1].Set(-1.0, 2.0);\n      vertices[2].Set(0.0, 4.0);\n      right.Set(vertices, 3);\n\n      this.m_ship2.CreateFixture(left, 2.0);\n      this.m_ship2.CreateFixture(right, 2.0);\n    }\n  }\n\n  public Spawn(): void {\n    // Table 1 obstruction\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Copy(this.m_table1.GetPosition());\n      bd.angle = this.m_table1.GetAngle();\n\n      const body = this.m_world.CreateBody(bd);\n\n      const box = new b2.PolygonShape();\n      box.SetAsBox(4.0, 0.1, new b2.Vec2(0.0, 3.0), 0.0);\n\n      body.CreateFixture(box, 2.0);\n    }\n\n    // Table 2 obstruction\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Copy(this.m_table2.GetPosition());\n      bd.angle = this.m_table2.GetAngle();\n\n      const body = this.m_world.CreateBody(bd);\n\n      const box = new b2.PolygonShape();\n      box.SetAsBox(4.0, 0.1, new b2.Vec2(0.0, 3.0), 0.0);\n\n      body.CreateFixture(box, 2.0);\n    }\n\n    // Ship 1 obstruction\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Copy(this.m_ship1.GetPosition());\n      bd.angle = this.m_ship1.GetAngle();\n      bd.gravityScale = 0.0;\n\n      const body = this.m_world.CreateBody(bd);\n\n      const circle = new b2.CircleShape();\n      circle.m_radius = 0.5;\n      circle.m_p.Set(0.0, 2.0);\n\n      body.CreateFixture(circle, 2.0);\n    }\n\n    // Ship 2 obstruction\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Copy(this.m_ship2.GetPosition());\n      bd.angle = this.m_ship2.GetAngle();\n      bd.gravityScale = 0.0;\n\n      const body = this.m_world.CreateBody(bd);\n\n      const circle = new b2.CircleShape();\n      circle.m_radius = 0.5;\n      circle.m_p.Set(0.0, 2.0);\n\n      body.CreateFixture(circle, 2.0);\n    }\n  }\n\n  public Keyboard(key: string): void {\n    switch (key) {\n      case \"s\": this.Spawn(); break;\n    }\n    super.Keyboard(key);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new CompoundShapes();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Compound Shapes\", CompoundShapes.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Confined extends testbed.Test {\n  public static readonly e_columnCount = 0;\n  public static readonly e_rowCount = 0;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n\n      // Floor\n      shape.SetTwoSided(new b2.Vec2(-10.0, 0.0), new b2.Vec2(10.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n\n      // Left wall\n      shape.SetTwoSided(new b2.Vec2(-10.0, 0.0), new b2.Vec2(-10.0, 20.0));\n      ground.CreateFixture(shape, 0.0);\n\n      // Right wall\n      shape.SetTwoSided(new b2.Vec2(10.0, 0.0), new b2.Vec2(10.0, 20.0));\n      ground.CreateFixture(shape, 0.0);\n\n      // Roof\n      shape.SetTwoSided(new b2.Vec2(-10.0, 20.0), new b2.Vec2(10.0, 20.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    const radius = 0.5;\n    const shape = new b2.CircleShape();\n    shape.m_p.SetZero();\n    shape.m_radius = radius;\n\n    const fd = new b2.FixtureDef();\n    fd.shape = shape;\n    fd.density = 1.0;\n    fd.friction = 0.1;\n\n    for (let j = 0; j < Confined.e_columnCount; ++j) {\n      for (let i = 0; i < Confined.e_rowCount; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-10.0 + (2.1 * j + 1.0 + 0.01 * i) * radius, (2.0 * i + 1.0) * radius);\n        const body = this.m_world.CreateBody(bd);\n\n        body.CreateFixture(fd);\n      }\n    }\n\n    this.m_world.SetGravity(new b2.Vec2(0.0, 0.0));\n  }\n\n  public CreateCircle() {\n    const radius = 2.0;\n    const shape = new b2.CircleShape();\n    shape.m_p.SetZero();\n    shape.m_radius = radius;\n\n    const fd = new b2.FixtureDef();\n    fd.shape = shape;\n    fd.density = 1.0;\n    fd.friction = 0.0;\n\n    const p = new b2.Vec2(b2.Random(), 3.0 + b2.Random());\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Copy(p);\n    //bd.allowSleep = false;\n    const body = this.m_world.CreateBody(bd);\n\n    body.CreateFixture(fd);\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"c\":\n        this.CreateCircle();\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    let sleeping = true;\n    for (let b = this.m_world.GetBodyList(); b; b = b.m_next) {\n      if (b.GetType() !== b2.BodyType.b2_dynamicBody) {\n        continue;\n      }\n\n      if (b.IsAwake()) {\n        sleeping = false;\n      }\n    }\n\n    if (this.m_stepCount === 180) {\n      this.m_stepCount += 0;\n    }\n\n    if (sleeping) {\n      // this.CreateCircle();\n    }\n\n    super.Step(settings);\n\n    for (let b = this.m_world.GetBodyList(); b; b = b.m_next) {\n      if (b.GetType() !== b2.BodyType.b2_dynamicBody) {\n        continue;\n      }\n\n      // const p = b.GetPosition();\n      // if (p.x <= -10.0 || 10.0 <= p.x || p.y <= 0.0 || 20.0 <= p.y) {\n      //   p.x += 0.0;\n      // }\n    }\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press 'c' to create a circle.\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new Confined();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Solver\", \"Confined\", Confined.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ContinuousTest extends testbed.Test {\n  public m_body: b2.Body;\n  public m_angularVelocity = 0.0;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(0.0, 0.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const edge = new b2.EdgeShape();\n\n      edge.SetTwoSided(new b2.Vec2(-10.0, 0.0), new b2.Vec2(10.0, 0.0));\n      body.CreateFixture(edge, 0.0);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.2, 1.0, new b2.Vec2(0.5, 1.0), 0.0);\n      body.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 20.0);\n      //bd.angle = 0.1;\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(2.0, 0.1);\n\n      this.m_body = this.m_world.CreateBody(bd);\n      this.m_body.CreateFixture(shape, 1.0);\n\n      this.m_angularVelocity = b2.RandomRange(-50.0, 50.0);\n      //this.m_angularVelocity = 46.661274;\n      this.m_body.SetLinearVelocity(new b2.Vec2(0.0, -100.0));\n      this.m_body.SetAngularVelocity(this.m_angularVelocity);\n    }\n    /*\n    else\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 2.0);\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.CircleShape();\n      shape.m_p.SetZero();\n      shape.m_radius = 0.5;\n      body.CreateFixture(shape, 1.0);\n      bd.bullet = true;\n      bd.position.Set(0.0, 10.0);\n      body = this.m_world.CreateBody(bd);\n      body.CreateFixture(shape, 1.0);\n      body.SetLinearVelocity(new b2.Vec2(0.0, -100.0));\n    }\n    */\n\n    // b2.gjkCalls = 0;\n    // b2.gjkIters = 0;\n    // b2.gjkMaxIters = 0;\n    b2.gjk_reset();\n    // b2.toiCalls = 0;\n    // b2.toiIters = 0;\n    // b2.toiRootIters = 0;\n    // b2.toiMaxRootIters = 0;\n    // b2.toiTime = 0.0;\n    // b2.toiMaxTime = 0.0;\n    b2.toi_reset();\n  }\n\n  public Launch() {\n    // b2.gjkCalls = 0;\n    // b2.gjkIters = 0;\n    // b2.gjkMaxIters = 0;\n    b2.gjk_reset();\n    // b2.toiCalls = 0;\n    // b2.toiIters = 0;\n    // b2.toiRootIters = 0;\n    // b2.toiMaxRootIters = 0;\n    // b2.toiTime = 0.0;\n    // b2.toiMaxTime = 0.0;\n    b2.toi_reset();\n\n    this.m_body.SetTransformVec(new b2.Vec2(0.0, 20.0), 0.0);\n    this.m_angularVelocity = b2.RandomRange(-50.0, 50.0);\n    this.m_body.SetLinearVelocity(new b2.Vec2(0.0, -100.0));\n    this.m_body.SetAngularVelocity(this.m_angularVelocity);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    if (b2.gjkCalls > 0) {\n      // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"gjk calls = %d, ave gjk iters = %3.1f, max gjk iters = %d\",\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `gjk calls = ${b2.gjkCalls.toFixed(0)}, ave gjk iters = ${(b2.gjkIters / b2.gjkCalls).toFixed(1)}, max gjk iters = ${b2.gjkMaxIters.toFixed(0)}`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    }\n\n    if (b2.toiCalls > 0) {\n      // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"toi [max] calls = %d, ave toi iters = %3.1f [%d]\",\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `toi [max] calls = ${b2.toiCalls}, ave toi iters = ${(b2.toiIters / b2.toiCalls).toFixed(1)} [${b2.toiMaxRootIters}]`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n      // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"ave [max] toi root iters = %3.1f [%d]\",\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `ave [max] toi root iters = ${(b2.toiRootIters / b2.toiCalls).toFixed(1)} [${b2.toiMaxRootIters.toFixed(0)}]`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n      // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"ave [max] toi time = %.1f [%.1f] (microseconds)\",\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `ave [max] toi time = ${(1000.0 * b2.toiTime / b2.toiCalls).toFixed(1)} [${(1000.0 * b2.toiMaxTime).toFixed(1)}] (microseconds)`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    }\n\n    if (this.m_stepCount % 60 === 0) {\n      this.Launch();\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new ContinuousTest();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Continuous\", \"Continuous Test\", ContinuousTest.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ConvexHull extends testbed.Test {\n  public static readonly e_count = 10;\n\n  public m_test_points: b2.Vec2[] = [];\n  public m_count = 0;\n  public m_auto = false;\n\n  constructor() {\n    super();\n\n    this.Generate();\n  }\n\n  public Generate(): void {\n    for (let i = 0; i < ConvexHull.e_count; ++i) {\n      let x = b2.RandomRange(-10.0, 10.0);\n      let y = b2.RandomRange(-10.0, 10.0);\n\n      // Clamp onto a square to help create collinearities.\n      // This will stress the convex hull algorithm.\n      x = b2.Clamp(x, -8.0, 8.0);\n      y = b2.Clamp(y, -8.0, 8.0);\n      this.m_test_points[i] = new b2.Vec2(x, y);\n    }\n\n    this.m_count = ConvexHull.e_count;\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        this.m_auto = !this.m_auto;\n        break;\n\n      case \"g\":\n        this.Generate();\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    const shape = new b2.PolygonShape();\n    shape.Set(this.m_test_points, this.m_count);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press g to generate a new random convex hull\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    testbed.g_debugDraw.DrawPolygon(shape.m_vertices, shape.m_count, new b2.Color(0.9, 0.9, 0.9));\n\n    for (let i = 0; i < this.m_count; ++i) {\n      testbed.g_debugDraw.DrawPoint(this.m_test_points[i], 3.0, new b2.Color(0.3, 0.9, 0.3));\n      testbed.g_debugDraw.DrawStringWorld(this.m_test_points[i].x + 0.05, this.m_test_points[i].y + 0.05, `${i}`);\n    }\n\n    if (!shape.Validate()) {\n      this.m_textLine += 0;\n    }\n\n    if (this.m_auto) {\n      this.Generate();\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new ConvexHull();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Geometry\", \"Convex Hull\", ConvexHull.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ConveyorBelt extends testbed.Test {\n  public m_platform: b2.Fixture;\n\n  constructor() {\n    super();\n\n    // Ground\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-20.0, 0.0), new b2.Vec2(20.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Platform\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(-5.0, 5.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(10.0, 0.5);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.friction = 0.8;\n      this.m_platform = body.CreateFixture(fd);\n    }\n\n    // Boxes\n    for (let i = 0; i < 5; ++i) {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-10.0 + 2.0 * i, 7.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.5);\n      body.CreateFixture(shape, 20.0);\n    }\n  }\n\n  public PreSolve(contact: b2.Contact, oldManifold: b2.Manifold) {\n    super.PreSolve(contact, oldManifold);\n\n    const fixtureA = contact.GetFixtureA();\n    const fixtureB = contact.GetFixtureB();\n\n    if (fixtureA === this.m_platform) {\n      contact.SetTangentSpeed(5.0);\n    }\n\n    if (fixtureB === this.m_platform) {\n      contact.SetTangentSpeed(-5.0);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new ConveyorBelt();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Conveyor Belt\", ConveyorBelt.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This tests distance joints, body destruction, and joint destruction.\nexport class DistanceJoint extends testbed.Test {\n  public m_joint: b2.DistanceJoint;\n  public m_length: number;\n  public m_minLength: number;\n  public m_maxLength: number;\n  public m_hertz: number;\n  public m_dampingRatio: number;\n\n  constructor() {\n    super();\n\n    let ground = null;\n\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.angularDamping = 0.1;\n\n      bd.position.Set(0.0, 5.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.5);\n      body.CreateFixture(shape, 5.0);\n\n      this.m_hertz = 1.0;\n      this.m_dampingRatio = 0.7;\n\n      const jd = new b2.DistanceJointDef();\n      jd.Initialize(ground, body, new b2.Vec2(0.0, 15.0), bd.position);\n      jd.collideConnected = true;\n      this.m_length = jd.length;\n      this.m_minLength = jd.minLength = jd.length - 3;\n      this.m_maxLength = jd.maxLength = jd.length + 3;\n      b2.LinearStiffness(jd, this.m_hertz, this.m_dampingRatio, jd.bodyA, jd.bodyB);\n      this.m_joint = this.m_world.CreateJoint(jd);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"l\":\n        // this.m_joint.EnableLimit(!this.m_joint.IsLimitEnabled());\n        break;\n\n      case \"m\":\n        // this.m_joint.EnableMotor(!this.m_joint.IsMotorEnabled());\n        break;\n\n      case \"s\":\n        // this.m_joint.SetMotorSpeed(-this.m_joint.GetMotorSpeed());\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    // testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: (l) limits, (m) motors, (s) speed\");\n    // this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    // const force = this.m_joint.GetMotorForce(settings.m_hertz);\n    // testbed.g_debugDraw.DrawString(5, this.m_textLine, `Motor Force = ${force.toFixed(0)}`);\n    // this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new DistanceJoint();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"DistanceJoint\", DistanceJoint.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class DistanceTest extends testbed.Test {\n  public m_positionB = new b2.Vec2();\n  public m_angleB = 0;\n  public m_transformA = new b2.Transform();\n  public m_transformB = new b2.Transform();\n  public m_polygonA = new b2.PolygonShape();\n  public m_polygonB = new b2.PolygonShape();\n\n  constructor() {\n    super();\n\n    {\n      this.m_transformA.SetIdentity();\n      this.m_transformA.p.Set(0.0, -0.2);\n      this.m_polygonA.SetAsBox(10.0, 0.2);\n    }\n\n    {\n      this.m_positionB.Set(12.017401, 0.13678508);\n      this.m_angleB = -0.0109265;\n      this.m_transformB.SetPositionAngle(this.m_positionB, this.m_angleB);\n\n      this.m_polygonB.SetAsBox(2.0, 0.1);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        this.m_positionB.x -= 0.1;\n        break;\n\n      case \"d\":\n        this.m_positionB.x += 0.1;\n        break;\n\n      case \"s\":\n        this.m_positionB.y -= 0.1;\n        break;\n\n      case \"w\":\n        this.m_positionB.y += 0.1;\n        break;\n\n      case \"q\":\n        this.m_angleB += 0.1 * b2.pi;\n        break;\n\n      case \"e\":\n        this.m_angleB -= 0.1 * b2.pi;\n        break;\n    }\n\n    this.m_transformB.SetPositionAngle(this.m_positionB, this.m_angleB);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    const input = new b2.DistanceInput();\n    input.proxyA.SetShape(this.m_polygonA, 0);\n    input.proxyB.SetShape(this.m_polygonB, 0);\n    input.transformA.Copy(this.m_transformA);\n    input.transformB.Copy(this.m_transformB);\n    input.useRadii = true;\n    const cache = new b2.SimplexCache();\n    cache.count = 0;\n    const output = new b2.DistanceOutput();\n    b2.Distance(output, cache, input);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `distance = ${output.distance.toFixed(2)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `iterations = ${output.iterations}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    {\n      const color = new b2.Color(0.9, 0.9, 0.9);\n      const v = [];\n      for (let i = 0; i < this.m_polygonA.m_count; ++i) {\n        v[i] = b2.Transform.MulXV(this.m_transformA, this.m_polygonA.m_vertices[i], new b2.Vec2());\n      }\n      testbed.g_debugDraw.DrawPolygon(v, this.m_polygonA.m_count, color);\n\n      for (let i = 0; i < this.m_polygonB.m_count; ++i) {\n        v[i] = b2.Transform.MulXV(this.m_transformB, this.m_polygonB.m_vertices[i], new b2.Vec2());\n      }\n      testbed.g_debugDraw.DrawPolygon(v, this.m_polygonB.m_count, color);\n    }\n\n    const x1 = output.pointA;\n    const x2 = output.pointB;\n\n    const c1 = new b2.Color(1.0, 0.0, 0.0);\n    testbed.g_debugDraw.DrawPoint(x1, 4.0, c1);\n\n    const c2 = new b2.Color(1.0, 1.0, 0.0);\n    testbed.g_debugDraw.DrawPoint(x2, 4.0, c2);\n  }\n\n  public static Create(): testbed.Test {\n    return new DistanceTest();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Geometry\", \"Distance Test\", DistanceTest.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Dominos extends testbed.Test {\n  constructor() {\n    super();\n\n    let b1 = null;\n    {\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n\n      const bd = new b2.BodyDef();\n      b1 = this.m_world.CreateBody(bd);\n      b1.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(6.0, 0.25);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(-1.5, 10.0);\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.1, 1.0);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      fd.friction = 0.1;\n\n      for (let i = 0; i < 10; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-6.0 + 1.0 * i, 11.25);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(fd);\n      }\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(7.0, 0.25, b2.Vec2_zero, 0.3);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(1.0, 6.0);\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    let _b2 = null;\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.25, 1.5);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(-7.0, 4.0);\n      _b2 = this.m_world.CreateBody(bd);\n      _b2.CreateFixture(shape, 0.0);\n    }\n\n    let b3 = null;\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(6.0, 0.125);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-0.9, 1.0);\n      bd.angle = -0.15;\n\n      b3 = this.m_world.CreateBody(bd);\n      b3.CreateFixture(shape, 10.0);\n    }\n\n    const jd = new b2.RevoluteJointDef();\n    const anchor = new b2.Vec2();\n\n    anchor.Set(-2.0, 1.0);\n    jd.Initialize(b1, b3, anchor);\n    jd.collideConnected = true;\n    this.m_world.CreateJoint(jd);\n\n    let b4 = null;\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.25, 0.25);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-10.0, 15.0);\n      b4 = this.m_world.CreateBody(bd);\n      b4.CreateFixture(shape, 10.0);\n    }\n\n    anchor.Set(-7.0, 15.0);\n    jd.Initialize(_b2, b4, anchor);\n    this.m_world.CreateJoint(jd);\n\n    let b5 = null;\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(6.5, 3.0);\n      b5 = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      const fd = new b2.FixtureDef();\n\n      fd.shape = shape;\n      fd.density = 10.0;\n      fd.friction = 0.1;\n\n      shape.SetAsBox(1.0, 0.1, new b2.Vec2(0.0, -0.9), 0.0);\n      b5.CreateFixture(fd);\n\n      shape.SetAsBox(0.1, 1.0, new b2.Vec2(-0.9, 0.0), 0.0);\n      b5.CreateFixture(fd);\n\n      shape.SetAsBox(0.1, 1.0, new b2.Vec2(0.9, 0.0), 0.0);\n      b5.CreateFixture(fd);\n    }\n\n    anchor.Set(6.0, 2.0);\n    jd.Initialize(b1, b5, anchor);\n    this.m_world.CreateJoint(jd);\n\n    let b6 = null;\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(1.0, 0.1);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(6.5, 4.1);\n      b6 = this.m_world.CreateBody(bd);\n      b6.CreateFixture(shape, 30.0);\n    }\n\n    anchor.Set(7.5, 4.0);\n    jd.Initialize(b5, b6, anchor);\n    this.m_world.CreateJoint(jd);\n\n    let b7 = null;\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.1, 1.0);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(7.4, 1.0);\n\n      b7 = this.m_world.CreateBody(bd);\n      b7.CreateFixture(shape, 10.0);\n    }\n\n    const djd = new b2.DistanceJointDef();\n    djd.bodyA = b3;\n    djd.bodyB = b7;\n    djd.localAnchorA.Set(6.0, 0.0);\n    djd.localAnchorB.Set(0.0, -1.0);\n    const d = b2.Vec2.SubVV(djd.bodyB.GetWorldPoint(djd.localAnchorB, new b2.Vec2()), djd.bodyA.GetWorldPoint(djd.localAnchorA, new b2.Vec2()), new b2.Vec2());\n    djd.length = d.Length();\n\n\t\tb2.LinearStiffness(djd, 1.0, 1.0, djd.bodyA, djd.bodyB);\n    this.m_world.CreateJoint(djd);\n\n    {\n      const radius = 0.2;\n\n      const shape = new b2.CircleShape();\n      shape.m_radius = radius;\n\n      for (let i = 0; i < 4; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(5.9 + 2.0 * radius * i, 2.4);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 10.0);\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Dominos();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Dominos\", Dominos.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This test holds worlds dumped using b2World::Dump.\nexport class DumpShell extends testbed.Test {\n  constructor() {\n    super();\n\n    // dump begin\n    const g = new b2.Vec2(0.000000000000000, 0.000000000000000);\n    this.m_world.SetGravity(g);\n    const bodies = new Array(4);\n    const joints = new Array(2);\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_staticBody;\n      bd.position.Set(0.000000000000000, 0.000000000000000);\n      bd.angle = 0.000000000000000;\n      bd.linearVelocity.Set(0.000000000000000, 0.000000000000000);\n      bd.angularVelocity = 0.000000000000000;\n      bd.linearDamping = 0.000000000000000;\n      bd.angularDamping = 0.000000000000000;\n      bd.allowSleep = true;\n      bd.awake = true;\n      bd.fixedRotation = false;\n      bd.bullet = false;\n      bd.enabled = true;\n      bd.gravityScale = 1.000000000000000;\n      bodies[0] = this.m_world.CreateBody(bd);\n      {\n        const fd = new b2.FixtureDef();\n        fd.friction = 10.000000000000000;\n        fd.restitution = 0.000000000000000;\n        fd.density = 0.000000000000000;\n        fd.isSensor = false;\n        fd.filter.categoryBits = 1;\n        fd.filter.maskBits = 65535;\n        fd.filter.groupIndex = 0;\n        const shape = new b2.EdgeShape();\n        shape.m_radius = 0.009999999776483;\n        shape.m_vertex0.Set(0.000000000000000, 0.000000000000000);\n        shape.m_vertex1.Set(0.000000000000000, 0.000000000000000);\n        shape.m_vertex2.Set(44.521739959716797, 0.000000000000000);\n        shape.m_vertex3.Set(0.000000000000000, 0.000000000000000);\n        fd.shape = shape;\n        bodies[0].CreateFixture(fd);\n      }\n      {\n        const fd = new b2.FixtureDef();\n        fd.friction = 10.000000000000000;\n        fd.restitution = 0.000000000000000;\n        fd.density = 0.000000000000000;\n        fd.isSensor = false;\n        fd.filter.categoryBits = 1;\n        fd.filter.maskBits = 65535;\n        fd.filter.groupIndex = 0;\n        const shape = new b2.EdgeShape();\n        shape.m_radius = 0.009999999776483;\n        shape.m_vertex0.Set(0.000000000000000, 0.000000000000000);\n        shape.m_vertex1.Set(0.000000000000000, 16.695652008056641);\n        shape.m_vertex2.Set(44.521739959716797, 16.695652008056641);\n        shape.m_vertex3.Set(0.000000000000000, 0.000000000000000);\n        fd.shape = shape;\n        bodies[0].CreateFixture(fd);\n      }\n      {\n        const fd = new b2.FixtureDef();\n        fd.friction = 10.000000000000000;\n        fd.restitution = 0.000000000000000;\n        fd.density = 0.000000000000000;\n        fd.isSensor = false;\n        fd.filter.categoryBits = 1;\n        fd.filter.maskBits = 65535;\n        fd.filter.groupIndex = 0;\n        const shape = new b2.EdgeShape();\n        shape.m_radius = 0.009999999776483;\n        shape.m_vertex0.Set(0.000000000000000, 0.000000000000000);\n        shape.m_vertex1.Set(0.000000000000000, 16.695652008056641);\n        shape.m_vertex2.Set(0.000000000000000, 0.000000000000000);\n        shape.m_vertex3.Set(0.000000000000000, 0.000000000000000);\n        fd.shape = shape;\n        bodies[0].CreateFixture(fd);\n      }\n      {\n        const fd = new b2.FixtureDef();\n        fd.friction = 10.000000000000000;\n        fd.restitution = 0.000000000000000;\n        fd.density = 0.000000000000000;\n        fd.isSensor = false;\n        fd.filter.categoryBits = 1;\n        fd.filter.maskBits = 65535;\n        fd.filter.groupIndex = 0;\n        const shape = new b2.EdgeShape();\n        shape.m_radius = 0.009999999776483;\n        shape.m_vertex0.Set(0.000000000000000, 0.000000000000000);\n        shape.m_vertex1.Set(44.521739959716797, 16.695652008056641);\n        shape.m_vertex2.Set(44.521739959716797, 0.000000000000000);\n        shape.m_vertex3.Set(0.000000000000000, 0.000000000000000);\n        fd.shape = shape;\n        bodies[0].CreateFixture(fd);\n      }\n    }\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.847826063632965, 2.500000000000000);\n      bd.angle = 0.000000000000000;\n      bd.linearVelocity.Set(0.000000000000000, 0.000000000000000);\n      bd.angularVelocity = 0.000000000000000;\n      bd.linearDamping = 0.500000000000000;\n      bd.angularDamping = 0.500000000000000;\n      bd.allowSleep = true;\n      bd.awake = true;\n      bd.fixedRotation = false;\n      bd.bullet = false;\n      bd.enabled = true;\n      bd.gravityScale = 1.000000000000000;\n      bodies[1] = this.m_world.CreateBody(bd);\n      {\n        const fd = new b2.FixtureDef();\n        fd.friction = 1.000000000000000;\n        fd.restitution = 0.500000000000000;\n        fd.density = 10.000000000000000;\n        fd.isSensor = false;\n        fd.filter.categoryBits = 1;\n        fd.filter.maskBits = 65535;\n        fd.filter.groupIndex = 0;\n        const shape = new b2.PolygonShape();\n        const vs = b2.Vec2.MakeArray(8);\n        vs[0].Set(6.907599925994873, 0.327199995517731);\n        vs[1].Set(-0.322800010442734, 0.282599985599518);\n        vs[2].Set(-0.322800010442734, -0.295700013637543);\n        vs[3].Set(6.885900020599365, -0.364100009202957);\n        shape.Set(vs, 4);\n        fd.shape = shape;\n        bodies[1].CreateFixture(fd);\n      }\n    }\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(13.043478012084959, 2.500000000000000);\n      bd.angle = 0.000000000000000;\n      bd.linearVelocity.Set(0.000000000000000, 0.000000000000000);\n      bd.angularVelocity = 0.000000000000000;\n      bd.linearDamping = 0.500000000000000;\n      bd.angularDamping = 0.500000000000000;\n      bd.allowSleep = true;\n      bd.awake = true;\n      bd.fixedRotation = false;\n      bd.bullet = false;\n      bd.enabled = true;\n      bd.gravityScale = 1.000000000000000;\n      bodies[2] = this.m_world.CreateBody(bd);\n      {\n        const fd = new b2.FixtureDef();\n        fd.friction = 1.000000000000000;\n        fd.restitution = 0.500000000000000;\n        fd.density = 10.000000000000000;\n        fd.isSensor = false;\n        fd.filter.categoryBits = 1;\n        fd.filter.maskBits = 65535;\n        fd.filter.groupIndex = 0;\n        const shape = new b2.PolygonShape();\n        const vs = b2.Vec2.MakeArray(8);\n        vs[0].Set(0.200000002980232, -0.300000011920929);\n        vs[1].Set(0.200000002980232, 0.200000002980232);\n        vs[2].Set(-6.900000095367432, 0.200000002980232);\n        vs[3].Set(-6.900000095367432, -0.300000011920929);\n        shape.Set(vs, 4);\n        fd.shape = shape;\n        bodies[2].CreateFixture(fd);\n      }\n    }\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_staticBody;\n      bd.position.Set(0.000000000000000, 0.000000000000000);\n      bd.angle = 0.000000000000000;\n      bd.linearVelocity.Set(0.000000000000000, 0.000000000000000);\n      bd.angularVelocity = 0.000000000000000;\n      bd.linearDamping = 0.000000000000000;\n      bd.angularDamping = 0.000000000000000;\n      bd.allowSleep = true;\n      bd.awake = true;\n      bd.fixedRotation = false;\n      bd.bullet = false;\n      bd.enabled = true;\n      bd.gravityScale = 1.000000000000000;\n      bodies[3] = this.m_world.CreateBody(bd);\n    }\n    {\n      const jd = new b2.RevoluteJointDef();\n      jd.bodyA = bodies[1];\n      jd.bodyB = bodies[0];\n      jd.collideConnected = false;\n      jd.localAnchorA.Set(0.000000000000000, 0.000000000000000);\n      jd.localAnchorB.Set(0.847826063632965, 2.500000000000000);\n      jd.referenceAngle = 0.000000000000000;\n      jd.enableLimit = false;\n      jd.lowerAngle = 0.000000000000000;\n      jd.upperAngle = 0.000000000000000;\n      jd.enableMotor = false;\n      jd.motorSpeed = 0.000000000000000;\n      jd.maxMotorTorque = 0.000000000000000;\n      joints[0] = this.m_world.CreateJoint(jd);\n    }\n    {\n      const jd = new b2.PrismaticJointDef();\n      jd.bodyA = bodies[1];\n      jd.bodyB = bodies[2];\n      jd.collideConnected = false;\n      jd.localAnchorA.Set(0.000000000000000, 0.000000000000000);\n      jd.localAnchorB.Set(-12.195652008056641, 0.000000000000000);\n      jd.localAxisA.Set(-1.000000000000000, 0.000000000000000);\n      jd.referenceAngle = 0.000000000000000;\n      jd.enableLimit = true;\n      jd.lowerTranslation = -20.000000000000000;\n      jd.upperTranslation = 0.000000000000000;\n      jd.enableMotor = true;\n      jd.motorSpeed = 0.000000000000000;\n      jd.maxMotorForce = 10.000000000000000;\n      joints[1] = this.m_world.CreateJoint(jd);\n    }\n    // dump end\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new DumpShell();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Bugs\", \"Dump Loader\", DumpShell.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class DynamicTreeTest extends testbed.Test {\n  public static readonly e_actorCount = 128;\n\n  public m_worldExtent = 0.0;\n  public m_proxyExtent = 0.0;\n\n  public m_tree = new b2.DynamicTree<DynamicTreeTest_Actor>();\n  public m_queryAABB = new b2.AABB();\n  public m_rayCastInput = new b2.RayCastInput();\n  public m_rayCastOutput = new b2.RayCastOutput();\n  public m_rayActor: DynamicTreeTest_Actor | null = null;\n  public m_actors: DynamicTreeTest_Actor[] = b2.MakeArray(DynamicTreeTest.e_actorCount, () => new DynamicTreeTest_Actor());\n  public m_stepCount = 0;\n  public m_automated = false;\n\n  constructor() {\n    super();\n\n    this.m_worldExtent = 15.0;\n    this.m_proxyExtent = 0.5;\n\n    //srand(888);\n\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      const actor = this.m_actors[i];\n      this.GetRandomAABB(actor.aabb);\n      actor.proxyId = this.m_tree.CreateProxy(actor.aabb, actor);\n    }\n\n    this.m_stepCount = 0;\n\n    const h = this.m_worldExtent;\n    this.m_queryAABB.lowerBound.Set(-3.0, -4.0 + h);\n    this.m_queryAABB.upperBound.Set(5.0, 6.0 + h);\n\n    this.m_rayCastInput.p1.Set(-5.0, 5.0 + h);\n    this.m_rayCastInput.p2.Set(7.0, -4.0 + h);\n    //this.m_rayCastInput.p1.Set(0.0, 2.0 + h);\n    //this.m_rayCastInput.p2.Set(0.0, -2.0 + h);\n    this.m_rayCastInput.maxFraction = 1.0;\n\n    this.m_automated = false;\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    this.Reset();\n\n    if (this.m_automated) {\n      const actionCount = b2.Max(1, DynamicTreeTest.e_actorCount >> 2);\n\n      for (let i = 0; i < actionCount; ++i) {\n        this.Action();\n      }\n    }\n\n    this.Query();\n    this.RayCast();\n\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      const actor = this.m_actors[i];\n      if (actor.proxyId === null) {\n        continue;\n      }\n\n      const c = new b2.Color(0.9, 0.9, 0.9);\n      if (actor === this.m_rayActor && actor.overlap) {\n        c.SetRGB(0.9, 0.6, 0.6);\n      } else if (actor === this.m_rayActor) {\n        c.SetRGB(0.6, 0.9, 0.6);\n      } else if (actor.overlap) {\n        c.SetRGB(0.6, 0.6, 0.9);\n      }\n      testbed.g_debugDraw.DrawAABB(actor.aabb, c);\n    }\n\n    const c = new b2.Color(0.7, 0.7, 0.7);\n    testbed.g_debugDraw.DrawAABB(this.m_queryAABB, c);\n\n    testbed.g_debugDraw.DrawSegment(this.m_rayCastInput.p1, this.m_rayCastInput.p2, c);\n\n    const c1 = new b2.Color(0.2, 0.9, 0.2);\n    const c2 = new b2.Color(0.9, 0.2, 0.2);\n    testbed.g_debugDraw.DrawPoint(this.m_rayCastInput.p1, 6.0, c1);\n    testbed.g_debugDraw.DrawPoint(this.m_rayCastInput.p2, 6.0, c2);\n\n    if (this.m_rayActor) {\n      const cr = new b2.Color(0.2, 0.2, 0.9);\n      //b2.Vec2 p = this.m_rayCastInput.p1 + this.m_rayActor.fraction * (this.m_rayCastInput.p2 - this.m_rayCastInput.p1);\n      const p = b2.Vec2.AddVV(this.m_rayCastInput.p1, b2.Vec2.MulSV(this.m_rayActor.fraction, b2.Vec2.SubVV(this.m_rayCastInput.p2, this.m_rayCastInput.p1, new b2.Vec2()), new b2.Vec2()), new b2.Vec2());\n      testbed.g_debugDraw.DrawPoint(p, 6.0, cr);\n    }\n\n    {\n      const height = this.m_tree.GetHeight();\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, `dynamic tree height = ${height}`);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    }\n\n    ++this.m_stepCount;\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        this.m_automated = !this.m_automated;\n        break;\n\n      case \"c\":\n        this.CreateProxy();\n        break;\n\n      case \"d\":\n        this.DestroyProxy();\n        break;\n\n      case \"m\":\n        this.MoveProxy();\n        break;\n    }\n  }\n\n  public GetRandomAABB(aabb: b2.AABB): void {\n    const w = new b2.Vec2();\n    w.Set(2.0 * this.m_proxyExtent, 2.0 * this.m_proxyExtent);\n    //aabb.lowerBound.x = -this.m_proxyExtent;\n    //aabb.lowerBound.y = -this.m_proxyExtent + this.m_worldExtent;\n    aabb.lowerBound.x = b2.RandomRange(-this.m_worldExtent, this.m_worldExtent);\n    aabb.lowerBound.y = b2.RandomRange(0.0, 2.0 * this.m_worldExtent);\n    aabb.upperBound.Copy(aabb.lowerBound);\n    aabb.upperBound.SelfAdd(w);\n  }\n\n  public MoveAABB(aabb: b2.AABB): void {\n    const d = new b2.Vec2();\n    d.x = b2.RandomRange(-0.5, 0.5);\n    d.y = b2.RandomRange(-0.5, 0.5);\n    //d.x = 2.0;\n    //d.y = 0.0;\n    aabb.lowerBound.SelfAdd(d);\n    aabb.upperBound.SelfAdd(d);\n\n    //b2.Vec2 c0 = 0.5 * (aabb.lowerBound + aabb.upperBound);\n    const c0 = b2.Vec2.MulSV(0.5, b2.Vec2.AddVV(aabb.lowerBound, aabb.upperBound, b2.Vec2.s_t0), new b2.Vec2());\n    const min = new b2.Vec2(-this.m_worldExtent, 0.0);\n    const max = new b2.Vec2(this.m_worldExtent, 2.0 * this.m_worldExtent);\n    const c = b2.Vec2.ClampV(c0, min, max, new b2.Vec2());\n\n    aabb.lowerBound.SelfAdd(b2.Vec2.SubVV(c, c0, new b2.Vec2()));\n    aabb.upperBound.SelfAdd(b2.Vec2.SubVV(c, c0, new b2.Vec2()));\n  }\n\n  public CreateProxy(): void {\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      const j = 0 | b2.RandomRange(0, DynamicTreeTest.e_actorCount);\n      const actor = this.m_actors[j];\n      if (actor.proxyId === null) {\n        this.GetRandomAABB(actor.aabb);\n        actor.proxyId = this.m_tree.CreateProxy(actor.aabb, actor);\n        return;\n      }\n    }\n  }\n\n  public DestroyProxy(): void {\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      const j = 0 | b2.RandomRange(0, DynamicTreeTest.e_actorCount);\n      const actor = this.m_actors[j];\n      if (actor.proxyId !== null) {\n        this.m_tree.DestroyProxy(actor.proxyId);\n        actor.proxyId = null;\n        return;\n      }\n    }\n  }\n\n  public MoveProxy(): void {\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      const j = 0 | b2.RandomRange(0, DynamicTreeTest.e_actorCount);\n      const actor = this.m_actors[j];\n      if (actor.proxyId === null) {\n        continue;\n      }\n\n      const aabb0 = new b2.AABB();\n      aabb0.Copy(actor.aabb);\n      this.MoveAABB(actor.aabb);\n      const displacement = b2.Vec2.SubVV(actor.aabb.GetCenter(), aabb0.GetCenter(), new b2.Vec2());\n      this.m_tree.MoveProxy(actor.proxyId, actor.aabb, displacement);\n      return;\n    }\n  }\n\n  public Reset(): void {\n    this.m_rayActor = null;\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      this.m_actors[i].fraction = 1.0;\n      this.m_actors[i].overlap = false;\n    }\n  }\n\n  public Action(): void {\n    const choice = 0 | b2.RandomRange(0, 20);\n\n    switch (choice) {\n      case 0:\n        this.CreateProxy();\n        break;\n\n      case 1:\n        this.DestroyProxy();\n        break;\n\n      default:\n        this.MoveProxy();\n    }\n  }\n\n  public Query(): void {\n    this.m_tree.Query(this.m_queryAABB, (proxyId: b2.TreeNode<DynamicTreeTest_Actor>): boolean => {\n      const actor = proxyId.userData; // this.m_tree.GetUserData(proxyId);\n      actor.overlap = b2.TestOverlapAABB(this.m_queryAABB, actor.aabb);\n      return true;\n    });\n\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      if (this.m_actors[i].proxyId === null) {\n        continue;\n      }\n\n      // DEBUG: const overlap =\n      b2.TestOverlapAABB(this.m_queryAABB, this.m_actors[i].aabb);\n      // DEBUG: b2.Assert(overlap === this.m_actors[i].overlap);\n    }\n  }\n\n  public RayCast(): void {\n    this.m_rayActor = null;\n\n    const input = new b2.RayCastInput();\n    input.Copy(this.m_rayCastInput);\n\n    // Ray cast against the dynamic tree.\n    this.m_tree.RayCast(input, (input: b2.RayCastInput, proxyId: b2.TreeNode<DynamicTreeTest_Actor>): number => {\n      const actor: DynamicTreeTest_Actor = proxyId.userData; // this.m_tree.GetUserData(proxyId);\n\n      const output = new b2.RayCastOutput();\n      const hit = actor.aabb.RayCast(output, input);\n\n      if (hit) {\n        this.m_rayCastOutput = output;\n        this.m_rayActor = actor;\n        this.m_rayActor.fraction = output.fraction;\n        return output.fraction;\n      }\n\n      return input.maxFraction;\n    });\n\n    // Brute force ray cast.\n    let bruteActor = null;\n    const bruteOutput = new b2.RayCastOutput();\n    for (let i = 0; i < DynamicTreeTest.e_actorCount; ++i) {\n      if (this.m_actors[i].proxyId === null) {\n        continue;\n      }\n\n      const output = new b2.RayCastOutput();\n      const hit = this.m_actors[i].aabb.RayCast(output, input);\n      if (hit) {\n        bruteActor = this.m_actors[i];\n        bruteOutput.Copy(output);\n        input.maxFraction = output.fraction;\n      }\n    }\n\n    if (bruteActor !== null) {\n      // DEBUG: b2.Assert(bruteOutput.fraction === this.m_rayCastOutput.fraction);\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new DynamicTreeTest();\n  }\n}\n\nexport class DynamicTreeTest_Actor {\n  public aabb = new b2.AABB();\n  public fraction = 0.0;\n  public overlap = false;\n  public proxyId: b2.TreeNode<DynamicTreeTest_Actor> | null = null;\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Collision\", \"Dynamic Tree\", DynamicTreeTest.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class EdgeShapesCallback extends b2.RayCastCallback {\n  public m_fixture: b2.Fixture | null = null;\n  public m_point = new b2.Vec2();\n  public m_normal = new b2.Vec2();\n  public ReportFixture(fixture: b2.Fixture, point: b2.Vec2, normal: b2.Vec2, fraction: number): number {\n    this.m_fixture = fixture;\n    this.m_point.Copy(point);\n    this.m_normal.Copy(normal);\n    return fraction;\n  }\n}\n\nexport class EdgeShapes extends testbed.Test {\n  public static readonly e_maxBodies = 256;\n\n  public m_bodyIndex = 0;\n  public m_bodies: Array<b2.Body | null>;\n  public m_polygons: b2.PolygonShape[];\n  public m_circle: b2.CircleShape;\n  public m_angle = 0.0;\n\n  constructor() {\n    super();\n\n    this.m_bodyIndex = 0;\n    this.m_bodies = new Array(EdgeShapes.e_maxBodies);\n    this.m_polygons = new Array(4);\n    for (let i = 0; i < 4; ++i) {\n      this.m_polygons[i] = new b2.PolygonShape();\n    }\n    this.m_circle = new b2.CircleShape();\n\n    this.m_angle = 0.0;\n\n    // Ground body\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      let x1 = -20.0;\n      let y1 = 2.0 * b2.Cos(x1 / 10.0 * b2.pi);\n      for (let i = 0; i < 80; ++i) {\n        const x2 = x1 + 0.5;\n        const y2 = 2.0 * b2.Cos(x2 / 10.0 * b2.pi);\n\n        const shape = new b2.EdgeShape();\n        shape.SetTwoSided(new b2.Vec2(x1, y1), new b2.Vec2(x2, y2));\n        ground.CreateFixture(shape, 0.0);\n\n        x1 = x2;\n        y1 = y2;\n      }\n    }\n\n    {\n      const vertices = new Array(3);\n      vertices[0] = new b2.Vec2(-0.5, 0.0);\n      vertices[1] = new b2.Vec2(0.5, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n      this.m_polygons[0].Set(vertices, 3);\n    }\n\n    {\n      const vertices = new Array(3);\n      vertices[0] = new b2.Vec2(-0.1, 0.0);\n      vertices[1] = new b2.Vec2(0.1, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n      this.m_polygons[1].Set(vertices, 3);\n    }\n\n    {\n      const w = 1.0;\n      const b = w / (2.0 + b2.Sqrt(2.0));\n      const s = b2.Sqrt(2.0) * b;\n\n      const vertices = new Array(8);\n      vertices[0] = new b2.Vec2(0.5 * s, 0.0);\n      vertices[1] = new b2.Vec2(0.5 * w, b);\n      vertices[2] = new b2.Vec2(0.5 * w, b + s);\n      vertices[3] = new b2.Vec2(0.5 * s, w);\n      vertices[4] = new b2.Vec2(-0.5 * s, w);\n      vertices[5] = new b2.Vec2(-0.5 * w, b + s);\n      vertices[6] = new b2.Vec2(-0.5 * w, b);\n      vertices[7] = new b2.Vec2(-0.5 * s, 0.0);\n\n      this.m_polygons[2].Set(vertices, 8);\n    }\n\n    {\n      this.m_polygons[3].SetAsBox(0.5, 0.5);\n    }\n\n    {\n      this.m_circle.m_radius = 0.5;\n    }\n\n    for (let i = 0; i < EdgeShapes.e_maxBodies; ++i) {\n      this.m_bodies[i] = null;\n    }\n  }\n\n  public CreateBody(index: number) {\n    const old_body = this.m_bodies[this.m_bodyIndex];\n    if (old_body !== null) {\n      this.m_world.DestroyBody(old_body);\n      this.m_bodies[this.m_bodyIndex] = null;\n    }\n\n    const bd = new b2.BodyDef();\n\n    const x = b2.RandomRange(-10.0, 10.0);\n    const y = b2.RandomRange(10.0, 20.0);\n    bd.position.Set(x, y);\n    bd.angle = b2.RandomRange(-b2.pi, b2.pi);\n    bd.type = b2.BodyType.b2_dynamicBody;\n\n    if (index === 4) {\n      bd.angularDamping = 0.02;\n    }\n\n    const new_body = this.m_bodies[this.m_bodyIndex] = this.m_world.CreateBody(bd);\n\n    if (index < 4) {\n      const fd = new b2.FixtureDef();\n      fd.shape = this.m_polygons[index];\n      fd.friction = 0.3;\n      fd.density = 20.0;\n      new_body.CreateFixture(fd);\n    } else {\n      const fd = new b2.FixtureDef();\n      fd.shape = this.m_circle;\n      fd.friction = 0.3;\n      fd.density = 20.0;\n\n      new_body.CreateFixture(fd);\n    }\n\n    this.m_bodyIndex = (this.m_bodyIndex + 1) % EdgeShapes.e_maxBodies;\n  }\n\n  public DestroyBody() {\n    for (let i = 0; i < EdgeShapes.e_maxBodies; ++i) {\n      const body = this.m_bodies[i];\n      if (body !== null) {\n        this.m_world.DestroyBody(body);\n        this.m_bodies[i] = null;\n        return;\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n        this.CreateBody(key.charCodeAt(0) - \"1\".charCodeAt(0));\n        break;\n\n      case \"d\":\n        this.DestroyBody();\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    const advanceRay = !settings.m_pause || settings.m_singleStep;\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press 1-5 to drop stuff, m to change the mode\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    const L = 25.0;\n    const point1 = new b2.Vec2(0.0, 10.0);\n    const d = new b2.Vec2(L * b2.Cos(this.m_angle), -L * b2.Abs(b2.Sin(this.m_angle)));\n    const point2 = b2.Vec2.AddVV(point1, d, new b2.Vec2());\n\n    const callback = new EdgeShapesCallback();\n    this.m_world.RayCast(callback, point1, point2);\n\n    if (callback.m_fixture) {\n      testbed.g_debugDraw.DrawPoint(callback.m_point, 5.0, new b2.Color(0.4, 0.9, 0.4));\n      testbed.g_debugDraw.DrawSegment(point1, callback.m_point, new b2.Color(0.8, 0.8, 0.8));\n      const head = b2.Vec2.AddVV(callback.m_point, b2.Vec2.MulSV(0.5, callback.m_normal, b2.Vec2.s_t0), new b2.Vec2());\n      testbed.g_debugDraw.DrawSegment(callback.m_point, head, new b2.Color(0.9, 0.9, 0.4));\n    } else {\n      testbed.g_debugDraw.DrawSegment(point1, point2, new b2.Color(0.8, 0.8, 0.8));\n    }\n\n    if (advanceRay) {\n      this.m_angle += 0.25 * b2.pi / 180.0;\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new EdgeShapes();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Geometry\", \"Edge Shapes\", EdgeShapes.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class EdgeTest extends testbed.Test {\n  public readonly m_offset1: b2.Vec2 = new b2.Vec2();\n  public readonly m_offset2: b2.Vec2 = new b2.Vec2();\n  public m_body1: b2.Body | null = null;\n  public m_body2: b2.Body | null = null;\n  public m_boxes: boolean = false;\n\n  constructor() {\n    super();\n\n    const vertices: b2.Vec2[] =\n      [\n        new b2.Vec2(10.0, -4.0),\n        new b2.Vec2(10.0, 0.0),\n        new b2.Vec2(6.0, 0.0),\n        new b2.Vec2(4.0, 2.0),\n        new b2.Vec2(2.0, 0.0),\n        new b2.Vec2(-2.0, 0.0),\n        new b2.Vec2(-6.0, 0.0),\n        new b2.Vec2(-8.0, -3.0),\n        new b2.Vec2(-10.0, 0.0),\n        new b2.Vec2(-10.0, -4.0),\n      ];\n\n    this.m_offset1.Set(0.0, 8.0);\n    this.m_offset2.Set(0.0, 16.0);\n\n    {\n      const v1: b2.Vec2 = vertices[0].Clone().SelfAdd(this.m_offset1);\n      const v2: b2.Vec2 = vertices[1].Clone().SelfAdd(this.m_offset1);\n      const v3: b2.Vec2 = vertices[2].Clone().SelfAdd(this.m_offset1);\n      const v4: b2.Vec2 = vertices[3].Clone().SelfAdd(this.m_offset1);\n      const v5: b2.Vec2 = vertices[4].Clone().SelfAdd(this.m_offset1);\n      const v6: b2.Vec2 = vertices[5].Clone().SelfAdd(this.m_offset1);\n      const v7: b2.Vec2 = vertices[6].Clone().SelfAdd(this.m_offset1);\n      const v8: b2.Vec2 = vertices[7].Clone().SelfAdd(this.m_offset1);\n      const v9: b2.Vec2 = vertices[8].Clone().SelfAdd(this.m_offset1);\n      const v10: b2.Vec2 = vertices[9].Clone().SelfAdd(this.m_offset1);\n\n      const bd: b2.BodyDef = new b2.BodyDef();\n      const ground: b2.Body = this.m_world.CreateBody(bd);\n\n      const shape: b2.EdgeShape = new b2.EdgeShape();\n\n      shape.SetOneSided(v10, v1, v2, v3);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v1, v2, v3, v4);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v2, v3, v4, v5);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v3, v4, v5, v6);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v4, v5, v6, v7);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v5, v6, v7, v8);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v6, v7, v8, v9);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v7, v8, v9, v10);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v8, v9, v10, v1);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetOneSided(v9, v10, v1, v2);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const v1: b2.Vec2 = vertices[0].Clone().SelfAdd(this.m_offset2);\n      const v2: b2.Vec2 = vertices[1].Clone().SelfAdd(this.m_offset2);\n      const v3: b2.Vec2 = vertices[2].Clone().SelfAdd(this.m_offset2);\n      const v4: b2.Vec2 = vertices[3].Clone().SelfAdd(this.m_offset2);\n      const v5: b2.Vec2 = vertices[4].Clone().SelfAdd(this.m_offset2);\n      const v6: b2.Vec2 = vertices[5].Clone().SelfAdd(this.m_offset2);\n      const v7: b2.Vec2 = vertices[6].Clone().SelfAdd(this.m_offset2);\n      const v8: b2.Vec2 = vertices[7].Clone().SelfAdd(this.m_offset2);\n      const v9: b2.Vec2 = vertices[8].Clone().SelfAdd(this.m_offset2);\n      const v10: b2.Vec2 = vertices[9].Clone().SelfAdd(this.m_offset2);\n\n      const bd: b2.BodyDef = new b2.BodyDef();\n      const ground: b2.Body = this.m_world.CreateBody(bd);\n\n      const shape: b2.EdgeShape = new b2.EdgeShape();\n\n      shape.SetTwoSided(v1, v2);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v2, v3);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v3, v4);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v4, v5);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v5, v6);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v6, v7);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v7, v8);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v8, v9);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v9, v10);\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(v10, v1);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    this.m_body1 = null;\n    this.m_body2 = null;\n    this.CreateBoxes();\n    this.m_boxes = true;\n  }\n\n  public CreateBoxes(): void {\n    if (this.m_body1) {\n      this.m_world.DestroyBody(this.m_body1);\n      this.m_body1 = null;\n    }\n\n    if (this.m_body2) {\n      this.m_world.DestroyBody(this.m_body2);\n      this.m_body2 = null;\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      // bd.position = b2Vec2(8.0, 2.6) + this.m_offset1;\n      bd.position.x = 8.0 + this.m_offset1.x;\n      bd.position.y = 2.6 + this.m_offset1.y;\n      bd.allowSleep = false;\n      this.m_body1 = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 1.0);\n\n      this.m_body1.CreateFixture(shape, 1.0);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      // bd.position = b2Vec2(8.0, 2.6f) + this.m_offset2;\n      bd.position.x = 8.0 + this.m_offset2.x;\n      bd.position.y = 2.6 + this.m_offset2.y;\n      bd.allowSleep = false;\n      this.m_body2 = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 1.0);\n\n      this.m_body2.CreateFixture(shape, 1.0);\n    }\n  }\n\n  public CreateCircles(): void {\n    if (this.m_body1) {\n      this.m_world.DestroyBody(this.m_body1);\n      this.m_body1 = null;\n    }\n\n    if (this.m_body2) {\n      this.m_world.DestroyBody(this.m_body2);\n      this.m_body2 = null;\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      // bd.position = b2Vec2(-0.5f, 0.6f) + this.m_offset1;\n      bd.position.x = -0.5 + this.m_offset1.x;\n      bd.position.y = 0.6 + this.m_offset1.y;\n      bd.allowSleep = false;\n      this.m_body1 = this.m_world.CreateBody(bd);\n\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.5;\n\n      this.m_body1.CreateFixture(shape, 1.0);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      // bd.position = b2Vec2(-0.5f, 0.6f) + this.m_offset2;\n      bd.position.x = -0.5 + this.m_offset2.x;\n      bd.position.y = 0.6 + this.m_offset2.y;\n      bd.allowSleep = false;\n      this.m_body2 = this.m_world.CreateBody(bd);\n\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.5;\n\n      this.m_body2.CreateFixture(shape, 1.0);\n    }\n  }\n\n  public UpdateUI(): void {\n    // ImGui::SetNextWindowPos(ImVec2(10.0, 100.0));\n    // ImGui::SetNextWindowSize(ImVec2(200.0, 100.0));\n    // ImGui::Begin(\"Custom Controls\", null, ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoResize);\n\n    // if (ImGui::RadioButton(\"Boxes\", m_boxes == true))\n    // {\n    //   CreateBoxes();\n    //   m_boxes = true;\n    // }\n\n    // if (ImGui::RadioButton(\"Circles\", m_boxes == false))\n    // {\n    //   CreateCircles();\n    //   m_boxes = false;\n    // }\n\n    // ImGui::End();\n  }\n\n  public Step(settings: testbed.Settings): void {\n    // if (glfwGetKey(g_mainWindow, GLFW_KEY_A) == GLFW_PRESS)\n    // {\n    //   this.m_body1.ApplyForceToCenter(new b2.Vec2(-10.0, 0.0), true);\n    //   this.m_body2.ApplyForceToCenter(new b2.Vec2(-10.0, 0.0), true);\n    // }\n\n    // if (glfwGetKey(g_mainWindow, GLFW_KEY_D) == GLFW_PRESS)\n    // {\n    //   this.m_body1.ApplyForceToCenter(new b2.Vec2(10.0, 0.0), true);\n    //   this.m_body2.ApplyForceToCenter(new b2.Vec2(10.0, 0.0), true);\n    // }\n\n    super.Step(settings);\n  }\n\n  public Keyboard(key: string): void {\n    switch (key) {\n      case \"a\":\n        this.m_body1?.ApplyForceToCenter(new b2.Vec2(-10.0, 0.0), true);\n        this.m_body2?.ApplyForceToCenter(new b2.Vec2(-10.0, 0.0), true);\n        break;\n\n      case \"d\":\n        this.m_body1?.ApplyForceToCenter(new b2.Vec2(10.0, 0.0), true);\n        this.m_body2?.ApplyForceToCenter(new b2.Vec2(10.0, 0.0), true);\n        break;\n\n      case \"b\":\n        this.CreateBoxes();\n        break;\n\n      case \"c\":\n        this.CreateCircles();\n        break;\n      }\n  }\n\n  public static Create(): testbed.Test {\n    return new EdgeTest();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Geometry\", \"Edge Test\", EdgeTest.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Friction extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(13.0, 0.25);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(-4.0, 22.0);\n      bd.angle = -0.25;\n\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.25, 1.0);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(10.5, 19.0);\n\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(13.0, 0.25);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(4.0, 14.0);\n      bd.angle = 0.25;\n\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.25, 1.0);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(-10.5, 11.0);\n\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(13.0, 0.25);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(-4.0, 6.0);\n      bd.angle = -0.25;\n\n      const ground = this.m_world.CreateBody(bd);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.5);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 25.0;\n\n      const friction = [0.75, 0.5, 0.35, 0.1, 0.0];\n\n      for (let i = 0; i < 5; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-15.0 + 4.0 * i, 28.0);\n        const body = this.m_world.CreateBody(bd);\n\n        fd.friction = friction[i];\n        body.CreateFixture(fd);\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Friction();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Forces\", \"Friction\", Friction.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class GearJoint extends testbed.Test {\n  public m_joint1: b2.RevoluteJoint;\n  public m_joint2: b2.RevoluteJoint;\n  public m_joint3: b2.PrismaticJoint;\n  public m_joint4: b2.GearJoint;\n  public m_joint5: b2.GearJoint;\n\n  constructor() {\n    super();\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-50.0, 0.0), new b2.Vec2(50.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const circle1 = new b2.CircleShape();\n      circle1.m_radius = 1.0;\n\n      const box = new b2.PolygonShape();\n      box.SetAsBox(0.5, 5.0);\n\n      const circle2 = new b2.CircleShape();\n      circle2.m_radius = 2.0;\n\n      const bd1 = new b2.BodyDef();\n      bd1.type = b2.BodyType.b2_staticBody;\n      bd1.position.Set(10.0, 9.0);\n      const body1 = this.m_world.CreateBody(bd1);\n      body1.CreateFixture(circle1, 5.0);\n\n      const bd2 = new b2.BodyDef();\n      bd2.type = b2.BodyType.b2_dynamicBody;\n      bd2.position.Set(10.0, 8.0);\n      const body2 = this.m_world.CreateBody(bd2);\n      body2.CreateFixture(box, 5.0);\n\n      const bd3 = new b2.BodyDef();\n      bd3.type = b2.BodyType.b2_dynamicBody;\n      bd3.position.Set(10.0, 6.0);\n      const body3 = this.m_world.CreateBody(bd3);\n      body3.CreateFixture(circle2, 5.0);\n\n      const jd1 = new b2.RevoluteJointDef();\n      jd1.Initialize(body1, body2, bd1.position);\n      const joint1: b2.RevoluteJoint = this.m_world.CreateJoint(jd1);\n\n      const jd2 = new b2.RevoluteJointDef();\n      jd2.Initialize(body2, body3, bd3.position);\n      const joint2: b2.RevoluteJoint = this.m_world.CreateJoint(jd2);\n\n      const jd4 = new b2.GearJointDef();\n      jd4.bodyA = body1;\n      jd4.bodyB = body3;\n      jd4.joint1 = joint1;\n      jd4.joint2 = joint2;\n      jd4.ratio = circle2.m_radius / circle1.m_radius;\n      this.m_world.CreateJoint(jd4);\n    }\n\n    {\n      const circle1 = new b2.CircleShape();\n      circle1.m_radius = 1.0;\n\n      const circle2 = new b2.CircleShape();\n      circle2.m_radius = 2.0;\n\n      const box = new b2.PolygonShape();\n      box.SetAsBox(0.5, 5.0);\n\n      const bd1 = new b2.BodyDef();\n      bd1.type = b2.BodyType.b2_dynamicBody;\n      bd1.position.Set(-3.0, 12.0);\n      const body1 = this.m_world.CreateBody(bd1);\n      body1.CreateFixture(circle1, 5.0);\n\n      const jd1 = new b2.RevoluteJointDef();\n      jd1.bodyA = ground;\n      jd1.bodyB = body1;\n      ground.GetLocalPoint(bd1.position, jd1.localAnchorA);\n      body1.GetLocalPoint(bd1.position, jd1.localAnchorB);\n      jd1.referenceAngle = body1.GetAngle() - ground.GetAngle();\n      this.m_joint1 = this.m_world.CreateJoint(jd1);\n\n      const bd2 = new b2.BodyDef();\n      bd2.type = b2.BodyType.b2_dynamicBody;\n      bd2.position.Set(0.0, 12.0);\n      const body2 = this.m_world.CreateBody(bd2);\n      body2.CreateFixture(circle2, 5.0);\n\n      const jd2 = new b2.RevoluteJointDef();\n      jd2.Initialize(ground, body2, bd2.position);\n      this.m_joint2 = this.m_world.CreateJoint(jd2);\n\n      const bd3 = new b2.BodyDef();\n      bd3.type = b2.BodyType.b2_dynamicBody;\n      bd3.position.Set(2.5, 12.0);\n      const body3 = this.m_world.CreateBody(bd3);\n      body3.CreateFixture(box, 5.0);\n\n      const jd3 = new b2.PrismaticJointDef();\n      jd3.Initialize(ground, body3, bd3.position, new b2.Vec2(0.0, 1.0));\n      jd3.lowerTranslation = -5.0;\n      jd3.upperTranslation = 5.0;\n      jd3.enableLimit = true;\n\n      this.m_joint3 = this.m_world.CreateJoint(jd3);\n\n      const jd4 = new b2.GearJointDef();\n      jd4.bodyA = body1;\n      jd4.bodyB = body2;\n      jd4.joint1 = this.m_joint1;\n      jd4.joint2 = this.m_joint2;\n      jd4.ratio = circle2.m_radius / circle1.m_radius;\n      this.m_joint4 = this.m_world.CreateJoint(jd4);\n\n      const jd5 = new b2.GearJointDef();\n      jd5.bodyA = body2;\n      jd5.bodyB = body3;\n      jd5.joint1 = this.m_joint2;\n      jd5.joint2 = this.m_joint3;\n      jd5.ratio = -1.0 / circle2.m_radius;\n      this.m_joint5 = this.m_world.CreateJoint(jd5);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    // float ratio, value;\n    let ratio: number; let value: number;\n\n    ratio = this.m_joint4.GetRatio();\n    value = this.m_joint1.GetJointAngle() + ratio * this.m_joint2.GetJointAngle();\n    // g_debugDraw.DrawString(5, m_textLine, \"theta1 + %4.2f * theta2 = %4.2f\", (float) ratio, (float) value);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `theta1 + ${ratio.toFixed(2)} * theta2 = ${value.toFixed(2)}`);\n    // m_textLine += m_textIncrement;\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    ratio = this.m_joint5.GetRatio();\n    value = this.m_joint2.GetJointAngle() + ratio * this.m_joint3.GetJointTranslation();\n    // g_debugDraw.DrawString(5, m_textLine, \"theta2 + %4.2f * delta = %4.2f\", (float) ratio, (float) value);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `theta2 + ${ratio.toFixed(2)} * delta = ${value.toFixed(2)}`);\n    // m_textLine += m_textIncrement;\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new GearJoint();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Gear\", GearJoint.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Heavy1 extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Set(0.0, 0.5);\n    let body = this.m_world.CreateBody(bd);\n\n    const shape = new b2.CircleShape();\n    shape.m_radius = 0.5;\n    body.CreateFixture(shape, 10.0);\n\n    bd.position.Set(0.0, 6.0);\n    body = this.m_world.CreateBody(bd);\n    shape.m_radius = 5.0;\n    body.CreateFixture(shape, 10.0);\n  }\n\n  public static Create() {\n    return new Heavy1();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Solver\", \"Heavy 1\", Heavy1.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Heavy2 extends testbed.Test {\n  public m_heavy: b2.Body | null = null;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Set(0.0, 2.5);\n    let body = this.m_world.CreateBody(bd);\n\n    const shape = new b2.CircleShape();\n    shape.m_radius = 0.5;\n    body.CreateFixture(shape, 10.0);\n\n    bd.position.Set(0.0, 3.5);\n    body = this.m_world.CreateBody(bd);\n    body.CreateFixture(shape, 10.0);\n  }\n\n  public ToggleHeavy() {\n    if (this.m_heavy !== null) {\n      this.m_world.DestroyBody(this.m_heavy);\n      this.m_heavy = null;\n    } else {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 9.0);\n      this.m_heavy = this.m_world.CreateBody(bd);\n\n      const shape = new b2.CircleShape();\n      shape.m_radius = 5.0;\n      this.m_heavy.CreateFixture(shape, 10.0);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"h\":\n        this.ToggleHeavy();\n        break;\n    }\n  }\n\n  public static Create() {\n    return new Heavy2();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Solver\", \"Heavy 2\", Heavy2.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class MobileBalanced extends testbed.Test {\n  public static readonly e_depth = 4;\n\n  constructor() {\n    super();\n\n    // Create ground body.\n    const bodyDef = new b2.BodyDef();\n    bodyDef.position.Set(0.0, 20.0);\n    const ground = this.m_world.CreateBody(bodyDef);\n\n    const a = 0.5;\n    const h = new b2.Vec2(0.0, a);\n\n    const root = this.AddNode(ground, b2.Vec2_zero, 0, 3.0, a);\n\n    const jointDef = new b2.RevoluteJointDef();\n    jointDef.bodyA = ground;\n    jointDef.bodyB = root;\n    jointDef.localAnchorA.SetZero();\n    jointDef.localAnchorB.Copy(h);\n    this.m_world.CreateJoint(jointDef);\n  }\n\n  public AddNode(parent: b2.Body, localAnchor: b2.Vec2, depth: number, offset: number, a: number): b2.Body {\n    const density = 20.0;\n    const h = new b2.Vec2(0.0, a);\n\n    //  b2Vec2 p = parent->GetPosition() + localAnchor - h;\n    const p = parent.GetPosition().Clone().SelfAdd(localAnchor).SelfSub(h);\n\n    const bodyDef = new b2.BodyDef();\n    bodyDef.type = b2.BodyType.b2_dynamicBody;\n    bodyDef.position.Copy(p);\n    const body = this.m_world.CreateBody(bodyDef);\n\n    const shape = new b2.PolygonShape();\n    shape.SetAsBox(0.25 * a, a);\n    body.CreateFixture(shape, density);\n\n    if (depth === MobileBalanced.e_depth) {\n      return body;\n    }\n\n    shape.SetAsBox(offset, 0.25 * a, new b2.Vec2(0, -a), 0.0);\n    body.CreateFixture(shape, density);\n\n    const a1 = new b2.Vec2(offset, -a);\n    const a2 = new b2.Vec2(-offset, -a);\n    const body1 = this.AddNode(body, a1, depth + 1, 0.5 * offset, a);\n    const body2 = this.AddNode(body, a2, depth + 1, 0.5 * offset, a);\n\n    const jointDef = new b2.RevoluteJointDef();\n    jointDef.bodyA = body;\n    jointDef.localAnchorB.Copy(h);\n\n    jointDef.localAnchorA.Copy(a1);\n    jointDef.bodyB = body1;\n    this.m_world.CreateJoint(jointDef);\n\n    jointDef.localAnchorA.Copy(a2);\n    jointDef.bodyB = body2;\n    this.m_world.CreateJoint(jointDef);\n\n    return body;\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new MobileBalanced();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Solver\", \"Mobile Balanced\", MobileBalanced.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Mobile extends testbed.Test {\n  public static readonly e_depth = 4;\n\n  constructor() {\n    super();\n\n    // Create ground body.\n    const bodyDef = new b2.BodyDef();\n    bodyDef.position.Set(0.0, 20.0);\n    const ground = this.m_world.CreateBody(bodyDef);\n\n    const a = 0.5;\n    const h = new b2.Vec2(0.0, a);\n\n    const root = this.AddNode(ground, b2.Vec2_zero, 0, 3.0, a);\n\n    const jointDef = new b2.RevoluteJointDef();\n    jointDef.bodyA = ground;\n    jointDef.bodyB = root;\n    jointDef.localAnchorA.SetZero();\n    jointDef.localAnchorB.Copy(h);\n    this.m_world.CreateJoint(jointDef);\n  }\n\n  public AddNode(parent: b2.Body, localAnchor: b2.Vec2, depth: number, offset: number, a: number): b2.Body {\n    const density = 20.0;\n    const h = new b2.Vec2(0.0, a);\n\n    //  b2Vec2 p = parent->GetPosition() + localAnchor - h;\n    const p = parent.GetPosition().Clone().SelfAdd(localAnchor).SelfSub(h);\n\n    const bodyDef = new b2.BodyDef();\n    bodyDef.type = b2.BodyType.b2_dynamicBody;\n    bodyDef.position.Copy(p);\n    const body = this.m_world.CreateBody(bodyDef);\n\n    const shape = new b2.PolygonShape();\n    shape.SetAsBox(0.25 * a, a);\n    body.CreateFixture(shape, density);\n\n    if (depth === Mobile.e_depth) {\n      return body;\n    }\n\n    const a1 = new b2.Vec2(offset, -a);\n    const a2 = new b2.Vec2(-offset, -a);\n    const body1 = this.AddNode(body, a1, depth + 1, 0.5 * offset, a);\n    const body2 = this.AddNode(body, a2, depth + 1, 0.5 * offset, a);\n\n    const jointDef = new b2.RevoluteJointDef();\n    jointDef.bodyA = body;\n    jointDef.localAnchorB.Copy(h);\n\n    jointDef.localAnchorA.Copy(a1);\n    jointDef.bodyB = body1;\n    this.m_world.CreateJoint(jointDef);\n\n    jointDef.localAnchorA.Copy(a2);\n    jointDef.bodyB = body2;\n    this.m_world.CreateJoint(jointDef);\n\n    return body;\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Mobile();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Solver\", \"Mobile Unbalanced\", Mobile.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/// This test shows how to use a motor joint. A motor joint\n/// can be used to animate a dynamic body. With finite motor forces\n/// the body can be blocked by collision with other bodies.\nexport class MotorJoint extends testbed.Test {\n  public m_joint: b2.MotorJoint;\n  public m_time = 0;\n  public m_go = false;\n\n  constructor() {\n    super();\n\n    let ground = null;\n\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-20.0, 0.0), new b2.Vec2(20.0, 0.0));\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n\n      ground.CreateFixture(fd);\n    }\n\n    // Define motorized body\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 8.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(2.0, 0.5);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.friction = 0.6;\n      fd.density = 2.0;\n      body.CreateFixture(fd);\n\n      const mjd = new b2.MotorJointDef();\n      mjd.Initialize(ground, body);\n      mjd.maxForce = 1000.0;\n      mjd.maxTorque = 1000.0;\n      this.m_joint = this.m_world.CreateJoint(mjd);\n    }\n\n    this.m_go = false;\n    this.m_time = 0.0;\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"s\":\n        this.m_go = !this.m_go;\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    if (this.m_go && settings.m_hertz > 0.0) {\n      this.m_time += 1.0 / settings.m_hertz;\n    }\n\n    const linearOffset = new b2.Vec2();\n    linearOffset.x = 6.0 * b2.Sin(2.0 * this.m_time);\n    linearOffset.y = 8.0 + 4.0 * b2.Sin(1.0 * this.m_time);\n\n    const angularOffset = 4.0 * this.m_time;\n\n    this.m_joint.SetLinearOffset(linearOffset);\n    this.m_joint.SetAngularOffset(angularOffset);\n\n    testbed.g_debugDraw.DrawPoint(linearOffset, 4.0, new b2.Color(0.9, 0.9, 0.9));\n\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: (s) pause\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new MotorJoint();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Motor Joint\", MotorJoint.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/// This tests bullet collision and provides an example of a gameplay scenario.\n/// This also uses a loop shape.\nexport class Pinball extends testbed.Test {\n  public m_leftJoint: b2.RevoluteJoint;\n  public m_rightJoint: b2.RevoluteJoint;\n  public m_ball: b2.Body;\n  public m_button: boolean = false;\n\n  constructor() {\n    super();\n\n    // Ground body\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const vs = b2.Vec2.MakeArray(5);\n      vs[0].Set(-8.0, 6.0);\n      vs[1].Set(-8.0, 20.0);\n      vs[2].Set(8.0, 20.0);\n      vs[3].Set(8.0, 6.0);\n      vs[4].Set(0.0, -2.0);\n\n      const loop = new b2.ChainShape();\n      loop.CreateLoop(vs);\n      const fd = new b2.FixtureDef();\n      fd.shape = loop;\n      fd.density = 0.0;\n      ground.CreateFixture(fd);\n    }\n\n    // Flippers\n    {\n      const p1 = new b2.Vec2(-2.0, 0.0),\n        p2 = new b2.Vec2(2.0, 0.0);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      bd.position.Copy(p1);\n      const leftFlipper = this.m_world.CreateBody(bd);\n\n      bd.position.Copy(p2);\n      const rightFlipper = this.m_world.CreateBody(bd);\n\n      const box = new b2.PolygonShape();\n      box.SetAsBox(1.75, 0.1);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = box;\n      fd.density = 1.0;\n\n      leftFlipper.CreateFixture(fd);\n      rightFlipper.CreateFixture(fd);\n\n      const jd = new b2.RevoluteJointDef();\n      jd.bodyA = ground;\n      jd.localAnchorB.SetZero();\n      jd.enableMotor = true;\n      jd.maxMotorTorque = 1000.0;\n      jd.enableLimit = true;\n\n      jd.motorSpeed = 0.0;\n      jd.localAnchorA.Copy(p1);\n      jd.bodyB = leftFlipper;\n      jd.lowerAngle = -30.0 * b2.pi / 180.0;\n      jd.upperAngle = 5.0 * b2.pi / 180.0;\n      this.m_leftJoint = this.m_world.CreateJoint(jd);\n\n      jd.motorSpeed = 0.0;\n      jd.localAnchorA.Copy(p2);\n      jd.bodyB = rightFlipper;\n      jd.lowerAngle = -5.0 * b2.pi / 180.0;\n      jd.upperAngle = 30.0 * b2.pi / 180.0;\n      this.m_rightJoint = this.m_world.CreateJoint(jd);\n    }\n\n    // Circle character\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(1.0, 15.0);\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.bullet = true;\n\n      this.m_ball = this.m_world.CreateBody(bd);\n\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.2;\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n      this.m_ball.CreateFixture(fd);\n    }\n\n    this.m_button = false;\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        this.m_button = true;\n        break;\n    }\n  }\n\n  public KeyboardUp(key: string) {\n    switch (key) {\n      case \"a\":\n        this.m_button = false;\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    if (this.m_button) {\n      this.m_leftJoint.SetMotorSpeed(20.0);\n      this.m_rightJoint.SetMotorSpeed(-20.0);\n    } else {\n      this.m_leftJoint.SetMotorSpeed(-10.0);\n      this.m_rightJoint.SetMotorSpeed(10.0);\n    }\n\n    super.Step(settings);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press 'a' to control the flippers\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new Pinball();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Pinball\", Pinball.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Platformer extends testbed.Test {\n  public m_radius = 0.0;\n  public m_top = 0.0;\n  public m_bottom = 0.0;\n  public m_state = Platformer_State.e_unknown;\n  public m_platform: b2.Fixture;\n  public m_character: b2.Fixture;\n\n  constructor() {\n    super();\n\n    // Ground\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Platform\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(0.0, 10.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(3.0, 0.5);\n      this.m_platform = body.CreateFixture(shape, 0.0);\n\n      this.m_bottom = 10.0 - 0.5;\n      this.m_top = 10.0 + 0.5;\n    }\n\n    // Actor\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 12.0);\n      const body = this.m_world.CreateBody(bd);\n\n      this.m_radius = 0.5;\n      const shape = new b2.CircleShape();\n      shape.m_radius = this.m_radius;\n      this.m_character = body.CreateFixture(shape, 20.0);\n\n      body.SetLinearVelocity(new b2.Vec2(0.0, -50.0));\n\n      this.m_state = Platformer_State.e_unknown;\n    }\n  }\n\n  public PreSolve(contact: b2.Contact, oldManifold: b2.Manifold) {\n    super.PreSolve(contact, oldManifold);\n\n    const fixtureA = contact.GetFixtureA();\n    const fixtureB = contact.GetFixtureB();\n\n    if (fixtureA !== this.m_platform && fixtureA !== this.m_character) {\n      return;\n    }\n\n    if (fixtureB !== this.m_platform && fixtureB !== this.m_character) {\n      return;\n    }\n\n    const position = this.m_character.GetBody().GetPosition();\n\n    if (position.y < this.m_top + this.m_radius - 3.0 * b2.linearSlop) {\n      contact.SetEnabled(false);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    const v = this.m_character.GetBody().GetLinearVelocity();\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Character Linear Velocity: ${v.y}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new Platformer();\n  }\n}\n\nexport enum Platformer_State {\n  e_unknown = 0,\n  e_above = 1,\n  e_below = 2,\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Platformer\", Platformer.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class PolygonCollision extends testbed.Test {\n  public m_polygonA = new b2.PolygonShape();\n  public m_polygonB = new b2.PolygonShape();\n  public m_transformA = new b2.Transform();\n  public m_transformB = new b2.Transform();\n  public m_positionB = new b2.Vec2();\n  public m_angleB = 0;\n\n  constructor() {\n    super();\n\n    {\n      this.m_polygonA.SetAsBox(0.2, 0.4);\n      this.m_transformA.SetPositionAngle(new b2.Vec2(0.0, 0.0), 0.0);\n    }\n\n    {\n      this.m_polygonB.SetAsBox(0.5, 0.5);\n      this.m_positionB.Set(19.345284, 1.5632932);\n      this.m_angleB = 1.9160721;\n      this.m_transformB.SetPositionAngle(this.m_positionB, this.m_angleB);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        this.m_positionB.x -= 0.1;\n        break;\n\n      case \"d\":\n        this.m_positionB.x += 0.1;\n        break;\n\n      case \"s\":\n        this.m_positionB.y -= 0.1;\n        break;\n\n      case \"w\":\n        this.m_positionB.y += 0.1;\n        break;\n\n      case \"q\":\n        this.m_angleB += 0.1 * b2.pi;\n        break;\n\n      case \"e\":\n        this.m_angleB -= 0.1 * b2.pi;\n        break;\n    }\n\n    this.m_transformB.SetPositionAngle(this.m_positionB, this.m_angleB);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    const manifold = new b2.Manifold();\n    b2.CollidePolygons(manifold, this.m_polygonA, this.m_transformA, this.m_polygonB, this.m_transformB);\n\n    const worldManifold = new b2.WorldManifold();\n    worldManifold.Initialize(manifold, this.m_transformA, this.m_polygonA.m_radius, this.m_transformB, this.m_polygonB.m_radius);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `point count = ${manifold.pointCount}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    {\n      const color = new b2.Color(0.9, 0.9, 0.9);\n      const v = [];\n      for (let i = 0; i < this.m_polygonA.m_count; ++i) {\n        v[i] = b2.Transform.MulXV(this.m_transformA, this.m_polygonA.m_vertices[i], new b2.Vec2());\n      }\n      testbed.g_debugDraw.DrawPolygon(v, this.m_polygonA.m_count, color);\n\n      for (let i = 0; i < this.m_polygonB.m_count; ++i) {\n        v[i] = b2.Transform.MulXV(this.m_transformB, this.m_polygonB.m_vertices[i], new b2.Vec2());\n      }\n      testbed.g_debugDraw.DrawPolygon(v, this.m_polygonB.m_count, color);\n    }\n\n    for (let i = 0; i < manifold.pointCount; ++i) {\n      testbed.g_debugDraw.DrawPoint(worldManifold.points[i], 4.0, new b2.Color(0.9, 0.3, 0.3));\n    }\n\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new PolygonCollision();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Geometry\", \"Polygon Collision\", PolygonCollision.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/// This tests stacking. It also shows how to use b2World::Query\n/// and b2TestOverlap.\n\n/// This callback is called by b2World::QueryAABB. We find all the fixtures\n/// that overlap an AABB. Of those, we use b2TestOverlap to determine which fixtures\n/// overlap a circle. Up to 4 overlapped fixtures will be highlighted with a yellow border.\nexport class PolygonShapesCallback extends b2.QueryCallback {\n  public static readonly e_maxCount = 4;\n\n  public m_circle = new b2.CircleShape();\n  public m_transform = new b2.Transform();\n  public m_count = 0;\n\n  /// Called for each fixture found in the query AABB.\n  /// @return false to terminate the query.\n  public ReportFixture(fixture: b2.Fixture) {\n    if (this.m_count === PolygonShapesCallback.e_maxCount) {\n      return false;\n    }\n\n    const body = fixture.GetBody();\n    const shape = fixture.GetShape();\n\n    const overlap = b2.TestOverlapShape(shape, 0, this.m_circle, 0, body.GetTransform(), this.m_transform);\n\n    if (overlap) {\n      const color = new b2.Color(0.95, 0.95, 0.6);\n      const center = body.GetWorldCenter();\n      testbed.g_debugDraw.DrawPoint(center, 5.0, color);\n      ++this.m_count;\n    }\n\n    return true;\n  }\n}\n\nexport class PolygonShapes extends testbed.Test {\n  public static readonly e_maxBodies = 256;\n\n  public m_bodyIndex = 0;\n  public m_bodies: Array<b2.Body | null> = b2.MakeArray(PolygonShapes.e_maxBodies, () => null);\n  public m_polygons = b2.MakeArray(4, () => new b2.PolygonShape());\n  public m_circle = new b2.CircleShape();\n\n  constructor() {\n    super();\n\n    // Ground body\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const vertices = new Array(3);\n      vertices[0] = new b2.Vec2(-0.5, 0.0);\n      vertices[1] = new b2.Vec2(0.5, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n      this.m_polygons[0].Set(vertices, 3);\n    }\n\n    {\n      const vertices = new Array(3);\n      vertices[0] = new b2.Vec2(-0.1, 0.0);\n      vertices[1] = new b2.Vec2(0.1, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n      this.m_polygons[1].Set(vertices, 3);\n    }\n\n    {\n      const w = 1.0;\n      const b = w / (2.0 + b2.Sqrt(2.0));\n      const s = b2.Sqrt(2.0) * b;\n\n      const vertices = new Array(8);\n      vertices[0] = new b2.Vec2(0.5 * s, 0.0);\n      vertices[1] = new b2.Vec2(0.5 * w, b);\n      vertices[2] = new b2.Vec2(0.5 * w, b + s);\n      vertices[3] = new b2.Vec2(0.5 * s, w);\n      vertices[4] = new b2.Vec2(-0.5 * s, w);\n      vertices[5] = new b2.Vec2(-0.5 * w, b + s);\n      vertices[6] = new b2.Vec2(-0.5 * w, b);\n      vertices[7] = new b2.Vec2(-0.5 * s, 0.0);\n\n      this.m_polygons[2].Set(vertices, 8);\n    }\n\n    {\n      this.m_polygons[3].SetAsBox(0.5, 0.5);\n    }\n\n    {\n      this.m_circle.m_radius = 0.5;\n    }\n\n    for (let i = 0; i < PolygonShapes.e_maxBodies; ++i) {\n      this.m_bodies[i] = null;\n    }\n  }\n\n  public CreateBody(index: number) {\n    if (this.m_bodies[this.m_bodyIndex] !== null) {\n      this.m_world.DestroyBody(this.m_bodies[this.m_bodyIndex]!);\n      this.m_bodies[this.m_bodyIndex] = null;\n    }\n\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n\n    const x = b2.RandomRange(-2.0, 2.0);\n    bd.position.Set(x, 10.0);\n    bd.angle = b2.RandomRange(-b2.pi, b2.pi);\n\n    if (index === 4) {\n      bd.angularDamping = 0.02;\n    }\n\n    this.m_bodies[this.m_bodyIndex] = this.m_world.CreateBody(bd);\n\n    if (index < 4) {\n      const fd = new b2.FixtureDef();\n      fd.shape = this.m_polygons[index];\n      fd.density = 1.0;\n      fd.friction = 0.3;\n      this.m_bodies[this.m_bodyIndex]!.CreateFixture(fd);\n    } else {\n      const fd = new b2.FixtureDef();\n      fd.shape = this.m_circle;\n      fd.density = 1.0;\n      fd.friction = 0.3;\n\n      this.m_bodies[this.m_bodyIndex]!.CreateFixture(fd);\n    }\n\n    this.m_bodyIndex = (this.m_bodyIndex + 1) % PolygonShapes.e_maxBodies;\n  }\n\n  public DestroyBody() {\n    for (let i = 0; i < PolygonShapes.e_maxBodies; ++i) {\n      if (this.m_bodies[i] !== null) {\n        this.m_world.DestroyBody(this.m_bodies[i]!);\n        this.m_bodies[i] = null;\n        return;\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n        this.CreateBody(key.charCodeAt(0) - \"1\".charCodeAt(0));\n        break;\n\n      case \"a\":\n        for (let i = 0; i < PolygonShapes.e_maxBodies; i += 2) {\n          if (this.m_bodies[i] !== null) {\n            const enabled = this.m_bodies[i]!.IsEnabled();\n            this.m_bodies[i]!.SetEnabled(!enabled);\n          }\n        }\n        break;\n\n      case \"d\":\n        this.DestroyBody();\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    const callback = new PolygonShapesCallback();\n    callback.m_circle.m_radius = 2.0;\n    callback.m_circle.m_p.Set(0.0, 1.1);\n    callback.m_transform.SetIdentity();\n\n    const aabb = new b2.AABB();\n    callback.m_circle.ComputeAABB(aabb, callback.m_transform, 0);\n\n    this.m_world.QueryAABB(callback, aabb);\n\n    const color = new b2.Color(0.4, 0.7, 0.8);\n    testbed.g_debugDraw.DrawCircle(callback.m_circle.m_p, callback.m_circle.m_radius, color);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Press 1-5 to drop stuff, maximum of ${PolygonShapesCallback.e_maxCount} overlaps detected`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press 'a' to enable/disable some bodies\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press 'd' to destroy a body\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new PolygonShapes();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Geometry\", \"Polygon Shapes\", PolygonShapes.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// Test the prismatic joint with limits and motor options.\nexport class Prismatic extends testbed.Test {\n  public m_joint: b2.PrismaticJoint;\n\n  constructor() {\n    super();\n\n    let ground = null;\n\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(1.0, 1.0);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 10.0);\n      bd.angle = 0.5 * b2.pi;\n      bd.allowSleep = false;\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(shape, 5.0);\n\n      const pjd = new b2.PrismaticJointDef();\n\n      // Horizontal\n\t\t\tpjd.Initialize(ground, body, bd.position, new b2.Vec2(1.0, 0.0));\n\n      pjd.motorSpeed = 10.0;\n      pjd.maxMotorForce = 10000.0;\n      pjd.enableMotor = true;\n      pjd.lowerTranslation = -10.0;\n      pjd.upperTranslation = 10.0;\n      pjd.enableLimit = true;\n\n      this.m_joint = this.m_world.CreateJoint(pjd);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"l\":\n        this.m_joint.EnableLimit(!this.m_joint.IsLimitEnabled());\n        break;\n\n      case \"m\":\n        this.m_joint.EnableMotor(!this.m_joint.IsMotorEnabled());\n        break;\n\n      case \"s\":\n        this.m_joint.SetMotorSpeed(-this.m_joint.GetMotorSpeed());\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: (l) limits, (m) motors, (s) speed\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    const force = this.m_joint.GetMotorForce(settings.m_hertz);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Motor Force = ${force.toFixed(0)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new Prismatic();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Prismatic\", Prismatic.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class PulleyJoint extends testbed.Test {\n  public m_joint1: b2.PulleyJoint;\n\n  constructor() {\n    super();\n\n    const y = 16.0;\n    const L = 12.0;\n    const a = 1.0;\n    const b = 2.0;\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const circle = new b2.CircleShape();\n      circle.m_radius = 2.0;\n\n      circle.m_p.Set(-10.0, y + b + L);\n      ground.CreateFixture(circle, 0.0);\n\n      circle.m_p.Set(10.0, y + b + L);\n      ground.CreateFixture(circle, 0.0);\n    }\n\n    {\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(a, b);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      //bd.fixedRotation = true;\n      bd.position.Set(-10.0, y);\n      const body1 = this.m_world.CreateBody(bd);\n      body1.CreateFixture(shape, 5.0);\n\n      bd.position.Set(10.0, y);\n      const body2 = this.m_world.CreateBody(bd);\n      body2.CreateFixture(shape, 5.0);\n\n      const pulleyDef = new b2.PulleyJointDef();\n      const anchor1 = new b2.Vec2(-10.0, y + b);\n      const anchor2 = new b2.Vec2(10.0, y + b);\n      const groundAnchor1 = new b2.Vec2(-10.0, y + b + L);\n      const groundAnchor2 = new b2.Vec2(10.0, y + b + L);\n      pulleyDef.Initialize(body1, body2, groundAnchor1, groundAnchor2, anchor1, anchor2, 1.5);\n\n      this.m_joint1 = this.m_world.CreateJoint(pulleyDef);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    const ratio = this.m_joint1.GetRatio();\n    const L = this.m_joint1.GetCurrentLengthA() + ratio * this.m_joint1.GetCurrentLengthB();\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `L1 + ${ratio.toFixed(2)} * L2 = ${L.toFixed(2)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new PulleyJoint();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Pulley\", PulleyJoint.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Pyramid extends testbed.Test {\n  public static readonly e_count = 20;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const a = 0.5;\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(a, a);\n\n      const x = new b2.Vec2(-7.0, 0.75);\n      const y = new b2.Vec2(0.0, 0.0);\n      const deltaX = new b2.Vec2(0.5625, 1.25);\n      const deltaY = new b2.Vec2(1.125, 0.0);\n\n      for (let i = 0; i < Pyramid.e_count; ++i) {\n        y.Copy(x);\n\n        for (let j = i; j < Pyramid.e_count; ++j) {\n          const bd = new b2.BodyDef();\n          bd.type = b2.BodyType.b2_dynamicBody;\n          bd.position.Copy(y);\n          const body = this.m_world.CreateBody(bd);\n          body.CreateFixture(shape, 5.0);\n\n          y.SelfAdd(deltaY);\n        }\n\n        x.SelfAdd(deltaX);\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    // b2.DynamicTree* tree = &m_world.m_contactManager.m_broadPhase.m_tree;\n\n    // if (m_stepCount === 400) {\n    //   tree.RebuildBottomUp();\n    // }\n  }\n\n  public static Create(): testbed.Test {\n    return new Pyramid();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Stacking\", \"Pyramid\", Pyramid.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This test demonstrates how to use the world ray-cast feature.\n// NOTE: we are intentionally filtering one of the polygons, therefore\n// the ray will always miss one type of polygon.\n\n// This callback finds the closest hit. Polygon 0 is filtered.\nclass RayCastClosestCallback extends b2.RayCastCallback {\n  public m_hit: boolean = false;\n  public readonly m_point: b2.Vec2 = new b2.Vec2();\n  public readonly m_normal: b2.Vec2 = new b2.Vec2();\n  constructor() {\n    super();\n  }\n  public ReportFixture(fixture: b2.Fixture, point: b2.Vec2, normal: b2.Vec2, fraction: number): number {\n    const body: b2.Body = fixture.GetBody();\n    const userData: any = body.GetUserData();\n    if (userData) {\n      const index: number = userData.index;\n      if (index === 0) {\n        // By returning -1, we instruct the calling code to ignore this fixture\n        // and continue the ray-cast to the next fixture.\n        return -1;\n      }\n    }\n\n    this.m_hit = true;\n    this.m_point.Copy(point);\n    this.m_normal.Copy(normal);\n\n    // By returning the current fraction, we instruct the calling code to clip the ray and\n    // continue the ray-cast to the next fixture. WARNING: do not assume that fixtures\n    // are reported in order. However, by clipping, we can always get the closest fixture.\n    return fraction;\n  }\n}\n\n// This callback finds any hit. Polygon 0 is filtered. For this type of query we are usually\n// just checking for obstruction, so the actual fixture and hit point are irrelevant. \nclass RayCastAnyCallback extends b2.RayCastCallback {\n  public m_hit: boolean = false;\n  public readonly m_point: b2.Vec2 = new b2.Vec2();\n  public readonly m_normal: b2.Vec2 = new b2.Vec2();\n  constructor() {\n    super();\n  }\n  public ReportFixture(fixture: b2.Fixture, point: b2.Vec2, normal: b2.Vec2, fraction: number): number {\n    const body: b2.Body = fixture.GetBody();\n    const userData: any = body.GetUserData();\n    if (userData) {\n      const index: number = userData.index;\n      if (index === 0) {\n        // By returning -1, we instruct the calling code to ignore this fixture\n        // and continue the ray-cast to the next fixture.\n        return -1;\n      }\n    }\n\n    this.m_hit = true;\n    this.m_point.Copy(point);\n    this.m_normal.Copy(normal);\n\n    // At this point we have a hit, so we know the ray is obstructed.\n    // By returning 0, we instruct the calling code to terminate the ray-cast.\n    return 0;\n  }\n}\n\n// This ray cast collects multiple hits along the ray. Polygon 0 is filtered.\n// The fixtures are not necessary reported in order, so we might not capture\n// the closest fixture.\nclass RayCastMultipleCallback extends b2.RayCastCallback {\n  private static e_maxCount: number = 3;\n  public m_points: b2.Vec2[] = b2.Vec2.MakeArray(RayCastMultipleCallback.e_maxCount);\n  public m_normals: b2.Vec2[] = b2.Vec2.MakeArray(RayCastMultipleCallback.e_maxCount);\n  public m_count: number = 0;\n  constructor() {\n    super();\n  }\n  public ReportFixture(fixture: b2.Fixture, point: b2.Vec2, normal: b2.Vec2, fraction: number): number {\n    const body: b2.Body = fixture.GetBody();\n    const userData: any = body.GetUserData();\n    if (userData) {\n      const index: number = userData.index;\n      if (index === 0) {\n        // By returning -1, we instruct the calling code to ignore this fixture\n        // and continue the ray-cast to the next fixture.\n        return -1;\n      }\n    }\n\n    // DEBUG: b2.Assert(this.m_count < RayCastMultipleCallback.e_maxCount);\n\n    this.m_points[this.m_count].Copy(point);\n    this.m_normals[this.m_count].Copy(normal);\n    ++this.m_count;\n\n    if (this.m_count === RayCastMultipleCallback.e_maxCount) {\n      // At this point the buffer is full.\n      // By returning 0, we instruct the calling code to terminate the ray-cast.\n      return 0;\n    }\n\n    // By returning 1, we instruct the caller to continue without clipping the ray.\n    return 1;\n  }\n}\n\nenum RayCastMode {\n  e_closest,\n  e_any,\n  e_multiple,\n}\n\nexport class RayCast extends testbed.Test {\n  private static e_maxBodies: number = 256;\n\n  private m_bodyIndex: number = 0;\n  private m_bodies: Array<b2.Body | null> = [];\n  private m_polygons: b2.PolygonShape[] = [];\n  private m_circle: b2.CircleShape = new b2.CircleShape();\n  private m_edge: b2.EdgeShape = new b2.EdgeShape();\n\n  private m_angle: number = 0;\n\n  private m_mode: RayCastMode = RayCastMode.e_closest;\n\n  constructor() {\n    super();\n\n    for (let i = 0; i < 4; ++i) {\n      this.m_polygons[i] = new b2.PolygonShape();\n    }\n\n    // Ground body\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const vertices: b2.Vec2[] = [/*3*/];\n      vertices[0] = new b2.Vec2(-0.5, 0.0);\n      vertices[1] = new b2.Vec2(0.5, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n      this.m_polygons[0].Set(vertices, 3);\n    }\n\n    {\n      const vertices: b2.Vec2[] = [/*3*/];\n      vertices[0] = new b2.Vec2(-0.1, 0.0);\n      vertices[1] = new b2.Vec2(0.1, 0.0);\n      vertices[2] = new b2.Vec2(0.0, 1.5);\n      this.m_polygons[1].Set(vertices, 3);\n    }\n\n    {\n      const w = 1.0;\n      const b = w / (2.0 + b2.Sqrt(2.0));\n      const s = b2.Sqrt(2.0) * b;\n\n      const vertices: b2.Vec2[] = [/*8*/];\n      vertices[0] = new b2.Vec2(0.5 * s, 0.0);\n      vertices[1] = new b2.Vec2(0.5 * w, b);\n      vertices[2] = new b2.Vec2(0.5 * w, b + s);\n      vertices[3] = new b2.Vec2(0.5 * s, w);\n      vertices[4] = new b2.Vec2(-0.5 * s, w);\n      vertices[5] = new b2.Vec2(-0.5 * w, b + s);\n      vertices[6] = new b2.Vec2(-0.5 * w, b);\n      vertices[7] = new b2.Vec2(-0.5 * s, 0.0);\n\n      this.m_polygons[2].Set(vertices, 8);\n    }\n\n    {\n      this.m_polygons[3].SetAsBox(0.5, 0.5);\n    }\n\n    {\n      this.m_circle.m_radius = 0.5;\n    }\n\n    {\n      this.m_edge.SetTwoSided(new b2.Vec2(-1, 0), new b2.Vec2(1, 0));\n    }\n\n    this.m_bodyIndex = 0;\n    for (let i = 0; i < RayCast.e_maxBodies; ++i) {\n      this.m_bodies[i] = null;\n    }\n\n    this.m_angle = 0;\n\n    this.m_mode = RayCastMode.e_closest;\n  }\n\n  public CreateBody(index: number): void {\n    const old_body = this.m_bodies[this.m_bodyIndex];\n    if (old_body !== null) {\n      this.m_world.DestroyBody(old_body);\n      this.m_bodies[this.m_bodyIndex] = null;\n    }\n\n    const bd: b2.BodyDef = new b2.BodyDef();\n\n    const x: number = b2.RandomRange(-10.0, 10.0);\n    const y: number = b2.RandomRange(0.0, 20.0);\n    bd.position.Set(x, y);\n    bd.angle = b2.RandomRange(-b2.pi, b2.pi);\n\n    bd.userData = {};\n    bd.userData.index = index;\n\n    if (index === 4) {\n      bd.angularDamping = 0.02;\n    }\n\n    const new_body = this.m_bodies[this.m_bodyIndex] = this.m_world.CreateBody(bd);\n\n    if (index < 4) {\n      const fd: b2.FixtureDef = new b2.FixtureDef();\n      fd.shape = this.m_polygons[index];\n      fd.friction = 0.3;\n      new_body.CreateFixture(fd);\n    } else if (index < 5) {\n      const fd: b2.FixtureDef = new b2.FixtureDef();\n      fd.shape = this.m_circle;\n      fd.friction = 0.3;\n      new_body.CreateFixture(fd);\n    } else {\n      const fd: b2.FixtureDef = new b2.FixtureDef();\n      fd.shape = this.m_edge;\n      fd.friction = 0.3;\n      new_body.CreateFixture(fd);\n    }\n\n    this.m_bodyIndex = (this.m_bodyIndex + 1) % RayCast.e_maxBodies;\n  }\n\n  public DestroyBody(): void {\n    for (let i = 0; i < RayCast.e_maxBodies; ++i) {\n      const body = this.m_bodies[i];\n      if (body !== null) {\n        this.m_world.DestroyBody(body);\n        this.m_bodies[i] = null;\n        return;\n      }\n    }\n  }\n\n  public Keyboard(key: string): void {\n    switch (key) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n        this.CreateBody(parseInt(key, 10) - 1);\n        break;\n\n      case \"d\":\n        this.DestroyBody();\n        break;\n\n      case \"m\":\n        if (this.m_mode === RayCastMode.e_closest) {\n          this.m_mode = RayCastMode.e_any;\n        } else if (this.m_mode === RayCastMode.e_any) {\n          this.m_mode = RayCastMode.e_multiple;\n        } else if (this.m_mode === RayCastMode.e_multiple) {\n          this.m_mode = RayCastMode.e_closest;\n        }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    const advanceRay: boolean = !settings.m_pause || settings.m_singleStep;\n\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press 1-6 to drop stuff, m to change the mode\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    switch (this.m_mode) {\n      case RayCastMode.e_closest:\n        testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Ray-cast mode: closest - find closest fixture along the ray\");\n        break;\n\n      case RayCastMode.e_any:\n        testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Ray-cast mode: any - check for obstruction\");\n        break;\n\n      case RayCastMode.e_multiple:\n        testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Ray-cast mode: multiple - gather multiple fixtures\");\n        break;\n    }\n\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    const L = 11.0;\n    const point1 = new b2.Vec2(0.0, 10.0);\n    const d = new b2.Vec2(L * b2.Cos(this.m_angle), L * b2.Sin(this.m_angle));\n    const point2 = b2.Vec2.AddVV(point1, d, new b2.Vec2());\n\n    if (this.m_mode === RayCastMode.e_closest) {\n      const callback = new RayCastClosestCallback();\n      this.m_world.RayCast(callback, point1, point2);\n\n      if (callback.m_hit) {\n        testbed.g_debugDraw.DrawPoint(callback.m_point, 5.0, new b2.Color(0.4, 0.9, 0.4));\n        testbed.g_debugDraw.DrawSegment(point1, callback.m_point, new b2.Color(0.8, 0.8, 0.8));\n        const head = b2.Vec2.AddVV(callback.m_point, b2.Vec2.MulSV(0.5, callback.m_normal, b2.Vec2.s_t0), new b2.Vec2());\n        testbed.g_debugDraw.DrawSegment(callback.m_point, head, new b2.Color(0.9, 0.9, 0.4));\n      } else {\n        testbed.g_debugDraw.DrawSegment(point1, point2, new b2.Color(0.8, 0.8, 0.8));\n      }\n    } else if (this.m_mode === RayCastMode.e_any) {\n      const callback = new RayCastAnyCallback();\n      this.m_world.RayCast(callback, point1, point2);\n\n      if (callback.m_hit) {\n        testbed.g_debugDraw.DrawPoint(callback.m_point, 5.0, new b2.Color(0.4, 0.9, 0.4));\n        testbed.g_debugDraw.DrawSegment(point1, callback.m_point, new b2.Color(0.8, 0.8, 0.8));\n        const head = b2.Vec2.AddVV(callback.m_point, b2.Vec2.MulSV(0.5, callback.m_normal, b2.Vec2.s_t0), new b2.Vec2());\n        testbed.g_debugDraw.DrawSegment(callback.m_point, head, new b2.Color(0.9, 0.9, 0.4));\n      } else {\n        testbed.g_debugDraw.DrawSegment(point1, point2, new b2.Color(0.8, 0.8, 0.8));\n      }\n    } else if (this.m_mode === RayCastMode.e_multiple) {\n      const callback = new RayCastMultipleCallback();\n      this.m_world.RayCast(callback, point1, point2);\n      testbed.g_debugDraw.DrawSegment(point1, point2, new b2.Color(0.8, 0.8, 0.8));\n\n      for (let i = 0; i < callback.m_count; ++i) {\n        const p = callback.m_points[i];\n        const n = callback.m_normals[i];\n        testbed.g_debugDraw.DrawPoint(p, 5.0, new b2.Color(0.4, 0.9, 0.4));\n        testbed.g_debugDraw.DrawSegment(point1, p, new b2.Color(0.8, 0.8, 0.8));\n        const head = b2.Vec2.AddVV(p, b2.Vec2.MulSV(0.5, n, b2.Vec2.s_t0), new b2.Vec2());\n        testbed.g_debugDraw.DrawSegment(p, head, new b2.Color(0.9, 0.9, 0.4));\n      }\n    }\n\n    if (advanceRay) {\n      this.m_angle += 0.25 * b2.pi / 180.0;\n    }\n\n    /*\n    #if 0\n      // This case was failing.\n      {\n        b2Vec2 vertices[4];\n        //vertices[0].Set(-22.875f, -3.0f);\n        //vertices[1].Set(22.875f, -3.0f);\n        //vertices[2].Set(22.875f, 3.0f);\n        //vertices[3].Set(-22.875f, 3.0f);\n\n        b2PolygonShape shape;\n        //shape.Set(vertices, 4);\n        shape.SetAsBox(22.875f, 3.0f);\n\n        b2RayCastInput input;\n        input.p1.Set(10.2725f,1.71372f);\n        input.p2.Set(10.2353f,2.21807f);\n        //input.maxFraction = 0.567623f;\n        input.maxFraction = 0.56762173f;\n\n        b2Transform xf;\n        xf.SetIdentity();\n        xf.p.Set(23.0f, 5.0f);\n\n        b2RayCastOutput output;\n        bool hit;\n        hit = shape.RayCast(&output, input, xf);\n        hit = false;\n\n        b2Color color(1.0f, 1.0f, 1.0f);\n        b2Vec2 vs[4];\n        for (int32 i = 0; i < 4; ++i)\n        {\n          vs[i] = b2Mul(xf, shape.m_vertices[i]);\n        }\n\n        g_debugDraw.DrawPolygon(vs, 4, color);\n        g_debugDraw.DrawSegment(input.p1, input.p2, color);\n      }\n    #endif\n    */\n  }\n\n  public static Create(): testbed.Test {\n    return new RayCast();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Collision\", \"Ray Cast\", RayCast.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// Note: even with a restitution of 1.0, there is some energy change\n// due to position correction.\nexport class Restitution extends testbed.Test {\n  constructor() {\n    super();\n\n    const threshold: number = 10.0;\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.restitutionThreshold = threshold;\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 1.0;\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 1.0;\n\n      const restitution = [0.0, 0.1, 0.3, 0.5, 0.75, 0.9, 1.0];\n\n      for (let i = 0; i < 7; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-10.0 + 3.0 * i, 20.0);\n\n        const body = this.m_world.CreateBody(bd);\n\n        fd.restitution = restitution[i];\n        fd.restitutionThreshold = threshold;\n        body.CreateFixture(fd);\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Restitution();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Forces\", \"Restitution\", Restitution.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Revolute extends testbed.Test {\n  public m_ball: b2.Body;\n  public m_joint: b2.RevoluteJoint;\n\n  constructor() {\n    super();\n\n    let ground = null;\n\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      //fd.filter.categoryBits = 2;\n\n      ground.CreateFixture(fd);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.5;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      const rjd = new b2.RevoluteJointDef();\n\n      bd.position.Set(-10.0, 20.0);\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(shape, 5.0);\n\n      const w = 100.0;\n      body.SetAngularVelocity(w);\n      body.SetLinearVelocity(new b2.Vec2(-8.0 * w, 0.0));\n\n      rjd.Initialize(ground, body, new b2.Vec2(-10.0, 12.0));\n      rjd.motorSpeed = 1.0 * b2.pi;\n      rjd.maxMotorTorque = 10000.0;\n      rjd.enableMotor = false;\n      rjd.lowerAngle = -0.25 * b2.pi;\n      rjd.upperAngle = 0.5 * b2.pi;\n      rjd.enableLimit = true;\n      rjd.collideConnected = true;\n\n      this.m_joint = this.m_world.CreateJoint(rjd);\n    }\n\n    {\n      const circle_shape = new b2.CircleShape();\n      circle_shape.m_radius = 3.0;\n\n      const circle_bd = new b2.BodyDef();\n      circle_bd.type = b2.BodyType.b2_dynamicBody;\n      circle_bd.position.Set(5.0, 30.0);\n\n      const fd = new b2.FixtureDef();\n      fd.density = 5.0;\n      fd.filter.maskBits = 1;\n      fd.shape = circle_shape;\n\n      this.m_ball = this.m_world.CreateBody(circle_bd);\n      this.m_ball.CreateFixture(fd);\n\n      const polygon_shape = new b2.PolygonShape();\n      polygon_shape.SetAsBox(10.0, 0.2, new b2.Vec2(-10.0, 0.0), 0.0);\n\n      const polygon_bd = new b2.BodyDef();\n      polygon_bd.position.Set(20.0, 10.0);\n      polygon_bd.type = b2.BodyType.b2_dynamicBody;\n      polygon_bd.bullet = true;\n      const polygon_body = this.m_world.CreateBody(polygon_bd);\n      polygon_body.CreateFixture(polygon_shape, 2.0);\n\n      const rjd = new b2.RevoluteJointDef();\n      rjd.Initialize(ground, polygon_body, new b2.Vec2(20.0, 10.0));\n      rjd.lowerAngle = -0.25 * b2.pi;\n      rjd.upperAngle = 0.0 * b2.pi;\n      rjd.enableLimit = true;\n      this.m_world.CreateJoint(rjd);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"l\":\n        this.m_joint.EnableLimit(!this.m_joint.IsLimitEnabled());\n        break;\n\n      case \"m\":\n        this.m_joint.EnableMotor(!this.m_joint.IsMotorEnabled());\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: (l) limits, (m) motor\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    // if (this.m_stepCount === 360) {\n    //   this.m_ball.SetTransformVec(new b2.Vec2(0.0, 0.5), 0.0);\n    // }\n\n    // const torque1 = this.m_joint.GetMotorTorque(settings.hz);\n    // testbed.g_debugDraw.DrawString(5, this.m_textLine, `Motor Torque = ${torque1.toFixed(0)}, ${torque2.toFixed(0)} : Motor Force = ${force3.toFixed(0)}`);\n    // this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new Revolute();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Revolute\", Revolute.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n///\nexport class Rope extends testbed.Test {\n  public readonly m_rope1: b2.Rope = new b2.Rope();\n  public readonly m_rope2: b2.Rope = new b2.Rope();\n  public readonly m_tuning1: b2.RopeTuning = new b2.RopeTuning();\n  public readonly m_tuning2: b2.RopeTuning = new b2.RopeTuning();\n  public m_iterations1: number = 0;\n  public m_iterations2: number = 0;\n  public readonly m_position1: b2.Vec2 = new b2.Vec2();\n  public readonly m_position2: b2.Vec2 = new b2.Vec2();\n  public m_speed: number = 0.0;\n\n  constructor() {\n    super();\n    const N: number = 20;\n    const L: number = 0.5;\n    // b2Vec2 vertices[N];\n    const vertices: b2.Vec2[] = b2.Vec2.MakeArray(N);\n    // float masses[N];\n    const masses: number[] = b2.MakeNumberArray(N);\n\n    for (let i = 0; i < N; ++i) {\n      vertices[i].Set(0.0, L * (N - i));\n      masses[i] = 1.0;\n    }\n    masses[0] = 0.0;\n    masses[1] = 0.0;\n\n    this.m_tuning1.bendHertz = 30.0;\n    this.m_tuning1.bendDamping = 4.0;\n    this.m_tuning1.bendStiffness = 1.0;\n    this.m_tuning1.bendingModel = b2.pbdTriangleBendingModel;\n    this.m_tuning1.isometric = true;\n\n    this.m_tuning1.stretchHertz = 30.0;\n    this.m_tuning1.stretchDamping = 4.0;\n    this.m_tuning1.stretchStiffness = 1.0;\n    this.m_tuning1.stretchingModel = b2.pbdStretchingModel;\n\n    this.m_tuning2.bendHertz = 30.0;\n    this.m_tuning2.bendDamping = 0.7;\n    this.m_tuning2.bendStiffness = 1.0;\n    this.m_tuning2.bendingModel = b2.pbdHeightBendingModel;\n    this.m_tuning2.isometric = true;\n\n    this.m_tuning2.stretchHertz = 30.0;\n    this.m_tuning2.stretchDamping = 1.0;\n    this.m_tuning2.stretchStiffness = 1.0;\n    this.m_tuning2.stretchingModel = b2.pbdStretchingModel;\n\n    this.m_position1.Set(-5.0, 15.0);\n    this.m_position2.Set(5.0, 15.0);\n\n    const def: b2.RopeDef = new b2.RopeDef();\n    // def.vertices = vertices;\n    vertices.forEach((value: b2.Vec2) => def.vertices.push(value));\n    def.count = N;\n    def.gravity.Set(0.0, -10.0);\n    // def.masses = masses;\n    masses.forEach((value: number) => def.masses.push(value));\n\n    def.position.Copy(this.m_position1);\n    def.tuning.Copy(this.m_tuning1);\n    this.m_rope1.Create(def);\n\n    def.position.Copy(this.m_position2);\n    def.tuning.Copy(this.m_tuning2);\n    this.m_rope2.Create(def);\n\n    this.m_iterations1 = 8;\n    this.m_iterations2 = 8;\n\n    this.m_speed = 10.0;\n  }\n\n  // void UpdateUI() override\n  // {\n  // \tImGui::SetNextWindowPos(ImVec2(10.0, 100.0));\n  // \tImGui::SetNextWindowSize(ImVec2(200.0, 700.0));\n  // \tImGui::Begin(\"Tuning\", nullptr, ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoResize);\n\n  // \tImGui::Separator();\n\n  //       ImGui::PushItemWidth(ImGui::GetWindowWidth() * 0.5f);\n\n  // \tconst ImGuiComboFlags comboFlags = 0;\n  // \tconst char* bendModels[] = { \"Spring\", \"PBD Ang\", \"XPBD Ang\", \"PBD Dist\", \"PBD Height\", \"PBD Triangle\" };\n  // \tconst char* stretchModels[] = { \"PBD\", \"XPBD\" };\n\n  // \tImGui::Text(\"Rope 1\");\n  // \tstatic int bendModel1 = this.m_tuning1.bendingModel;\n  // \tif (ImGui::BeginCombo(\"Bend Model##1\", bendModels[bendModel1], comboFlags))\n  // \t{\n  // \t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(bendModels); ++i)\n  // \t\t{\n  // \t\t\tbool isSelected = (bendModel1 == i);\n  // \t\t\tif (ImGui::Selectable(bendModels[i], isSelected))\n  // \t\t\t{\n  // \t\t\t\tbendModel1 = i;\n  // \t\t\t\tthis.m_tuning1.bendingModel = b2BendingModel(i);\n  // \t\t\t}\n\n  // \t\t\tif (isSelected)\n  // \t\t\t{\n  // \t\t\t\tImGui::SetItemDefaultFocus();\n  // \t\t\t}\n  // \t\t}\n  // \t\tImGui::EndCombo();\n  // \t}\n\n  // \tImGui::SliderFloat(\"Damping##B1\", &this.m_tuning1.bendDamping, 0.0, 4.0, \"%.1f\");\n  // \tImGui::SliderFloat(\"Hertz##B1\", &this.m_tuning1.bendHertz, 0.0, 60.0, \"%.0\");\n  // \tImGui::SliderFloat(\"Stiffness##B1\", &this.m_tuning1.bendStiffness, 0.0, 1.0, \"%.1f\");\n\n  // \tImGui::Checkbox(\"Isometric##1\", &this.m_tuning1.isometric);\n  // \tImGui::Checkbox(\"Fixed Mass##1\", &this.m_tuning1.fixedEffectiveMass);\n  // \tImGui::Checkbox(\"Warm Start##1\", &this.m_tuning1.warmStart);\n\n  // \tstatic int stretchModel1 = this.m_tuning1.stretchingModel;\n  // \tif (ImGui::BeginCombo(\"Stretch Model##1\", stretchModels[stretchModel1], comboFlags))\n  // \t{\n  // \t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(stretchModels); ++i)\n  // \t\t{\n  // \t\t\tbool isSelected = (stretchModel1 == i);\n  // \t\t\tif (ImGui::Selectable(stretchModels[i], isSelected))\n  // \t\t\t{\n  // \t\t\t\tstretchModel1 = i;\n  // \t\t\t\tthis.m_tuning1.stretchingModel = b2StretchingModel(i);\n  // \t\t\t}\n\n  // \t\t\tif (isSelected)\n  // \t\t\t{\n  // \t\t\t\tImGui::SetItemDefaultFocus();\n  // \t\t\t}\n  // \t\t}\n  // \t\tImGui::EndCombo();\n  // \t}\n\n  // \tImGui::SliderFloat(\"Damping##S1\", &this.m_tuning1.stretchDamping, 0.0, 4.0, \"%.1f\");\n  // \tImGui::SliderFloat(\"Hertz##S1\", &this.m_tuning1.stretchHertz, 0.0, 60.0, \"%.0\");\n  // \tImGui::SliderFloat(\"Stiffness##S1\", &this.m_tuning1.stretchStiffness, 0.0, 1.0, \"%.1f\");\n\n  // \tImGui::SliderInt(\"Iterations##1\", &this.m_iterations1, 1, 100, \"%d\");\n\n  // \tImGui::Separator();\n\n  // \tImGui::Text(\"Rope 2\");\n  // \tstatic int bendModel2 = this.m_tuning2.bendingModel;\n  // \tif (ImGui::BeginCombo(\"Bend Model##2\", bendModels[bendModel2], comboFlags))\n  // \t{\n  // \t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(bendModels); ++i)\n  // \t\t{\n  // \t\t\tbool isSelected = (bendModel2 == i);\n  // \t\t\tif (ImGui::Selectable(bendModels[i], isSelected))\n  // \t\t\t{\n  // \t\t\t\tbendModel2 = i;\n  // \t\t\t\tthis.m_tuning2.bendingModel = b2BendingModel(i);\n  // \t\t\t}\n\n  // \t\t\tif (isSelected)\n  // \t\t\t{\n  // \t\t\t\tImGui::SetItemDefaultFocus();\n  // \t\t\t}\n  // \t\t}\n  // \t\tImGui::EndCombo();\n  // \t}\n\n  // \tImGui::SliderFloat(\"Damping##B2\", &this.m_tuning2.bendDamping, 0.0, 4.0, \"%.1f\");\n  // \tImGui::SliderFloat(\"Hertz##B2\", &this.m_tuning2.bendHertz, 0.0, 60.0, \"%.0\");\n  // \tImGui::SliderFloat(\"Stiffness##B2\", &this.m_tuning2.bendStiffness, 0.0, 1.0, \"%.1f\");\n\n  // \tImGui::Checkbox(\"Isometric##2\", &this.m_tuning2.isometric);\n  // \tImGui::Checkbox(\"Fixed Mass##2\", &this.m_tuning2.fixedEffectiveMass);\n  // \tImGui::Checkbox(\"Warm Start##2\", &this.m_tuning2.warmStart);\n\n  // \tstatic int stretchModel2 = this.m_tuning2.stretchingModel;\n  // \tif (ImGui::BeginCombo(\"Stretch Model##2\", stretchModels[stretchModel2], comboFlags))\n  // \t{\n  // \t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(stretchModels); ++i)\n  // \t\t{\n  // \t\t\tbool isSelected = (stretchModel2 == i);\n  // \t\t\tif (ImGui::Selectable(stretchModels[i], isSelected))\n  // \t\t\t{\n  // \t\t\t\tstretchModel2 = i;\n  // \t\t\t\tthis.m_tuning2.stretchingModel = b2StretchingModel(i);\n  // \t\t\t}\n\n  // \t\t\tif (isSelected)\n  // \t\t\t{\n  // \t\t\t\tImGui::SetItemDefaultFocus();\n  // \t\t\t}\n  // \t\t}\n  // \t\tImGui::EndCombo();\n  // \t}\n\n  // \tImGui::SliderFloat(\"Damping##S2\", &this.m_tuning2.stretchDamping, 0.0, 4.0, \"%.1f\");\n  // \tImGui::SliderFloat(\"Hertz##S2\", &this.m_tuning2.stretchHertz, 0.0, 60.0, \"%.0\");\n  // \tImGui::SliderFloat(\"Stiffness##S2\", &this.m_tuning2.stretchStiffness, 0.0, 1.0, \"%.1f\");\n\n  // \tImGui::SliderInt(\"Iterations##2\", &this.m_iterations2, 1, 100, \"%d\");\n\n  // \tImGui::Separator();\n\n  // \tImGui::SliderFloat(\"Speed\", &this.m_speed, 10.0, 100.0, \"%.0\");\n\n  // \tif (ImGui::Button(\"Reset\"))\n  // \t{\n  // \t\tthis.m_position1.Set(-5.0, 15.0);\n  // \t\tthis.m_position2.Set(5.0, 15.0);\n  // \t\tthis.m_rope1.Reset(this.m_position1);\n  // \t\tthis.m_rope2.Reset(this.m_position2);\n  // \t}\n\n  //       ImGui::PopItemWidth();\n\n  // \tImGui::End();\n  // }\n\n  public m_move_x: number = 0.0;\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \",\":\n        this.m_move_x = -1.0;\n        break;\n\n      case \".\":\n        this.m_move_x = 1.0;\n        break;\n    }\n  }\n\n  public KeyboardUp(key: string): void {\n    switch (key) {\n      case \",\":\n      case \".\":\n        this.m_move_x = 0.0;\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    let dt: number = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n\n    if (settings.m_pause === true && settings.m_singleStep === false) {\n      dt = 0.0;\n    }\n\n    // if (glfwGetKey(g_mainWindow, GLFW_KEY_COMMA) == GLFW_PRESS)\n    // {\n    // \tthis.m_position1.x -= this.m_speed * dt;\n    // \tthis.m_position2.x -= this.m_speed * dt;\n    // }\n\n    // if (glfwGetKey(g_mainWindow, GLFW_KEY_PERIOD) == GLFW_PRESS)\n    // {\n    // \tthis.m_position1.x += this.m_speed * dt;\n    // \tthis.m_position2.x += this.m_speed * dt;\n    // }\n\n    if (this.m_move_x) {\n      this.m_position1.x += this.m_move_x * this.m_speed * dt;\n      this.m_position2.x += this.m_move_x * this.m_speed * dt;\n    }\n\n    this.m_rope1.SetTuning(this.m_tuning1);\n    this.m_rope2.SetTuning(this.m_tuning2);\n    this.m_rope1.Step(dt, this.m_iterations1, this.m_position1);\n    this.m_rope2.Step(dt, this.m_iterations2, this.m_position2);\n\n    super.Step(settings);\n\n    this.m_rope1.Draw(testbed.g_debugDraw);\n    this.m_rope2.Draw(testbed.g_debugDraw);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press comma and period to move left and right\");\n    // this.m_textLine += this.m_textIncrement;\n  }\n\n  public static Create(): testbed.Test {\n    return new Rope();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Rope\", \"Bending\", Rope.Create);\n\n// class Rope : public Test\n// {\n// public:\n// \tRope()\n// \t{\n// \t\tconst int32 N = 20;\n// \t\tconst float L = 0.5f;\n// \t\tb2Vec2 vertices[N];\n// \t\tfloat masses[N];\n\n// \t\tfor (let i = 0; i < N; ++i)\n// \t\t{\n// \t\t\tvertices[i].Set(0.0, L * (N - i));\n// \t\t\tmasses[i] = 1.0;\n// \t\t}\n// \t\tmasses[0] = 0.0;\n// \t\tmasses[1] = 0.0;\n\n// \t\tthis.m_tuning1.bendHertz = 30.0;\n// \t\tthis.m_tuning1.bendDamping = 4.0;\n// \t\tthis.m_tuning1.bendStiffness = 1.0;\n// \t\tthis.m_tuning1.bendingModel = b2_xpbdAngleBendingModel;\n// \t\tthis.m_tuning1.isometric = true;\n\n// \t\tthis.m_tuning1.stretchHertz = 30.0;\n// \t\tthis.m_tuning1.stretchDamping = 4.0;\n// \t\tthis.m_tuning1.stretchStiffness = 1.0;\n// \t\tthis.m_tuning1.stretchingModel = b2_xpbdStretchingModel;\n\n// \t\tthis.m_tuning2.bendHertz = 30.0;\n// \t\tthis.m_tuning2.bendDamping = 0.7f;\n// \t\tthis.m_tuning2.bendStiffness = 1.0;\n// \t\tthis.m_tuning2.bendingModel = b2_pbdHeightBendingModel;\n// \t\tthis.m_tuning2.isometric = true;\n\n// \t\tthis.m_tuning2.stretchHertz = 30.0;\n// \t\tthis.m_tuning2.stretchDamping = 1.0;\n// \t\tthis.m_tuning2.stretchStiffness = 1.0;\n// \t\tthis.m_tuning2.stretchingModel = b2_pbdStretchingModel;\n\n// \t\tthis.m_position1.Set(-5.0, 15.0);\n// \t\tthis.m_position2.Set(5.0, 15.0);\n\n// \t\tb2RopeDef def;\n// \t\tdef.vertices = vertices;\n// \t\tdef.count = N;\n// \t\tdef.gravity.Set(0.0, -10.0);\n// \t\tdef.masses = masses;\n\n// \t\tdef.position = this.m_position1;\n// \t\tdef.tuning = this.m_tuning1;\n// \t\tthis.m_rope1.Create(def);\n\n// \t\tdef.position = this.m_position2;\n// \t\tdef.tuning = this.m_tuning2;\n// \t\tthis.m_rope2.Create(def);\n\n// \t\tthis.m_iterations1 = 8;\n// \t\tthis.m_iterations2 = 8;\n\n// \t\tthis.m_speed = 10.0;\n// \t}\n\n// \tvoid UpdateUI() override\n// \t{\n// \t\tImGui::SetNextWindowPos(ImVec2(10.0, 100.0));\n// \t\tImGui::SetNextWindowSize(ImVec2(200.0, 700.0));\n// \t\tImGui::Begin(\"Tuning\", nullptr, ImGuiWindowFlags_NoMove | ImGuiWindowFlags_NoResize);\n\n// \t\tImGui::Separator();\n\n//         ImGui::PushItemWidth(ImGui::GetWindowWidth() * 0.5f);\n\n// \t\tconst ImGuiComboFlags comboFlags = 0;\n// \t\tconst char* bendModels[] = { \"Spring\", \"PBD Ang\", \"XPBD Ang\", \"PBD Dist\", \"PBD Height\" };\n// \t\tconst char* stretchModels[] = { \"PBD\", \"XPBD\" };\n\n// \t\tImGui::Text(\"Rope 1\");\n// \t\tstatic int bendModel1 = this.m_tuning1.bendingModel;\n// \t\tif (ImGui::BeginCombo(\"Bend Model##1\", bendModels[bendModel1], comboFlags))\n// \t\t{\n// \t\t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(bendModels); ++i)\n// \t\t\t{\n// \t\t\t\tbool isSelected = (bendModel1 == i);\n// \t\t\t\tif (ImGui::Selectable(bendModels[i], isSelected))\n// \t\t\t\t{\n// \t\t\t\t\tbendModel1 = i;\n// \t\t\t\t\tthis.m_tuning1.bendingModel = b2BendingModel(i);\n// \t\t\t\t}\n\n// \t\t\t\tif (isSelected)\n// \t\t\t\t{\n// \t\t\t\t\tImGui::SetItemDefaultFocus();\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tImGui::EndCombo();\n// \t\t}\n\n// \t\tImGui::SliderFloat(\"Damping##B1\", &this.m_tuning1.bendDamping, 0.0, 4.0, \"%.1f\");\n// \t\tImGui::SliderFloat(\"Hertz##B1\", &this.m_tuning1.bendHertz, 0.0, 60.0, \"%.0\");\n// \t\tImGui::SliderFloat(\"Stiffness##B1\", &this.m_tuning1.bendStiffness, 0.0, 1.0, \"%.1f\");\n\n// \t\tImGui::Checkbox(\"Isometric##1\", &this.m_tuning1.isometric);\n// \t\tImGui::Checkbox(\"Fixed Mass##1\", &this.m_tuning1.fixedEffectiveMass);\n// \t\tImGui::Checkbox(\"Warm Start##1\", &this.m_tuning1.warmStart);\n\n// \t\tstatic int stretchModel1 = this.m_tuning1.stretchingModel;\n// \t\tif (ImGui::BeginCombo(\"Stretch Model##1\", stretchModels[stretchModel1], comboFlags))\n// \t\t{\n// \t\t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(stretchModels); ++i)\n// \t\t\t{\n// \t\t\t\tbool isSelected = (stretchModel1 == i);\n// \t\t\t\tif (ImGui::Selectable(stretchModels[i], isSelected))\n// \t\t\t\t{\n// \t\t\t\t\tstretchModel1 = i;\n// \t\t\t\t\tthis.m_tuning1.stretchingModel = b2StretchingModel(i);\n// \t\t\t\t}\n\n// \t\t\t\tif (isSelected)\n// \t\t\t\t{\n// \t\t\t\t\tImGui::SetItemDefaultFocus();\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tImGui::EndCombo();\n// \t\t}\n\n// \t\tImGui::SliderFloat(\"Damping##S1\", &this.m_tuning1.stretchDamping, 0.0, 4.0, \"%.1f\");\n// \t\tImGui::SliderFloat(\"Hertz##S1\", &this.m_tuning1.stretchHertz, 0.0, 60.0, \"%.0\");\n// \t\tImGui::SliderFloat(\"Stiffness##S1\", &this.m_tuning1.stretchStiffness, 0.0, 1.0, \"%.1f\");\n\n// \t\tImGui::SliderInt(\"Iterations##1\", &this.m_iterations1, 1, 100, \"%d\");\n\n// \t\tImGui::Separator();\n\n// \t\tImGui::Text(\"Rope 2\");\n// \t\tstatic int bendModel2 = this.m_tuning2.bendingModel;\n// \t\tif (ImGui::BeginCombo(\"Bend Model##2\", bendModels[bendModel2], comboFlags))\n// \t\t{\n// \t\t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(bendModels); ++i)\n// \t\t\t{\n// \t\t\t\tbool isSelected = (bendModel2 == i);\n// \t\t\t\tif (ImGui::Selectable(bendModels[i], isSelected))\n// \t\t\t\t{\n// \t\t\t\t\tbendModel2 = i;\n// \t\t\t\t\tthis.m_tuning2.bendingModel = b2BendingModel(i);\n// \t\t\t\t}\n\n// \t\t\t\tif (isSelected)\n// \t\t\t\t{\n// \t\t\t\t\tImGui::SetItemDefaultFocus();\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tImGui::EndCombo();\n// \t\t}\n\n// \t\tImGui::SliderFloat(\"Damping##B2\", &this.m_tuning2.bendDamping, 0.0, 4.0, \"%.1f\");\n// \t\tImGui::SliderFloat(\"Hertz##B2\", &this.m_tuning2.bendHertz, 0.0, 60.0, \"%.0\");\n// \t\tImGui::SliderFloat(\"Stiffness##B2\", &this.m_tuning2.bendStiffness, 0.0, 1.0, \"%.1f\");\n\n// \t\tImGui::Checkbox(\"Isometric##2\", &this.m_tuning2.isometric);\n// \t\tImGui::Checkbox(\"Fixed Mass##2\", &this.m_tuning2.fixedEffectiveMass);\n// \t\tImGui::Checkbox(\"Warm Start##2\", &this.m_tuning2.warmStart);\n\n// \t\tstatic int stretchModel2 = this.m_tuning2.stretchingModel;\n// \t\tif (ImGui::BeginCombo(\"Stretch Model##2\", stretchModels[stretchModel2], comboFlags))\n// \t\t{\n// \t\t\tfor (int i = 0; i < Ithis.M_ARRAYSIZE(stretchModels); ++i)\n// \t\t\t{\n// \t\t\t\tbool isSelected = (stretchModel2 == i);\n// \t\t\t\tif (ImGui::Selectable(stretchModels[i], isSelected))\n// \t\t\t\t{\n// \t\t\t\t\tstretchModel2 = i;\n// \t\t\t\t\tthis.m_tuning2.stretchingModel = b2StretchingModel(i);\n// \t\t\t\t}\n\n// \t\t\t\tif (isSelected)\n// \t\t\t\t{\n// \t\t\t\t\tImGui::SetItemDefaultFocus();\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tImGui::EndCombo();\n// \t\t}\n\n// \t\tImGui::SliderFloat(\"Damping##S2\", &this.m_tuning2.stretchDamping, 0.0, 4.0, \"%.1f\");\n// \t\tImGui::SliderFloat(\"Hertz##S2\", &this.m_tuning2.stretchHertz, 0.0, 60.0, \"%.0\");\n// \t\tImGui::SliderFloat(\"Stiffness##S2\", &this.m_tuning2.stretchStiffness, 0.0, 1.0, \"%.1f\");\n\n// \t\tImGui::SliderInt(\"Iterations##2\", &this.m_iterations2, 1, 100, \"%d\");\n\n// \t\tImGui::Separator();\n\n// \t\tImGui::SliderFloat(\"Speed\", &this.m_speed, 10.0, 100.0, \"%.0\");\n\n// \t\tif (ImGui::Button(\"Reset\"))\n// \t\t{\n// \t\t\tthis.m_position1.Set(-5.0, 15.0);\n// \t\t\tthis.m_position2.Set(5.0, 15.0);\n// \t\t\tthis.m_rope1.Reset(this.m_position1);\n// \t\t\tthis.m_rope2.Reset(this.m_position2);\n// \t\t}\n\n//         ImGui::PopItemWidth();\n\n// \t\tImGui::End();\n// \t}\n\n// \tvoid Step(Settings& settings) override\n// \t{\n// \t\tfloat dt = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n\n// \t\tif (settings.m_pause == 1 && settings.m_singleStep == 0)\n// \t\t{\n// \t\t\tdt = 0.0;\n// \t\t}\n\n// \t\tif (glfwGetKey(g_mainWindow, GLFW_KEY_COMMA) == GLFW_PRESS)\n// \t\t{\n// \t\t\tthis.m_position1.x -= this.m_speed * dt;\n// \t\t\tthis.m_position2.x -= this.m_speed * dt;\n// \t\t}\n\n// \t\tif (glfwGetKey(g_mainWindow, GLFW_KEY_PERIOD) == GLFW_PRESS)\n// \t\t{\n// \t\t\tthis.m_position1.x += this.m_speed * dt;\n// \t\t\tthis.m_position2.x += this.m_speed * dt;\n// \t\t}\n\n// \t\tthis.m_rope1.SetTuning(this.m_tuning1);\n// \t\tthis.m_rope2.SetTuning(this.m_tuning2);\n// \t\tthis.m_rope1.Step(dt, this.m_iterations1, this.m_position1);\n// \t\tthis.m_rope2.Step(dt, this.m_iterations2, this.m_position2);\n\n// \t\tTest::Step(settings);\n\n// \t\tthis.m_rope1.Draw(&g_debugDraw);\n// \t\tthis.m_rope2.Draw(&g_debugDraw);\n\n// \t\tg_debugDraw.DrawString(5, this.m_textLine, \"Press comma and period to move left and right\");\n// \t\tthis.m_textLine += this.m_textIncrement;\n// \t}\n\n// \tstatic Test* Create()\n// \t{\n// \t\treturn new Rope;\n// \t}\n\n// \tb2Rope this.m_rope1;\n// \tb2Rope this.m_rope2;\n// \tb2RopeTuning this.m_tuning1;\n// \tb2RopeTuning this.m_tuning2;\n// \tint32 this.m_iterations1;\n// \tint32 this.m_iterations2;\n// \tb2Vec2 this.m_position1;\n// \tb2Vec2 this.m_position2;\n// \tfloat this.m_speed;\n// };\n\n// static int testIndex = RegisterTest(\"Rope\", \"Bending\", Rope::Create);\n\n\n\n\n\n\n// export class OldRope extends testbed.Test {\n//   // public this.m_rope = new b2.Rope();\n//   public m_angle = 0.0;\n\n//   constructor() {\n//     super();\n\n//     /*const int32*/\n//     const N = 40;\n//     /*b2.Vec2[]*/\n//     const vertices = b2.Vec2.MakeArray(N);\n//     /*float32[]*/\n//     const masses = b2.MakeNumberArray(N);\n\n//     for (let i = 0; i < N; ++i) {\n//       vertices[i].Set(0.0, 20.0 - 0.25 * i);\n//       masses[i] = 1.0;\n//     }\n//     masses[0] = 0.0;\n//     masses[1] = 0.0;\n\n//     /*b2.RopeDef*/\n//     // const def = new b2.RopeDef();\n//     // def.vertices = vertices;\n//     // def.count = N;\n//     // def.gravity.Set(0.0, -10.0);\n//     // def.masses = masses;\n//     // def.damping = 0.1;\n//     // def.k2 = 1.0;\n//     // def.k3 = 0.5;\n\n//     // this.m_rope.Initialize(def);\n\n//     this.m_angle = 0.0;\n//     // this.m_rope.SetAngle(this.m_angle);\n//   }\n\n//   public Keyboard(key: string) {\n//     switch (key) {\n//       case \"q\":\n//         this.m_angle = b2.Max(-b2.pi, this.m_angle - 0.05 * b2.pi);\n//         // this.m_rope.SetAngle(this.m_angle);\n//         break;\n\n//       case \"e\":\n//         this.m_angle = b2.Min(b2.pi, this.m_angle + 0.05 * b2.pi);\n//         // this.m_rope.SetAngle(this.m_angle);\n//         break;\n//     }\n//   }\n\n//   public Step(settings: testbed.Settings): void {\n//     // let dt = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n//     // if (settings.m_pause && !settings.m_singleStep) {\n//     //   dt = 0.0;\n//     // }\n\n//     // this.m_rope.Step(dt, 1);\n\n//     super.Step(settings);\n\n//     // this.m_rope.Draw(testbed.g_debugDraw);\n\n//     testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press (q,e) to adjust target angle\");\n//     this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n//     testbed.g_debugDraw.DrawString(5, this.m_textLine, `Target angle = ${(this.m_angle * 180.0 / b2.pi).toFixed(2)} degrees`);\n//     this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n//   }\n\n//   public static Create(): testbed.Test {\n//     return new OldRope();\n//   }\n// }\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// This shows how to use sensor shapes. Sensors don't have collision, but report overlap events.\nexport class Sensors extends testbed.Test {\n  public static readonly e_count = 7;\n\n  public m_sensor: b2.Fixture;\n  public m_bodies: b2.Body[];\n  public m_touching: boolean[][];\n\n  constructor() {\n    super();\n\n    this.m_bodies = new Array(Sensors.e_count);\n    this.m_touching = new Array(Sensors.e_count);\n    for (let i = 0; i < Sensors.e_count; ++i) {\n      this.m_touching[i] = new Array(1);\n    }\n\n    const bd = new b2.BodyDef();\n    const ground = this.m_world.CreateBody(bd);\n\n    {\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    /*\n    {\n      const sd = new b2.FixtureDef();\n      sd.SetAsBox(10.0, 2.0, new b2.Vec2(0.0, 20.0), 0.0);\n      sd.isSensor = true;\n      this.m_sensor = ground.CreateFixture(sd);\n    }\n    */\n    {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 5.0;\n      shape.m_p.Set(0.0, 10.0);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.isSensor = true;\n      this.m_sensor = ground.CreateFixture(fd);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 1.0;\n\n      for (let i = 0; i < Sensors.e_count; ++i) {\n        //const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-10.0 + 3.0 * i, 20.0);\n        bd.userData = this.m_touching[i];\n\n        this.m_touching[i][0] = false;\n        this.m_bodies[i] = this.m_world.CreateBody(bd);\n\n        this.m_bodies[i].CreateFixture(shape, 1.0);\n      }\n    }\n  }\n\n  public BeginContact(contact: b2.Contact) {\n    const fixtureA = contact.GetFixtureA();\n    const fixtureB = contact.GetFixtureB();\n\n    if (fixtureA === this.m_sensor) {\n      const userData = fixtureB.GetBody().GetUserData();\n      if (userData) {\n        const touching = userData;\n        touching[0] = true;\n      }\n    }\n\n    if (fixtureB === this.m_sensor) {\n      const userData = fixtureA.GetBody().GetUserData();\n      if (userData) {\n        const touching = userData;\n        touching[0] = true;\n      }\n    }\n  }\n\n  public EndContact(contact: b2.Contact) {\n    const fixtureA = contact.GetFixtureA();\n    const fixtureB = contact.GetFixtureB();\n\n    if (fixtureA === this.m_sensor) {\n      const userData = fixtureB.GetBody().GetUserData();\n      if (userData) {\n        const touching = userData;\n        touching[0] = false;\n      }\n    }\n\n    if (fixtureB === this.m_sensor) {\n      const userData = fixtureA.GetBody().GetUserData();\n      if (userData) {\n        const touching = userData;\n        touching[0] = false;\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    // Traverse the contact results. Apply a force on shapes\n    // that overlap the sensor.\n    for (let i = 0; i < Sensors.e_count; ++i) {\n      if (!this.m_touching[i][0]) {\n        continue;\n      }\n\n      const body = this.m_bodies[i];\n      const ground = this.m_sensor.GetBody();\n\n      const circle = this.m_sensor.GetShape() as b2.CircleShape;\n      const center = ground.GetWorldPoint(circle.m_p, new b2.Vec2());\n\n      const position = body.GetPosition();\n\n      const d = b2.Vec2.SubVV(center, position, new b2.Vec2());\n      if (d.LengthSquared() < b2.epsilon_sq) {\n        continue;\n      }\n\n      d.Normalize();\n      const F = b2.Vec2.MulSV(100.0, d, new b2.Vec2());\n      body.ApplyForce(F, position);\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new Sensors();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Collision\", \"Sensors\", Sensors.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ShapeCast extends testbed.Test {\n  public static e_vertexCount = 8;\n\n  public readonly m_vAs: b2.Vec2[] = b2.Vec2.MakeArray(b2.maxPolygonVertices);\n  public m_countA = 0;\n  public m_radiusA = 0;\n\n  public readonly m_vBs: b2.Vec2[] = b2.Vec2.MakeArray(b2.maxPolygonVertices);\n  public m_countB = 0;\n  public m_radiusB = 0;\n\n  public readonly m_transformA = new b2.Transform();\n  public readonly m_transformB = new b2.Transform();\n  public readonly m_translationB = new b2.Vec2();\n\n  constructor() {\n    super();\n\n    // #if 1\n    this.m_vAs[0].Set(-0.5, 1.0);\n    this.m_vAs[1].Set(0.5, 1.0);\n    this.m_vAs[2].Set(0.0, 0.0);\n    this.m_countA = 3;\n    this.m_radiusA = b2.polygonRadius;\n\n    this.m_vBs[0].Set(-0.5, -0.5);\n    this.m_vBs[1].Set(0.5, -0.5);\n    this.m_vBs[2].Set(0.5, 0.5);\n    this.m_vBs[3].Set(-0.5, 0.5);\n    this.m_countB = 4;\n    this.m_radiusB = b2.polygonRadius;\n\n    this.m_transformA.p.Set(0.0, 0.25);\n    this.m_transformA.q.SetIdentity();\n    this.m_transformB.p.Set(-4.0, 0.0);\n    this.m_transformB.q.SetIdentity();\n    this.m_translationB.Set(8.0, 0.0);\n    // #elif 0\n    // this.m_vAs[0].Set(0.0, 0.0);\n    // this.m_countA = 1;\n    // this.m_radiusA = 0.5;\n\n    // this.m_vBs[0].Set(0.0, 0.0);\n    // this.m_countB = 1;\n    // this.m_radiusB = 0.5;\n\n    // this.m_transformA.p.Set(0.0, 0.25);\n    // this.m_transformA.q.SetIdentity();\n    // this.m_transformB.p.Set(-4.0, 0.0);\n    // this.m_transformB.q.SetIdentity();\n    // this.m_translationB.Set(8.0, 0.0);\n    // #else\n    // this.m_vAs[0].Set(0.0, 0.0);\n    // this.m_vAs[1].Set(2.0, 0.0);\n    // this.m_countA = 2;\n    // this.m_radiusA = b2.polygonRadius;\n\n    // this.m_vBs[0].Set(0.0, 0.0);\n    // this.m_countB = 1;\n    // this.m_radiusB = 0.25;\n\n    // // Initial overlap\n    // this.m_transformA.p.Set(0.0, 0.0);\n    // this.m_transformA.q.SetIdentity();\n    // this.m_transformB.p.Set(-0.244360745, 0.05999358);\n    // this.m_transformB.q.SetIdentity();\n    // this.m_translationB.Set(0.0, 0.0399999991);\n    // #endif\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    const input = new b2.ShapeCastInput();\n    input.proxyA.SetVerticesRadius(this.m_vAs, this.m_countA, this.m_radiusA);\n    input.proxyB.SetVerticesRadius(this.m_vBs, this.m_countB, this.m_radiusB);\n    input.transformA.Copy(this.m_transformA);\n    input.transformB.Copy(this.m_transformB);\n    input.translationB.Copy(this.m_translationB);\n\n    const output = new b2.ShapeCastOutput();\n\n    const hit = b2.ShapeCast(output, input);\n\n    const transformB2 = new b2.Transform();\n    transformB2.q.Copy(this.m_transformB.q);\n    // transformB2.p = transformB.p + output.lambda * input.translationB;\n    transformB2.p.Copy(this.m_transformB.p).SelfMulAdd(output.lambda, input.translationB);\n\n    const distanceInput = new b2.DistanceInput();\n    distanceInput.proxyA.SetVerticesRadius(this.m_vAs, this.m_countA, this.m_radiusA);\n    distanceInput.proxyB.SetVerticesRadius(this.m_vBs, this.m_countB, this.m_radiusB);\n    distanceInput.transformA.Copy(this.m_transformA);\n    distanceInput.transformB.Copy(transformB2);\n    distanceInput.useRadii = false;\n    const simplexCache = new b2.SimplexCache();\n    simplexCache.count = 0;\n    const distanceOutput = new b2.DistanceOutput();\n\n    b2.Distance(distanceOutput, simplexCache, distanceInput);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine,\n      `hit = ${hit ? \"true\" : \"false\"}, iters = ${output.iterations}, lambda = ${output.lambda}, distance = ${distanceOutput.distance.toFixed(5)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    testbed.g_debugDraw.PushTransform(this.m_transformA);\n    if (this.m_countA === 1) {\n      testbed.g_debugDraw.DrawCircle(this.m_vAs[0], this.m_radiusA, new b2.Color(0.9, 0.9, 0.9));\n    }\n    else {\n      testbed.g_debugDraw.DrawPolygon(this.m_vAs, this.m_countA, new b2.Color(0.9, 0.9, 0.9));\n    }\n    testbed.g_debugDraw.PopTransform(this.m_transformA);\n\n    testbed.g_debugDraw.PushTransform(this.m_transformB);\n    if (this.m_countB === 1) {\n      testbed.g_debugDraw.DrawCircle(this.m_vBs[0], this.m_radiusB, new b2.Color(0.5, 0.9, 0.5));\n    }\n    else {\n      testbed.g_debugDraw.DrawPolygon(this.m_vBs, this.m_countB, new b2.Color(0.5, 0.9, 0.5));\n    }\n    testbed.g_debugDraw.PopTransform(this.m_transformB);\n\n    testbed.g_debugDraw.PushTransform(transformB2);\n    if (this.m_countB === 1) {\n      testbed.g_debugDraw.DrawCircle(this.m_vBs[0], this.m_radiusB, new b2.Color(0.5, 0.7, 0.9));\n    }\n    else {\n      testbed.g_debugDraw.DrawPolygon(this.m_vBs, this.m_countB, new b2.Color(0.5, 0.7, 0.9));\n    }\n    testbed.g_debugDraw.PopTransform(transformB2);\n\n    if (hit) {\n      const p1 = output.point;\n      testbed.g_debugDraw.DrawPoint(p1, 10.0, new b2.Color(0.9, 0.3, 0.3));\n      // b2Vec2 p2 = p1 + output.normal;\n      const p2 = b2.Vec2.AddVV(p1, output.normal, new b2.Vec2());\n      testbed.g_debugDraw.DrawSegment(p1, p2, new b2.Color(0.9, 0.3, 0.3));\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new ShapeCast();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Collision\", \"Shape Cast\", ShapeCast.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ShapeEditing extends testbed.Test {\n  public m_body: b2.Body;\n  public m_fixture1: b2.Fixture;\n  public m_fixture2: b2.Fixture | null = null;\n  public m_sensor = false;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Set(0.0, 10.0);\n    this.m_body = this.m_world.CreateBody(bd);\n\n    const shape = new b2.PolygonShape();\n    shape.SetAsBox(4.0, 4.0, new b2.Vec2(0.0, 0.0), 0.0);\n    this.m_fixture1 = this.m_body.CreateFixture(shape, 10.0);\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"c\":\n        if (this.m_fixture2 === null) {\n          const shape = new b2.CircleShape();\n          shape.m_radius = 3.0;\n          shape.m_p.Set(0.5, -4.0);\n          this.m_fixture2 = this.m_body.CreateFixture(shape, 10.0);\n          this.m_body.SetAwake(true);\n        }\n        break;\n\n      case \"d\":\n        if (this.m_fixture2 !== null) {\n          this.m_body.DestroyFixture(this.m_fixture2);\n          this.m_fixture2 = null;\n          this.m_body.SetAwake(true);\n        }\n        break;\n\n      case \"s\":\n        if (this.m_fixture2 !== null) {\n          this.m_sensor = !this.m_sensor;\n          this.m_fixture2.SetSensor(this.m_sensor);\n        }\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press: (c) create a shape, (d) destroy a shape.\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `sensor = ${(this.m_sensor) ? (1) : (0)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new ShapeEditing();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Shape Editing\", ShapeEditing.Create);\n","/*\nTest case for collision/jerking issue.\n*/\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Skier extends testbed.Test {\n  public m_platform_width: number;\n  public m_skier: b2.Body;\n  public m_fixed_camera: boolean;\n\n  constructor() {\n    super();\n\n    const ground = this.m_world.CreateBody();\n\n    const PlatformWidth = 8.0;\n\n    /*\n    First angle is from the horizontal and should be negative for a downward slope.\n    Second angle is relative to the preceding slope, and should be positive, creating a kind of\n    loose 'Z'-shape from the 3 edges.\n    If A1 = -10, then A2 <= ~1.5 will result in the collision glitch.\n    If A1 = -30, then A2 <= ~10.0 will result in the glitch.\n    */\n    const Angle1Degrees = -30.0;\n    const Angle2Degrees = 10.0;\n\n    /*\n    The larger the value of SlopeLength, the less likely the glitch will show up.\n    */\n    const SlopeLength = 2.0;\n\n    const SurfaceFriction = 0.2;\n\n    // Convert to radians\n    const Slope1Incline = -Angle1Degrees * b2.pi / 180.0;\n    const Slope2Incline = Slope1Incline - Angle2Degrees * b2.pi / 180.0;\n    //\n\n    this.m_platform_width = PlatformWidth;\n\n    // Horizontal platform\n    const v1: b2.Vec2 = new b2.Vec2(-PlatformWidth, 0.0);\n    const v2: b2.Vec2 = new b2.Vec2(0.0, 0.0);\n    const v3: b2.Vec2 = new b2.Vec2(SlopeLength * Math.cos(Slope1Incline), -SlopeLength * Math.sin(Slope1Incline));\n    const v4: b2.Vec2 = new b2.Vec2(v3.x + SlopeLength * Math.cos(Slope2Incline), v3.y - SlopeLength * Math.sin(Slope2Incline));\n    const v5: b2.Vec2 = new b2.Vec2(v4.x, v4.y - 1.0);\n\n    const vertices: b2.Vec2[] = [ v5, v4, v3, v2, v1 ];\n\n    const shape = new b2.ChainShape();\n    shape.CreateLoop(vertices);\n    const fd = new b2.FixtureDef();\n    fd.shape = shape;\n    fd.density = 0.0;\n    fd.friction = SurfaceFriction;\n\n    ground.CreateFixture(fd);\n\n    {\n      // const BodyWidth = 1.0;\n      const BodyHeight = 2.5;\n      const SkiLength = 3.0;\n\n      /*\n      Larger values for this seem to alleviate the issue to some extent.\n      */\n      const SkiThickness = 0.3;\n\n      const SkiFriction = 0.0;\n      const SkiRestitution = 0.15;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      const initial_y = BodyHeight / 2 + SkiThickness;\n      bd.position.Set(-this.m_platform_width / 2, initial_y);\n\n      const skier = this.m_world.CreateBody(bd);\n\n      const ski = new b2.PolygonShape();\n      const verts: b2.Vec2[] = [];\n      verts.push(new b2.Vec2(-SkiLength / 2 - SkiThickness, -BodyHeight / 2));\n      verts.push(new b2.Vec2(-SkiLength / 2, -BodyHeight / 2 - SkiThickness));\n      verts.push(new b2.Vec2(SkiLength / 2, -BodyHeight / 2 - SkiThickness));\n      verts.push(new b2.Vec2(SkiLength / 2 + SkiThickness, -BodyHeight / 2));\n      ski.Set(verts);\n\n      const fd = new b2.FixtureDef();\n      fd.density = 1.0;\n\n      fd.friction = SkiFriction;\n      fd.restitution = SkiRestitution;\n\n      fd.shape = ski;\n      skier.CreateFixture(fd);\n\n      skier.SetLinearVelocity(new b2.Vec2(0.5, 0.0));\n\n      this.m_skier = skier;\n    }\n\n    testbed.g_camera.m_center.Set(this.m_platform_width / 2.0, 0.0);\n    testbed.g_camera.m_center.Set(this.m_platform_width / 2.0, 0.0);\n    testbed.g_camera.m_zoom = 0.4;\n    this.m_fixed_camera = true;\n  }\n\n  public Keyboard(key: string): void {\n    switch (key) {\n    case \"c\":\n      this.m_fixed_camera = !this.m_fixed_camera;\n      if (this.m_fixed_camera) {\n        testbed.g_camera.m_center.Set(this.m_platform_width / 2.0, 0.0);\n      }\n      break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: c = Camera fixed/tracking\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    if (!this.m_fixed_camera) {\n      testbed.g_camera.m_center.Copy(this.m_skier.GetPosition());\n    }\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new Skier();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Bugs\", \"Skier\", Skier.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class SliderCrank1 extends testbed.Test {\n  constructor() {\n    super();\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      bd.position.Set(0.0, 17.0);\n      ground = this.m_world.CreateBody(bd);\n    }\n\n    {\n      let prevBody = ground;\n\n      // Define crank.\n      {\n        const shape = new b2.PolygonShape();\n        shape.SetAsBox(4.0, 1.0);\n\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(-8.0, 20.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 2.0);\n\n        const rjd = new b2.RevoluteJointDef();\n        rjd.Initialize(prevBody, body, new b2.Vec2(-12.0, 20.0));\n        this.m_world.CreateJoint(rjd);\n\n        prevBody = body;\n      }\n\n      // Define connecting rod\n      {\n        const shape = new b2.PolygonShape();\n        shape.SetAsBox(8.0, 1.0);\n\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(4.0, 20.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 2.0);\n\n        const rjd = new b2.RevoluteJointDef();\n        rjd.Initialize(prevBody, body, new b2.Vec2(-4.0, 20.0));\n        this.m_world.CreateJoint(rjd);\n\n        prevBody = body;\n      }\n\n      // Define piston\n      {\n        const shape = new b2.PolygonShape();\n        shape.SetAsBox(3.0, 3.0);\n\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.fixedRotation = true;\n        bd.position.Set(12.0, 20.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 2.0);\n\n        const rjd = new b2.RevoluteJointDef();\n        rjd.Initialize(prevBody, body, new b2.Vec2(12.0, 20.0));\n        this.m_world.CreateJoint(rjd);\n\n        const pjd = new b2.PrismaticJointDef();\n        pjd.Initialize(ground, body, new b2.Vec2(12.0, 17.0), new b2.Vec2(1.0, 0.0));\n        this.m_world.CreateJoint(pjd);\n      }\n    }\n  }\n\n  public static Create() {\n    return new SliderCrank1();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Slider Crank 1\", SliderCrank1.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// A motor driven slider crank with joint friction.\n\nexport class SliderCrank2 extends testbed.Test {\n  public static readonly e_count = 30;\n\n  public m_joint1: b2.RevoluteJoint;\n  public m_joint2: b2.PrismaticJoint;\n\n  constructor() {\n    super();\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      let prevBody = ground;\n\n      // Define crank.\n      {\n        const shape = new b2.PolygonShape();\n        shape.SetAsBox(0.5, 2.0);\n\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(0.0, 7.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 2.0);\n\n        const rjd = new b2.RevoluteJointDef();\n        rjd.Initialize(prevBody, body, new b2.Vec2(0.0, 5.0));\n        rjd.motorSpeed = 1.0 * b2.pi;\n        rjd.maxMotorTorque = 10000.0;\n        rjd.enableMotor = true;\n        this.m_joint1 = this.m_world.CreateJoint(rjd);\n\n        prevBody = body;\n      }\n\n      // Define follower.\n      {\n        const shape = new b2.PolygonShape();\n        shape.SetAsBox(0.5, 4.0);\n\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(0.0, 13.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 2.0);\n\n        const rjd = new b2.RevoluteJointDef();\n        rjd.Initialize(prevBody, body, new b2.Vec2(0.0, 9.0));\n        rjd.enableMotor = false;\n        this.m_world.CreateJoint(rjd);\n\n        prevBody = body;\n      }\n\n      // Define piston\n      {\n        const shape = new b2.PolygonShape();\n        shape.SetAsBox(1.5, 1.5);\n\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.fixedRotation = true;\n        bd.position.Set(0.0, 17.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 2.0);\n\n        const rjd = new b2.RevoluteJointDef();\n        rjd.Initialize(prevBody, body, new b2.Vec2(0.0, 17.0));\n        this.m_world.CreateJoint(rjd);\n\n        const pjd = new b2.PrismaticJointDef();\n        pjd.Initialize(ground, body, new b2.Vec2(0.0, 17.0), new b2.Vec2(0.0, 1.0));\n\n        pjd.maxMotorForce = 1000.0;\n        pjd.enableMotor = true;\n\n        this.m_joint2 = this.m_world.CreateJoint(pjd);\n      }\n\n      // Create a payload\n      {\n        const shape = new b2.PolygonShape();\n        shape.SetAsBox(1.5, 1.5);\n\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(0.0, 23.0);\n        const body = this.m_world.CreateBody(bd);\n        body.CreateFixture(shape, 2.0);\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"f\":\n        this.m_joint2.EnableMotor(!this.m_joint2.IsMotorEnabled());\n        this.m_joint2.GetBodyB().SetAwake(true);\n        break;\n\n      case \"m\":\n        this.m_joint1.EnableMotor(!this.m_joint1.IsMotorEnabled());\n        this.m_joint1.GetBodyB().SetAwake(true);\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: (f) toggle friction, (m) toggle motor\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    const torque = this.m_joint1.GetMotorTorque(settings.m_hertz);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Motor Torque = ${torque.toFixed(0)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new SliderCrank2();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Slider Crank 2\", SliderCrank2.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n// Inspired by a contribution from roman_m\n// Dimensions scooped from APE (http://www.cove.org/ape/index.htm)\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class TheoJansen extends testbed.Test {\n  public m_offset = new b2.Vec2();\n  public m_chassis!: b2.Body;\n  public m_wheel!: b2.Body;\n  public m_motorJoint!: b2.RevoluteJoint;\n  public m_motorOn = false;\n  public m_motorSpeed = 0;\n\n  constructor() {\n    super();\n\n    this.Construct();\n  }\n\n  public CreateLeg(s: number, wheelAnchor: b2.Vec2) {\n    const p1 = new b2.Vec2(5.4 * s, -6.1);\n    const p2 = new b2.Vec2(7.2 * s, -1.2);\n    const p3 = new b2.Vec2(4.3 * s, -1.9);\n    const p4 = new b2.Vec2(3.1 * s, 0.8);\n    const p5 = new b2.Vec2(6.0 * s, 1.5);\n    const p6 = new b2.Vec2(2.5 * s, 3.7);\n\n    const fd1 = new b2.FixtureDef();\n    const fd2 = new b2.FixtureDef();\n    fd1.filter.groupIndex = -1;\n    fd2.filter.groupIndex = -1;\n    fd1.density = 1.0;\n    fd2.density = 1.0;\n\n    const poly1 = new b2.PolygonShape();\n    const poly2 = new b2.PolygonShape();\n\n    if (s > 0.0) {\n      const vertices = new Array();\n\n      vertices[0] = p1;\n      vertices[1] = p2;\n      vertices[2] = p3;\n      poly1.Set(vertices);\n\n      vertices[0] = b2.Vec2_zero;\n      vertices[1] = b2.Vec2.SubVV(p5, p4, new b2.Vec2());\n      vertices[2] = b2.Vec2.SubVV(p6, p4, new b2.Vec2());\n      poly2.Set(vertices);\n    } else {\n      const vertices = new Array();\n\n      vertices[0] = p1;\n      vertices[1] = p3;\n      vertices[2] = p2;\n      poly1.Set(vertices);\n\n      vertices[0] = b2.Vec2_zero;\n      vertices[1] = b2.Vec2.SubVV(p6, p4, new b2.Vec2());\n      vertices[2] = b2.Vec2.SubVV(p5, p4, new b2.Vec2());\n      poly2.Set(vertices);\n    }\n\n    fd1.shape = poly1;\n    fd2.shape = poly2;\n\n    const bd1 = new b2.BodyDef();\n    const bd2 = new b2.BodyDef();\n    bd1.type = b2.BodyType.b2_dynamicBody;\n    bd2.type = b2.BodyType.b2_dynamicBody;\n    bd1.position.Copy(this.m_offset);\n    bd2.position.Copy(b2.Vec2.AddVV(p4, this.m_offset, new b2.Vec2()));\n\n    bd1.angularDamping = 10.0;\n    bd2.angularDamping = 10.0;\n\n    const body1 = this.m_world.CreateBody(bd1);\n    const body2 = this.m_world.CreateBody(bd2);\n\n    body1.CreateFixture(fd1);\n    body2.CreateFixture(fd2);\n\n    {\n      const jd = new b2.DistanceJointDef();\n\n      // Using a soft distance constraint can reduce some jitter.\n      // It also makes the structure seem a bit more fluid by\n      // acting like a suspension system.\n      const dampingRatio: number = 0.5;\n      const frequencyHz: number = 10.0;\n\n      jd.Initialize(body1, body2, b2.Vec2.AddVV(p2, this.m_offset, new b2.Vec2()), b2.Vec2.AddVV(p5, this.m_offset, new b2.Vec2()));\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      this.m_world.CreateJoint(jd);\n\n      jd.Initialize(body1, body2, b2.Vec2.AddVV(p3, this.m_offset, new b2.Vec2()), b2.Vec2.AddVV(p4, this.m_offset, new b2.Vec2()));\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      this.m_world.CreateJoint(jd);\n\n      jd.Initialize(body1, this.m_wheel, b2.Vec2.AddVV(p3, this.m_offset, new b2.Vec2()), b2.Vec2.AddVV(wheelAnchor, this.m_offset, new b2.Vec2()));\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      this.m_world.CreateJoint(jd);\n\n      jd.Initialize(body2, this.m_wheel, b2.Vec2.AddVV(p6, this.m_offset, new b2.Vec2()), b2.Vec2.AddVV(wheelAnchor, this.m_offset, new b2.Vec2()));\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      this.m_world.CreateJoint(jd);\n    }\n\n    {\n      const jd = new b2.RevoluteJointDef();\n\n      jd.Initialize(body2, this.m_chassis, b2.Vec2.AddVV(p4, this.m_offset, new b2.Vec2()));\n      this.m_world.CreateJoint(jd);\n    }\n  }\n\n  public Construct() {\n    this.m_offset.Set(0.0, 8.0);\n    this.m_motorSpeed = 2.0;\n    this.m_motorOn = true;\n    const pivot = new b2.Vec2(0.0, 0.8);\n\n    // Ground\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-50.0, 0.0), new b2.Vec2(50.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(new b2.Vec2(-50.0, 0.0), new b2.Vec2(-50.0, 10.0));\n      ground.CreateFixture(shape, 0.0);\n\n      shape.SetTwoSided(new b2.Vec2(50.0, 0.0), new b2.Vec2(50.0, 10.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Balls\n    for (let i = 0; i < 40; ++i) {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 0.25;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(-40.0 + 2.0 * i, 0.5);\n\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(shape, 1.0);\n    }\n\n    // Chassis\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(2.5, 1.0);\n\n      const sd = new b2.FixtureDef();\n      sd.density = 1.0;\n      sd.shape = shape;\n      sd.filter.groupIndex = -1;\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Copy(pivot).SelfAdd(this.m_offset);\n      this.m_chassis = this.m_world.CreateBody(bd);\n      this.m_chassis.CreateFixture(sd);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_radius = 1.6;\n\n      const sd = new b2.FixtureDef();\n      sd.density = 1.0;\n      sd.shape = shape;\n      sd.filter.groupIndex = -1;\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Copy(pivot).SelfAdd(this.m_offset);\n      this.m_wheel = this.m_world.CreateBody(bd);\n      this.m_wheel.CreateFixture(sd);\n    }\n\n    {\n      const jd = new b2.RevoluteJointDef();\n      jd.Initialize(this.m_wheel, this.m_chassis, b2.Vec2.AddVV(pivot, this.m_offset, new b2.Vec2()));\n      jd.collideConnected = false;\n      jd.motorSpeed = this.m_motorSpeed;\n      jd.maxMotorTorque = 400.0;\n      jd.enableMotor = this.m_motorOn;\n      this.m_motorJoint = this.m_world.CreateJoint(jd);\n    }\n\n    const wheelAnchor = b2.Vec2.AddVV(pivot, new b2.Vec2(0.0, -0.8), new b2.Vec2());\n\n    this.CreateLeg(-1.0, wheelAnchor);\n    this.CreateLeg(1.0, wheelAnchor);\n\n    this.m_wheel.SetTransformVec(this.m_wheel.GetPosition(), 120.0 * b2.pi / 180.0);\n    this.CreateLeg(-1.0, wheelAnchor);\n    this.CreateLeg(1.0, wheelAnchor);\n\n    this.m_wheel.SetTransformVec(this.m_wheel.GetPosition(), -120.0 * b2.pi / 180.0);\n    this.CreateLeg(-1.0, wheelAnchor);\n    this.CreateLeg(1.0, wheelAnchor);\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        this.m_motorJoint.SetMotorSpeed(-this.m_motorSpeed);\n        break;\n\n      case \"s\":\n        this.m_motorJoint.SetMotorSpeed(0.0);\n        break;\n\n      case \"d\":\n        this.m_motorJoint.SetMotorSpeed(this.m_motorSpeed);\n        break;\n\n      case \"m\":\n        this.m_motorJoint.EnableMotor(!this.m_motorJoint.IsMotorEnabled());\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: left = a, brake = s, right = d, toggle motor = m\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new TheoJansen();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Theo Jansen\", TheoJansen.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/// This stress tests the dynamic tree broad-phase. This also shows that tile\n/// based collision is _not_ smooth due to Box2D not knowing about adjacency.\nexport class Tiles extends testbed.Test {\n  public static readonly e_count = 20;\n\n  public m_fixtureCount = 0;\n  public m_createTime = 0.0;\n\n  constructor() {\n    super();\n\n    this.m_fixtureCount = 0;\n    const timer = new b2.Timer();\n\n    {\n      const a = 0.5;\n      const bd = new b2.BodyDef();\n      bd.position.y = -a;\n      const ground = this.m_world.CreateBody(bd);\n\n      {\n        const N = 200;\n        const M = 10;\n        const position = new b2.Vec2();\n        position.y = 0.0;\n        for (let j = 0; j < M; ++j) {\n          position.x = -N * a;\n          for (let i = 0; i < N; ++i) {\n            const shape = new b2.PolygonShape();\n            shape.SetAsBox(a, a, position, 0.0);\n            ground.CreateFixture(shape, 0.0);\n            ++this.m_fixtureCount;\n            position.x += 2.0 * a;\n          }\n          position.y -= 2.0 * a;\n        }\n      }\n      //    else\n      //    {\n      //     const N = 200;\n      //     const M = 10;\n      //      const position = new b2.Vec2();\n      //      position.x = -N * a;\n      //      for (let i = 0; i < N; ++i)\n      //      {\n      //        position.y = 0.0;\n      //        for (let j = 0; j < M; ++j)\n      //        {\n      //          const shape = new b2.PolygonShape();\n      //          shape.SetAsBox(a, a, position, 0.0);\n      //          ground.CreateFixture(shape, 0.0);\n      //          position.y -= 2.0 * a;\n      //        }\n      //        position.x += 2.0 * a;\n      //      }\n      //    }\n    }\n\n    {\n      const a = 0.5;\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(a, a);\n\n      const x = new b2.Vec2(-7.0, 0.75);\n      const y = new b2.Vec2();\n      const deltaX = new b2.Vec2(0.5625, 1.25);\n      const deltaY = new b2.Vec2(1.125, 0.0);\n\n      for (let i = 0; i < Tiles.e_count; ++i) {\n        y.Copy(x);\n\n        for (let j = i; j < Tiles.e_count; ++j) {\n          const bd = new b2.BodyDef();\n          bd.type = b2.BodyType.b2_dynamicBody;\n          bd.position.Copy(y);\n\n          //if (i === 0 && j === 0)\n          //{\n          //  bd.allowSleep = false;\n          //}\n          //else\n          //{\n          //  bd.allowSleep = true;\n          //}\n\n          const body = this.m_world.CreateBody(bd);\n          body.CreateFixture(shape, 5.0);\n          ++this.m_fixtureCount;\n          y.SelfAdd(deltaY);\n        }\n\n        x.SelfAdd(deltaX);\n      }\n    }\n\n    this.m_createTime = timer.GetMilliseconds();\n  }\n\n  public Step(settings: testbed.Settings): void {\n    const cm = this.m_world.GetContactManager();\n    const height = cm.m_broadPhase.GetTreeHeight();\n    const leafCount = cm.m_broadPhase.GetProxyCount();\n    const minimumNodeCount = 2 * leafCount - 1;\n    const minimumHeight = Math.ceil(Math.log(minimumNodeCount) / Math.log(2.0));\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `dynamic tree height = ${height}, min = ${minimumHeight}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    super.Step(settings);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `create time = ${this.m_createTime.toFixed(2)} ms, fixture count = ${this.m_fixtureCount}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    //b2.DynamicTree* tree = this.m_world.this.m_contactManager.m_broadPhase.m_tree;\n\n    //if (this.m_stepCount === 400)\n    //{\n    //  tree.RebuildBottomUp();\n    //}\n  }\n\n  public static Create(): testbed.Test {\n    return new Tiles();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Benchmark\", \"Tiles\", Tiles.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class TimeOfImpact extends testbed.Test {\n  public m_shapeA: b2.PolygonShape = new b2.PolygonShape();\n  public m_shapeB: b2.PolygonShape = new b2.PolygonShape();\n\n  constructor() {\n    super();\n\n    this.m_shapeA.SetAsBox(25.0, 5.0);\n    this.m_shapeB.SetAsBox(2.5, 2.5);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    const sweepA = new b2.Sweep();\n    sweepA.c0.Set(0.0, 20.0 + 8.0 * Math.cos(Date.now() / 1000)); // (24.0, -60.0);\n    sweepA.a0 = 2.95;\n    sweepA.c.Copy(sweepA.c0);\n    sweepA.a = sweepA.a0;\n    sweepA.localCenter.SetZero();\n\n    const sweepB = new b2.Sweep();\n    sweepB.c0.Set(20.0, 40.0); // (53.474274, -50.252514);\n    sweepB.a0 = 0.1; // 513.36676; // - 162.0 * b2.pi;\n    sweepB.c.Set(-20.0, 0.0); // (54.595478, -51.083473);\n    sweepB.a = 3.1; // 513.62781; //  - 162.0 * b2.pi;\n    sweepB.localCenter.SetZero();\n\n    //sweepB.a0 -= 300.0 * b2.pi;\n    //sweepB.a -= 300.0 * b2.pi;\n\n    const input = new b2.TOIInput();\n    input.proxyA.SetShape(this.m_shapeA, 0);\n    input.proxyB.SetShape(this.m_shapeB, 0);\n    input.sweepA.Copy(sweepA);\n    input.sweepB.Copy(sweepB);\n    input.tMax = 1.0;\n\n    const output = new b2.TOIOutput();\n\n    b2.TimeOfImpact(output, input);\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `toi = ${output.t.toFixed(3)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `max toi iters = ${b2.toiMaxIters}, max root iters = ${b2.toiMaxRootIters}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    const vertices = [];\n\n    const transformA = new b2.Transform();\n    sweepA.GetTransform(transformA, 0.0);\n    for (let i = 0; i < this.m_shapeA.m_count; ++i) {\n      vertices[i] = b2.Transform.MulXV(transformA, this.m_shapeA.m_vertices[i], new b2.Vec2());\n    }\n    testbed.g_debugDraw.DrawPolygon(vertices, this.m_shapeA.m_count, new b2.Color(0.9, 0.9, 0.9));\n\n    const transformB = new b2.Transform();\n    sweepB.GetTransform(transformB, 0.0);\n\n    //b2.Vec2 localPoint(2.0f, -0.1f);\n\n    for (let i = 0; i < this.m_shapeB.m_count; ++i) {\n      vertices[i] = b2.Transform.MulXV(transformB, this.m_shapeB.m_vertices[i], new b2.Vec2());\n    }\n    testbed.g_debugDraw.DrawPolygon(vertices, this.m_shapeB.m_count, new b2.Color(0.5, 0.9, 0.5));\n    testbed.g_debugDraw.DrawStringWorld(transformB.p.x, transformB.p.y, `${(0.0).toFixed(1)}`);\n\n    sweepB.GetTransform(transformB, output.t);\n    for (let i = 0; i < this.m_shapeB.m_count; ++i) {\n      vertices[i] = b2.Transform.MulXV(transformB, this.m_shapeB.m_vertices[i], new b2.Vec2());\n    }\n    testbed.g_debugDraw.DrawPolygon(vertices, this.m_shapeB.m_count, new b2.Color(0.5, 0.7, 0.9));\n    testbed.g_debugDraw.DrawStringWorld(transformB.p.x, transformB.p.y, `${output.t.toFixed(3)}`);\n\n    sweepB.GetTransform(transformB, 1.0);\n    for (let i = 0; i < this.m_shapeB.m_count; ++i) {\n      vertices[i] = b2.Transform.MulXV(transformB, this.m_shapeB.m_vertices[i], new b2.Vec2());\n    }\n    testbed.g_debugDraw.DrawPolygon(vertices, this.m_shapeB.m_count, new b2.Color(0.9, 0.5, 0.5));\n    testbed.g_debugDraw.DrawStringWorld(transformB.p.x, transformB.p.y, `${(1.0).toFixed(1)}`);\n\n    // #if 0\n    for (let t = 0.0; t < 1.0; t += 0.1) {\n      sweepB.GetTransform(transformB, t);\n      for (let i = 0; i < this.m_shapeB.m_count; ++i) {\n        vertices[i] = b2.Transform.MulXV(transformB, this.m_shapeB.m_vertices[i], new b2.Vec2());\n      }\n      testbed.g_debugDraw.DrawPolygon(vertices, this.m_shapeB.m_count, new b2.Color(0.5, 0.5, 0.5));\n      testbed.g_debugDraw.DrawStringWorld(transformB.p.x, transformB.p.y, `${t.toFixed(1)}`);\n    }\n    // #endif\n  }\n\n  public static Create(): testbed.Test {\n    return new TimeOfImpact();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Collision\", \"Time of Impact\", TimeOfImpact.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Tumbler extends testbed.Test {\n  public static readonly e_count = 800;\n\n  public m_joint: b2.RevoluteJoint;\n  public m_count = 0;\n\n  constructor() {\n    super();\n\n    const ground = this.m_world.CreateBody(new b2.BodyDef());\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.allowSleep = false;\n      bd.position.Set(0.0, 10.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 10.0, new b2.Vec2(10.0, 0.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n      shape.SetAsBox(0.5, 10.0, new b2.Vec2(-10.0, 0.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n      shape.SetAsBox(10.0, 0.5, new b2.Vec2(0.0, 10.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n      shape.SetAsBox(10.0, 0.5, new b2.Vec2(0.0, -10.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n\n      const jd = new b2.RevoluteJointDef();\n      jd.bodyA = ground;\n      jd.bodyB = body;\n      jd.localAnchorA.Set(0.0, 10.0);\n      jd.localAnchorB.Set(0.0, 0.0);\n      jd.referenceAngle = 0.0;\n      jd.motorSpeed = 0.05 * b2.pi;\n      jd.maxMotorTorque = 1e8;\n      jd.enableMotor = true;\n      this.m_joint = this.m_world.CreateJoint(jd);\n    }\n\n    this.m_count = 0;\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    if (this.m_count < Tumbler.e_count) {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 10.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.125, 0.125);\n      body.CreateFixture(shape, 1.0);\n\n      ++this.m_count;\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new Tumbler();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Benchmark\", \"Tumbler\", Tumbler.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// Test distance joints, body destruction, and joint destruction.\nexport class Web extends testbed.Test {\n  public m_bodies: Array<b2.Body | null>;\n  public m_joints: Array<b2.Joint | null>;\n  constructor() {\n    super();\n\n    this.m_bodies = new Array(4);\n    this.m_joints = new Array(8);\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.5);\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      bd.position.Set(-5.0, 5.0);\n      const body0 = this.m_bodies[0] = this.m_world.CreateBody(bd);\n      body0.CreateFixture(shape, 5.0);\n\n      bd.position.Set(5.0, 5.0);\n      const body1 = this.m_bodies[1] = this.m_world.CreateBody(bd);\n      body1.CreateFixture(shape, 5.0);\n\n      bd.position.Set(5.0, 15.0);\n      const body2 = this.m_bodies[2] = this.m_world.CreateBody(bd);\n      body2.CreateFixture(shape, 5.0);\n\n      bd.position.Set(-5.0, 15.0);\n      const body3 = this.m_bodies[3] = this.m_world.CreateBody(bd);\n      body3.CreateFixture(shape, 5.0);\n\n      const jd = new b2.DistanceJointDef();\n      let p1, p2, d;\n\n      const frequencyHz: number = 2.0;\n      const dampingRatio: number = 0.0;\n\n      jd.bodyA = ground;\n      jd.bodyB = body0;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(-10.0, 0.0);\n      jd.localAnchorB.Set(-0.5, -0.5);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[0] = this.m_world.CreateJoint(jd);\n\n      jd.bodyA = ground;\n      jd.bodyB = body1;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(10.0, 0.0);\n      jd.localAnchorB.Set(0.5, -0.5);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[1] = this.m_world.CreateJoint(jd);\n\n      jd.bodyA = ground;\n      jd.bodyB = body2;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(10.0, 20.0);\n      jd.localAnchorB.Set(0.5, 0.5);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[2] = this.m_world.CreateJoint(jd);\n\n      jd.bodyA = ground;\n      jd.bodyB = body3;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(-10.0, 20.0);\n      jd.localAnchorB.Set(-0.5, 0.5);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[3] = this.m_world.CreateJoint(jd);\n\n      jd.bodyA = body0;\n      jd.bodyB = body1;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(0.5, 0.0);\n      jd.localAnchorB.Set(-0.5, 0.0);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[4] = this.m_world.CreateJoint(jd);\n\n      jd.bodyA = body1;\n      jd.bodyB = body2;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(0.0, 0.5);\n      jd.localAnchorB.Set(0.0, -0.5);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[5] = this.m_world.CreateJoint(jd);\n\n      jd.bodyA = body2;\n      jd.bodyB = body3;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(-0.5, 0.0);\n      jd.localAnchorB.Set(0.5, 0.0);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[6] = this.m_world.CreateJoint(jd);\n\n      jd.bodyA = body3;\n      jd.bodyB = body0;\n      b2.LinearStiffness(jd, frequencyHz, dampingRatio, jd.bodyA, jd.bodyB);\n      jd.localAnchorA.Set(0.0, -0.5);\n      jd.localAnchorB.Set(0.0, 0.5);\n      p1 = jd.bodyA.GetWorldPoint(jd.localAnchorA, new b2.Vec2());\n      p2 = jd.bodyB.GetWorldPoint(jd.localAnchorB, new b2.Vec2());\n      d = b2.Vec2.SubVV(p2, p1, new b2.Vec2());\n      jd.length = d.Length();\n      this.m_joints[7] = this.m_world.CreateJoint(jd);\n    }\n  }\n\n  public JointDestroyed(joint: b2.Joint) {\n    for (let i = 0; i < 8; ++i) {\n      if (this.m_joints[i] === joint) {\n        this.m_joints[i] = null;\n        break;\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"b\":\n        for (let i = 0; i < 4; ++i) {\n          const body = this.m_bodies[i];\n          if (body) {\n            this.m_world.DestroyBody(body);\n            this.m_bodies[i] = null;\n            break;\n          }\n        }\n        break;\n\n      case \"j\":\n        for (let i = 0; i < 8; ++i) {\n          const joint = this.m_joints[i];\n          if (joint) {\n            this.m_world.DestroyJoint(joint);\n            this.m_joints[i] = null;\n            break;\n          }\n        }\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press: (b) to delete a body, (j) to delete a joint\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new Web();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Web\", Web.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// Test the wheel joint with motor, spring, and limit options.\nexport class WheelJoint extends testbed.Test {\n  public m_enableLimit = false;\n  public m_enableMotor = false;\n  public m_motorSpeed = 0.0;\n\n  constructor() {\n    super();\n\n    let ground: b2.Body | null = null;\n    {\n      const bd: b2.BodyDef = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape: b2.EdgeShape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    this.m_enableLimit = true;\n    this.m_enableMotor = false;\n    this.m_motorSpeed = 10.0;\n\n    {\n      const shape: b2.CircleShape = new b2.CircleShape();\n      shape.m_radius = 2.0;\n\n      const bd: b2.BodyDef = new b2.BodyDef();\n      bd.type = b2.dynamicBody;\n      bd.position.Set(0.0, 10.0);\n      bd.allowSleep = false;\n      const body: b2.Body = this.m_world.CreateBody(bd);\n      body.CreateFixture(shape, 5.0);\n\n      const jd: b2.WheelJointDef = new b2.WheelJointDef();\n\n      // Horizontal\n      jd.Initialize(ground, body, bd.position, new b2.Vec2(0.0, 1.0));\n\n      jd.motorSpeed = this.m_motorSpeed;\n      jd.maxMotorTorque = 10000.0;\n      jd.enableMotor = this.m_enableMotor;\n      jd.lowerTranslation = -3.0;\n      jd.upperTranslation = 3.0;\n      jd.enableLimit = this.m_enableLimit;\n\n      const hertz: number = 1.0;\n      const dampingRatio: number = 0.7;\n      b2.LinearStiffness(jd, hertz, dampingRatio, ground, body);\n\n      this.m_joint = this.m_world.CreateJoint(jd);\n    }\n  }\n\n  public m_joint: b2.WheelJoint;\n\n  private static Step_s_F: b2.Vec2 = new b2.Vec2();\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    const torque: number = this.m_joint.GetMotorTorque(settings.m_hertz);\n    // g_debugDraw.DrawString(5, m_textLine, \"Motor Torque = %4.0f\", torque);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Motor Torque = ${torque.toFixed(0)}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    const F: b2.Vec2 = this.m_joint.GetReactionForce(settings.m_hertz, WheelJoint.Step_s_F);\n    // g_debugDraw.DrawString(5, m_textLine, \"Reaction Force = (%4.1f, %4.1f)\", F.x, F.y);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Reaction Force = (${F.x.toFixed(1)}, ${F.y.toFixed(1)})`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new WheelJoint();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Joints\", \"Wheel\", WheelJoint.Create);\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/// This test shows how a distance joint can be used to stabilize a chain of\n/// bodies with a heavy payload. Notice that the distance joint just prevents\n/// excessive stretching and has no other effect.\n/// By disabling the distance joint you can see that the Box2D solver has trouble\n/// supporting heavy bodies with light bodies. Try playing around with the\n/// densities, time step, and iterations to see how they affect stability.\n/// This test also shows how to use contact filtering. Filtering is configured\n/// so that the payload does not collide with the chain.\nexport class WreckingBall extends testbed.Test {\n  public m_distanceJointDef = new b2.DistanceJointDef();\n  public m_distanceJoint: b2.DistanceJoint | null = null;\n\n  constructor() {\n    super();\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.5, 0.125);\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = 20.0;\n      fd.friction = 0.2;\n      fd.filter.categoryBits = 0x0001;\n      fd.filter.maskBits = 0xFFFF & ~0x0002;\n\n      const jd = new b2.RevoluteJointDef();\n      jd.collideConnected = false;\n\n      const N = 10;\n      const y = 15.0;\n      this.m_distanceJointDef.localAnchorA.Set(0.0, y);\n\n      let prevBody = ground;\n      for (let i = 0; i < N; ++i) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        bd.position.Set(0.5 + 1.0 * i, y);\n        if (i === N - 1) {\n          bd.position.Set(1.0 * i, y);\n          bd.angularDamping = 0.4;\n        }\n\n        const body = this.m_world.CreateBody(bd);\n\n        if (i === N - 1) {\n          const circleShape: b2.CircleShape = new b2.CircleShape();\n          circleShape.m_radius = 1.5;\n          const sfd: b2.FixtureDef = new b2.FixtureDef();\n          sfd.shape = circleShape;\n          sfd.density = 100.0;\n          sfd.filter.categoryBits = 0x0002;\n          body.CreateFixture(sfd);\n        }\n        else {\n          body.CreateFixture(fd);\n        }\n\n        const anchor = new b2.Vec2(i, y);\n        jd.Initialize(prevBody, body, anchor);\n        this.m_world.CreateJoint(jd);\n\n        prevBody = body;\n      }\n\n      this.m_distanceJointDef.localAnchorB.SetZero();\n\n      const extraLength = 0.01;\n      this.m_distanceJointDef.minLength = 0.0;\n      this.m_distanceJointDef.maxLength = N - 1.0 + extraLength;\n      this.m_distanceJointDef.bodyB = prevBody;\n    }\n\n    {\n      this.m_distanceJointDef.bodyA = ground;\n      this.m_distanceJoint = this.m_world.CreateJoint(this.m_distanceJointDef);\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"j\":\n        if (this.m_distanceJoint) {\n          this.m_world.DestroyJoint(this.m_distanceJoint);\n          this.m_distanceJoint = null;\n        } else {\n          this.m_distanceJoint = this.m_world.CreateJoint(this.m_distanceJointDef);\n        }\n        break;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press (j) to toggle the distance joint.\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    if (this.m_distanceJoint) {\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Distance Joint ON\");\n    } else {\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Distance Joint OFF\");\n    }\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create(): testbed.Test {\n    return new WreckingBall();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Examples\", \"Wrecking Ball\", WreckingBall.Create);\n","/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class BlobTest extends testbed.Test {\n  constructor() {\n    super();\n\n    const ground = this.m_world.CreateBody(new b2.BodyDef());\n\n    {\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(-40.0, 25.0));\n      ground.CreateFixture(shape, 0.0);\n      shape.SetTwoSided(new b2.Vec2(40.0, 0.0), new b2.Vec2(40.0, 25.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    {\n      const ajd = new b2.AreaJointDef();\n\n      const cx = 0.0;\n      const cy = 10.0;\n      const rx = 5.0;\n      const ry = 5.0;\n      const nBodies = 20;\n      const bodyRadius = 0.5;\n      for (let i = 0; i < nBodies; ++i) {\n        const angle = (i * 2.0 * Math.PI) / nBodies;\n        const bd = new b2.BodyDef();\n        //bd.isBullet = true;\n        bd.fixedRotation = true;\n\n        const x = cx + rx * Math.cos(angle);\n        const y = cy + ry * Math.sin(angle);\n        bd.position.Set(x, y);\n        bd.type = b2.BodyType.b2_dynamicBody;\n        const body = this.m_world.CreateBody(bd);\n\n        const fd = new b2.FixtureDef();\n        fd.shape = new b2.CircleShape(bodyRadius);\n        fd.density = 1.0;\n        body.CreateFixture(fd);\n\n        ajd.AddBody(body);\n      }\n\n      const frequencyHz: number = 10.0;\n      const dampingRatio: number = 1.0;\n      b2.LinearStiffness(ajd, frequencyHz, dampingRatio, ajd.bodyA, ajd.bodyB);\n      this.m_world.CreateJoint(ajd);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new BlobTest();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Blob Test\", BlobTest.Create);\n","import * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class DominoTower extends testbed.Test {\n  constructor() {\n    super();\n\n    const DOMINO_WIDTH = .2;\n    const DOMINO_FRICTION = 0.1;\n    const DOMINO_HEIGHT = 1.0;\n    const BASE_COUNT = 25;\n\n    /**\n     * The density of the dominos under construction. Varies for\n     * different parts of the tower.\n     */\n    let dominoDensity: number;\n\n    function makeDomino(x: number, y: number, horizontal: boolean) {\n      const sd = new b2.PolygonShape();\n      sd.SetAsBox(0.5 * DOMINO_WIDTH, 0.5 * DOMINO_HEIGHT);\n      const fd = new b2.FixtureDef();\n      fd.shape = sd;\n      fd.density = dominoDensity;\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      fd.friction = DOMINO_FRICTION;\n      fd.restitution = 0.65;\n      bd.position.Set(x, y);\n      bd.angle = horizontal ? (Math.PI / 2.0) : 0;\n      const myBody = world.CreateBody(bd);\n      myBody.CreateFixture(fd);\n    }\n\n    const gravity = new b2.Vec2(0, -10);\n    //world = new b2.World(gravity);\n    const world = this.m_world;\n    world.SetGravity(gravity);\n\n    // Create the floor\n    {\n      const sd = new b2.PolygonShape();\n      sd.SetAsBox(50, 10);\n\n      const bd = new b2.BodyDef();\n      bd.position.Set(0, -10);\n      const body = world.CreateBody(bd);\n      body.CreateFixture(sd, 0);\n    }\n\n    {\n      dominoDensity = 10;\n      // Make bullet\n      const sd = new b2.PolygonShape();\n      sd.SetAsBox(.7, .7);\n      const fd = new b2.FixtureDef();\n      fd.density = 35.0;\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      fd.shape = sd;\n      fd.friction = 0.0;\n      fd.restitution = 0.85;\n      bd.bullet = true;\n      bd.position.Set(30.0, 5.00);\n      let b = world.CreateBody(bd);\n      b.CreateFixture(fd);\n      b.SetLinearVelocity(new b2.Vec2(-25.0, -25.0));\n      b.SetAngularVelocity(6.7);\n\n      fd.density = 25.0;\n      bd.position.Set(-30.0, 25.0);\n      b = world.CreateBody(bd);\n      b.CreateFixture(fd);\n      b.SetLinearVelocity(new b2.Vec2(35.0, -10.0));\n      b.SetAngularVelocity(-8.3);\n    }\n\n    {\n\n      let currX;\n      // Make base\n      for (let i = 0; i < BASE_COUNT; ++i) {\n        currX = i * 1.5 * DOMINO_HEIGHT - (1.5 * DOMINO_HEIGHT * BASE_COUNT / 2);\n        makeDomino(currX, DOMINO_HEIGHT / 2.0, false);\n        makeDomino(currX, DOMINO_HEIGHT + DOMINO_WIDTH / 2.0, true);\n      }\n      currX = BASE_COUNT * 1.5 * DOMINO_HEIGHT - (1.5 * DOMINO_HEIGHT * BASE_COUNT / 2);\n\n      // Make 'I's\n      for (let j = 1; j < BASE_COUNT; ++j) {\n        if (j > 3) { dominoDensity *= .8; }\n\n        // The y at the center of the I structure.\n        const currY = DOMINO_HEIGHT * 0.5 + (DOMINO_HEIGHT + 2 * DOMINO_WIDTH) * .99 * j;\n\n        for (let i = 0; i < BASE_COUNT - j; ++i) {\n          currX = i * 1.5 * DOMINO_HEIGHT - (1.5 * DOMINO_HEIGHT * (BASE_COUNT - j) / 2);\n          dominoDensity *= 2.5;\n          if (i === 0) {\n            makeDomino(currX - (1.25 * DOMINO_HEIGHT) + .5 * DOMINO_WIDTH, currY - DOMINO_WIDTH, false);\n          }\n          if (i === BASE_COUNT - j - 1) {\n            makeDomino(currX + (1.25 * DOMINO_HEIGHT) - .5 * DOMINO_WIDTH, currY - DOMINO_WIDTH, false);\n          }\n\n          dominoDensity /= 2.5;\n          makeDomino(currX, currY, false);\n          makeDomino(currX, currY + .5 * (DOMINO_WIDTH + DOMINO_HEIGHT), true);\n          makeDomino(currX, currY - .5 * (DOMINO_WIDTH + DOMINO_HEIGHT), true);\n        }\n      }\n    }\n  }\n\n  public static Create() {\n    return new DominoTower();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Domino Tower\", DominoTower.Create);\n","import * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class PyramidTopple extends testbed.Test {\n  constructor() {\n    super();\n\n    const WIDTH = 4;\n    const HEIGHT = 30;\n\n    const add_domino = (world: b2.World, pos: b2.Vec2, flipped: boolean) => {\n      const mass = 1;\n\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Copy(pos);\n      const body = world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      if (flipped) {\n        shape.SetAsBox(0.5 * HEIGHT, 0.5 * WIDTH);\n      } else {\n        shape.SetAsBox(0.5 * WIDTH, 0.5 * HEIGHT);\n      }\n\n      const fd = new b2.FixtureDef();\n      fd.shape = shape;\n      fd.density = mass / (WIDTH * HEIGHT);\n      fd.friction = 0.6;\n      fd.restitution = 0.0;\n      body.CreateFixture(fd);\n    };\n\n    const world = this.m_world;\n    ///settings.positionIterations = 30; // cpSpaceSetIterations(space, 30);\n    ///world.SetGravity(new b2.Vec2(0, -300)); // cpSpaceSetGravity(space, cpv(0, -300));\n    ///b2.timeToSleep = 0.5; // cpSpaceSetSleepTimeThreshold(space, 0.5f);\n    ///b2.linearSlop = 0.5; // cpSpaceSetCollisionSlop(space, 0.5f);\n\n    // Add a floor.\n    const bd = new b2.BodyDef();\n    const body = world.CreateBody(bd);\n    const shape = new b2.EdgeShape();\n    shape.SetTwoSided(new b2.Vec2(-600, -240), new b2.Vec2(600, -240));\n    const fd = new b2.FixtureDef();\n    fd.shape = shape;\n    fd.friction = 1.0;\n    fd.restitution = 1.0;\n    body.CreateFixture(fd);\n\n    // Add the dominoes.\n    const n = 12;\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < (n - i); j++) {\n        const offset = new b2.Vec2((j - (n - 1 - i) * 0.5) * 1.5 * HEIGHT, (i + 0.5) * (HEIGHT + 2 * WIDTH) - WIDTH - 240);\n        add_domino(world, offset, false);\n        add_domino(world, b2.Vec2.AddVV(offset, new b2.Vec2(0, (HEIGHT + WIDTH) / 2), new b2.Vec2()), true);\n\n        if (j === 0) {\n          add_domino(world, b2.Vec2.AddVV(offset, new b2.Vec2(0.5 * (WIDTH - HEIGHT), HEIGHT + WIDTH), new b2.Vec2()), false);\n        }\n\n        if (j !== n - i - 1) {\n          add_domino(world, b2.Vec2.AddVV(offset, new b2.Vec2(HEIGHT * 0.75, (HEIGHT + 3 * WIDTH) / 2), new b2.Vec2()), true);\n        } else {\n          add_domino(world, b2.Vec2.AddVV(offset, new b2.Vec2(0.5 * (HEIGHT - WIDTH), HEIGHT + WIDTH), new b2.Vec2()), false);\n        }\n      }\n    }\n  }\n\n  public GetDefaultViewZoom(): number {\n    return 10.0;\n  }\n\n  public static Create() {\n    return new PyramidTopple();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Pyramid Topple\", PyramidTopple.Create);\n","/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class TestCCD extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const vertices = [];\n      vertices[0] = new b2.Vec2(-30.0, 40.0);\n      vertices[1] = new b2.Vec2(30.0, 40.0);\n      vertices[2] = new b2.Vec2(30.0, 0.0);\n      vertices[3] = new b2.Vec2(-30.0, 0.0);\n      const shape = new b2.ChainShape();\n      shape.CreateLoop(vertices);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Always on, even if default is off\n    this.m_world.SetContinuousPhysics(true);\n\n    const fd = new b2.FixtureDef();\n    // These values are used for all the parts of the 'basket'\n    fd.density = 4.0;\n    fd.restitution = 1.4;\n\n    // Create 'basket'\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.bullet = true;\n      bd.position.Set(15.0, 5.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const sd_bottom = new b2.PolygonShape();\n      sd_bottom.SetAsBox(4.5, 0.45);\n      fd.shape = sd_bottom;\n      body.CreateFixture(fd);\n\n      const sd_left = new b2.PolygonShape();\n      sd_left.SetAsBox(0.45, 8.1, new b2.Vec2(-4.35, 7.05), 0.2);\n      fd.shape = sd_left;\n      body.CreateFixture(fd);\n\n      const sd_right = new b2.PolygonShape();\n      sd_right.SetAsBox(0.45, 8.1, new b2.Vec2(4.35, 7.05), -0.2);\n      fd.shape = sd_right;\n      body.CreateFixture(fd);\n    }\n\n    // add some small circles for effect\n    for (let i = 0; i < 5; i++) {\n      const cd = new b2.CircleShape((Math.random() * 1.0 + 0.5));\n      fd.shape = cd;\n      fd.friction = 0.3;\n      fd.density = 1.0;\n      fd.restitution = 1.1;\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.bullet = true;\n      bd.position.Set((Math.random() * 30.0 - 25.0), (Math.random() * 32.0 + 2.0));\n      const body = this.m_world.CreateBody(bd);\n      body.CreateFixture(fd);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new TestCCD();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Test CCD\", TestCCD.Create);\n","/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class TestRagdoll extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const vertices = [];\n      vertices[0] = new b2.Vec2(-30.0, 40.0);\n      vertices[1] = new b2.Vec2(30.0, 40.0);\n      vertices[2] = new b2.Vec2(30.0, 0.0);\n      vertices[3] = new b2.Vec2(-30.0, 0.0);\n      const shape = new b2.ChainShape();\n      shape.CreateLoop(vertices);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    const bd = new b2.BodyDef();\n    const fd = new b2.FixtureDef();\n    const jd = new b2.RevoluteJointDef();\n\n    // Add 2 ragdolls along the top\n    for (let i = 0; i < 2; ++i) {\n      const startX = -20.0 + Math.random() * 2.0 + 40.0 * i;\n      const startY = 30.0 + Math.random() * 5.0;\n\n      // BODIES\n      // Set these to dynamic bodies\n      bd.type = b2.BodyType.b2_dynamicBody;\n\n      // Head\n      fd.shape = new b2.CircleShape(1.25);\n      fd.density = 1.0;\n      fd.friction = 0.4;\n      fd.restitution = 0.3;\n      bd.position.Set(startX, startY);\n      const head = this.m_world.CreateBody(bd);\n      head.CreateFixture(fd);\n      //if (i === 0)\n      //{\n      head.ApplyLinearImpulse(new b2.Vec2(Math.random() * 1000.0 - 500.0, Math.random() * 1000.0 - 500.0), head.GetWorldCenter());\n      //}\n\n      // Torso1\n      const shape = new b2.PolygonShape();\n      fd.shape = shape;\n      shape.SetAsBox(1.5, 1.0);\n      fd.density = 1.0;\n      fd.friction = 0.4;\n      fd.restitution = 0.1;\n      bd.position.Set(startX, (startY - 2.8));\n      const torso1 = this.m_world.CreateBody(bd);\n      torso1.CreateFixture(fd);\n      // Torso2\n      shape.SetAsBox(1.5, 1.0);\n      bd.position.Set(startX, (startY - 4.3));\n      const torso2 = this.m_world.CreateBody(bd);\n      torso2.CreateFixture(fd);\n      // Torso3\n      shape.SetAsBox(1.5, 1.0);\n      bd.position.Set(startX, (startY - 5.8));\n      const torso3 = this.m_world.CreateBody(bd);\n      torso3.CreateFixture(fd);\n\n      // UpperArm\n      fd.density = 1.0;\n      fd.friction = 0.4;\n      fd.restitution = 0.1;\n      // L\n      shape.SetAsBox(1.8, 0.65);\n      bd.position.Set((startX - 3.0), (startY - 2.0));\n      const upperArmL = this.m_world.CreateBody(bd);\n      upperArmL.CreateFixture(fd);\n      // R\n      shape.SetAsBox(1.8, 0.65);\n      bd.position.Set((startX + 3.0), (startY - 2.0));\n      const upperArmR = this.m_world.CreateBody(bd);\n      upperArmR.CreateFixture(fd);\n\n      // LowerArm\n      fd.density = 1.0;\n      fd.friction = 0.4;\n      fd.restitution = 0.1;\n      // L\n      shape.SetAsBox(1.7, 0.6);\n      bd.position.Set((startX - 5.7), (startY - 2.0));\n      const lowerArmL = this.m_world.CreateBody(bd);\n      lowerArmL.CreateFixture(fd);\n      // R\n      shape.SetAsBox(1.7, 0.6);\n      bd.position.Set((startX + 5.7), (startY - 2.0));\n      const lowerArmR = this.m_world.CreateBody(bd);\n      lowerArmR.CreateFixture(fd);\n\n      // UpperLeg\n      fd.density = 1.0;\n      fd.friction = 0.4;\n      fd.restitution = 0.1;\n      // L\n      shape.SetAsBox(0.75, 2.2);\n      bd.position.Set((startX - 0.8), (startY - 8.5));\n      const upperLegL = this.m_world.CreateBody(bd);\n      upperLegL.CreateFixture(fd);\n      // R\n      shape.SetAsBox(0.75, 2.2);\n      bd.position.Set((startX + 0.8), (startY - 8.5));\n      const upperLegR = this.m_world.CreateBody(bd);\n      upperLegR.CreateFixture(fd);\n\n      // LowerLeg\n      fd.density = 1.0;\n      fd.friction = 0.4;\n      fd.restitution = 0.1;\n      // L\n      shape.SetAsBox(0.6, 2.0);\n      bd.position.Set((startX - 0.8), (startY - 12.0));\n      const lowerLegL = this.m_world.CreateBody(bd);\n      lowerLegL.CreateFixture(fd);\n      // R\n      shape.SetAsBox(0.6, 2.0);\n      bd.position.Set((startX + 0.8), (startY - 12.0));\n      const lowerLegR = this.m_world.CreateBody(bd);\n      lowerLegR.CreateFixture(fd);\n\n      // JOINTS\n      jd.enableLimit = true;\n\n      // Head to shoulders\n      jd.lowerAngle = b2.DegToRad(-40.0);\n      jd.upperAngle = b2.DegToRad(40.0);\n      jd.Initialize(torso1, head, new b2.Vec2(startX, (startY - 1.5)));\n      this.m_world.CreateJoint(jd);\n\n      // Upper arm to shoulders\n      // L\n      jd.lowerAngle = b2.DegToRad(-85.0);\n      jd.upperAngle = b2.DegToRad(130.0);\n      jd.Initialize(torso1, upperArmL, new b2.Vec2((startX - 1.8), (startY - 2.0)));\n      this.m_world.CreateJoint(jd);\n      // R\n      jd.lowerAngle = b2.DegToRad(-130.0);\n      jd.upperAngle = b2.DegToRad(85.0);\n      jd.Initialize(torso1, upperArmR, new b2.Vec2((startX + 1.8), (startY - 2.0)));\n      this.m_world.CreateJoint(jd);\n\n      // Lower arm to upper arm\n      // L\n      jd.lowerAngle = b2.DegToRad(-130.0);\n      jd.upperAngle = b2.DegToRad(10.0);\n      jd.Initialize(upperArmL, lowerArmL, new b2.Vec2((startX - 4.5), (startY - 2.0)));\n      this.m_world.CreateJoint(jd);\n      // R\n      jd.lowerAngle = b2.DegToRad(-10.0);\n      jd.upperAngle = b2.DegToRad(130.0);\n      jd.Initialize(upperArmR, lowerArmR, new b2.Vec2((startX + 4.5), (startY - 2.0)));\n      this.m_world.CreateJoint(jd);\n\n      // Shoulders/stomach\n      jd.lowerAngle = b2.DegToRad(-15.0);\n      jd.upperAngle = b2.DegToRad(15.0);\n      jd.Initialize(torso1, torso2, new b2.Vec2(startX, (startY - 3.5)));\n      this.m_world.CreateJoint(jd);\n      // Stomach/hips\n      jd.Initialize(torso2, torso3, new b2.Vec2(startX, (startY - 5.0)));\n      this.m_world.CreateJoint(jd);\n\n      // Torso to upper leg\n      // L\n      jd.lowerAngle = b2.DegToRad(-25.0);\n      jd.upperAngle = b2.DegToRad(45.0);\n      jd.Initialize(torso3, upperLegL, new b2.Vec2((startX - 0.8), (startY - 7.2)));\n      this.m_world.CreateJoint(jd);\n      // R\n      jd.lowerAngle = b2.DegToRad(-45.0);\n      jd.upperAngle = b2.DegToRad(25.0);\n      jd.Initialize(torso3, upperLegR, new b2.Vec2((startX + 0.8), (startY - 7.2)));\n      this.m_world.CreateJoint(jd);\n\n      // Upper leg to lower leg\n      // L\n      jd.lowerAngle = b2.DegToRad(-25.0);\n      jd.upperAngle = b2.DegToRad(115.0);\n      jd.Initialize(upperLegL, lowerLegL, new b2.Vec2((startX - 0.8), (startY - 10.5)));\n      this.m_world.CreateJoint(jd);\n      // R\n      jd.lowerAngle = b2.DegToRad(-115.0);\n      jd.upperAngle = b2.DegToRad(25.0);\n      jd.Initialize(upperLegR, lowerLegR, new b2.Vec2((startX + 0.8), (startY - 10.5)));\n      this.m_world.CreateJoint(jd);\n    }\n\n    // these are static bodies so set the type accordingly\n    bd.type = b2.BodyType.b2_staticBody;\n    const shape = new b2.PolygonShape();\n    fd.shape = shape;\n    fd.density = 0.0;\n    fd.friction = 0.4;\n    fd.restitution = 0.3;\n\n    // Add stairs on the left\n    for (let j = 1; j <= 10; ++j) {\n      shape.SetAsBox((1.0 * j), 1.0);\n      bd.position.Set((1.0 * j - 30.0), (21.0 - 2.0 * j));\n      this.m_world.CreateBody(bd).CreateFixture(fd);\n    }\n\n    // Add stairs on the right\n    for (let k = 1; k <= 10; ++k) {\n      shape.SetAsBox((1.0 * k), 1.0);\n      bd.position.Set((30.0 - 1.0 * k), (21.0 - 2.0 * k));\n      this.m_world.CreateBody(bd).CreateFixture(fd);\n    }\n\n    shape.SetAsBox(3.0, 4.0);\n    bd.position.Set(0.0, 4.0);\n    this.m_world.CreateBody(bd).CreateFixture(fd);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new TestRagdoll();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Ragdoll\", TestRagdoll.Create);\n","/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class TestStack extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const vertices = [];\n      vertices[0] = new b2.Vec2(-30.0, 40.0);\n      vertices[1] = new b2.Vec2(30.0, 40.0);\n      vertices[2] = new b2.Vec2(30.0, 0.0);\n      vertices[3] = new b2.Vec2(-30.0, 0.0);\n      const shape = new b2.ChainShape();\n      shape.CreateLoop(vertices);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Add bodies\n    const bd = new b2.BodyDef();\n    const fd = new b2.FixtureDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    //bd.isBullet = true;\n    const polygon = new b2.PolygonShape();\n    fd.shape = polygon;\n    fd.density = 1.0;\n    fd.friction = 0.5;\n    fd.restitution = 0.1;\n    polygon.SetAsBox(1.0, 1.0);\n    // Create 3 stacks\n    for (let i = 0; i < 10; ++i) {\n      bd.position.Set((0.0 + Math.random() * 0.2 - 0.1), (30.0 - i * 2.5));\n      this.m_world.CreateBody(bd).CreateFixture(fd);\n    }\n    for (let i = 0; i < 10; ++i) {\n      bd.position.Set((10.0 + Math.random() * 0.2 - 0.1), (30.0 - i * 2.5));\n      this.m_world.CreateBody(bd).CreateFixture(fd);\n    }\n    for (let i = 0; i < 10; ++i) {\n      bd.position.Set((20.0 + Math.random() * 0.2 - 0.1), (30.0 - i * 2.5));\n      this.m_world.CreateBody(bd).CreateFixture(fd);\n    }\n    // Create ramp\n    bd.type = b2.BodyType.b2_staticBody;\n    bd.position.Set(0.0, 0.0);\n    const vxs = [\n      new b2.Vec2(-30.0, 0.0),\n      new b2.Vec2(-10.0, 0.0),\n      new b2.Vec2(-30.0, 10.0),\n    ];\n    polygon.Set(vxs, vxs.length);\n    fd.density = 0;\n    this.m_world.CreateBody(bd).CreateFixture(fd);\n\n    // Create ball\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Set(-25.0, 20.0);\n    fd.shape = new b2.CircleShape(4.0);\n    fd.density = 2;\n    fd.restitution = 0.2;\n    fd.friction = 0.5;\n    this.m_world.CreateBody(bd).CreateFixture(fd);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new TestStack();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Test Stack\", TestStack.Create);\n","/*\n * Author: Chris Campbell - www.iforce2d.net\n *\n * Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nconst DEGTORAD = 0.0174532925199432957;\n// const RADTODEG = 57.295779513082320876;\n\nconst TDC_LEFT = 0x1;\nconst TDC_RIGHT = 0x2;\nconst TDC_UP = 0x4;\nconst TDC_DOWN = 0x8;\n\n/**\n * types of fixture user data\n */\nconst FUD_CAR_TIRE = 0;\nconst FUD_GROUND_AREA = 1;\n\n/**\n * a class to allow subclassing of different fixture user data\n */\nexport class FixtureUserData {\n  public m_type: number;\n\n  constructor(type: number) {\n    this.m_type = type;\n  }\n\n  public getType(): number {\n    return this.m_type;\n  }\n}\n\n/**\n * class to allow marking a fixture as a car tire\n */\nexport class CarTireFUD extends FixtureUserData {\n  constructor() {\n    super(FUD_CAR_TIRE);\n  }\n}\n\n// /**\n//  * class to allow marking a fixture as a ground area\n//  */\nexport class GroundAreaFUD extends FixtureUserData {\n  public frictionModifier: number;\n  public outOfCourse: boolean;\n  constructor(fm: number, ooc: boolean) {\n    super(FUD_GROUND_AREA);\n    this.frictionModifier = fm;\n    this.outOfCourse = ooc;\n  }\n}\n\nexport class TDTire {\n  public m_groundAreas: GroundAreaFUD[] = [];\n  public m_body: b2.Body;\n  public m_currentTraction: number = 1;\n  public m_maxForwardSpeed: number = 0;\n  public m_maxBackwardSpeed: number = 0;\n  public m_maxDriveForce: number = 0;\n  public m_maxLateralImpulse: number = 0;\n\n  constructor(world: b2.World) {\n    const bodyDef = new b2.BodyDef();\n    bodyDef.type = b2.BodyType.b2_dynamicBody;\n    this.m_body = world.CreateBody(bodyDef);\n\n    const polygonShape = new b2.PolygonShape();\n    polygonShape.SetAsBox(0.5, 1.25);\n    const fixture = this.m_body.CreateFixture(polygonShape, 1); //shape, density\n    fixture.SetUserData(new CarTireFUD());\n\n    this.m_body.SetUserData(this);\n  }\n\n  public setCharacteristics(maxForwardSpeed: number, maxBackwardSpeed: number, maxDriveForce: number, maxLateralImpulse: number): void {\n    this.m_maxForwardSpeed = maxForwardSpeed;\n    this.m_maxBackwardSpeed = maxBackwardSpeed;\n    this.m_maxDriveForce = maxDriveForce;\n    this.m_maxLateralImpulse = maxLateralImpulse;\n  }\n\n  public addGroundArea(ga: GroundAreaFUD): void {\n    this.m_groundAreas.push(ga);\n    this.updateTraction();\n  }\n\n  public removeGroundArea(ga: GroundAreaFUD): void {\n    this.m_groundAreas.splice(this.m_groundAreas.indexOf(ga));\n    this.updateTraction();\n  }\n\n  public updateTraction(): void {\n    if (this.m_groundAreas.length === 0) {\n      this.m_currentTraction = 1;\n    } else {\n      //find area with highest traction\n      this.m_currentTraction = 0;\n      this.m_groundAreas.forEach((ga) => {\n        if (ga.frictionModifier > this.m_currentTraction) {\n          this.m_currentTraction = ga.frictionModifier;\n        }\n      });\n    }\n  }\n\n  public getLateralVelocity(): b2.Vec2 {\n    const currentRightNormal = this.m_body.GetWorldVector(new b2.Vec2(1, 0), new b2.Vec2());\n    return currentRightNormal.SelfMul(b2.Vec2.DotVV(currentRightNormal, this.m_body.GetLinearVelocity()));\n  }\n\n  public getForwardVelocity(): b2.Vec2 {\n    const currentForwardNormal = this.m_body.GetWorldVector(new b2.Vec2(0, 1), new b2.Vec2());\n    return currentForwardNormal.SelfMul(b2.Vec2.DotVV(currentForwardNormal, this.m_body.GetLinearVelocity()));\n  }\n\n  public updateFriction(): void {\n    //lateral linear velocity\n    const impulse = this.getLateralVelocity().SelfMul(-1.0 * this.m_body.GetMass());\n    if (impulse.Length() > this.m_maxLateralImpulse) {\n      impulse.SelfMul(this.m_maxLateralImpulse / impulse.Length());\n    }\n    this.m_body.ApplyLinearImpulse(impulse.SelfMul(this.m_currentTraction), this.m_body.GetWorldCenter());\n\n    //angular velocity\n    this.m_body.ApplyAngularImpulse(this.m_currentTraction * 0.1 * this.m_body.GetInertia() * -this.m_body.GetAngularVelocity());\n\n    //forward linear velocity\n    const currentForwardNormal = this.getForwardVelocity();\n    const currentForwardSpeed = currentForwardNormal.Normalize();\n    const dragForceMagnitude = -2 * currentForwardSpeed;\n    this.m_body.ApplyForce(currentForwardNormal.SelfMul(this.m_currentTraction * dragForceMagnitude), this.m_body.GetWorldCenter());\n  }\n\n  public updateDrive(controlState: number): void {\n\n    //find desired speed\n    let desiredSpeed = 0;\n    switch (controlState & (TDC_UP | TDC_DOWN)) {\n      case TDC_UP:\n        desiredSpeed = this.m_maxForwardSpeed;\n        break;\n      case TDC_DOWN:\n        desiredSpeed = this.m_maxBackwardSpeed;\n        break;\n      default:\n        return; //do nothing\n    }\n\n    //find current speed in forward direction\n    const currentForwardNormal = this.m_body.GetWorldVector(new b2.Vec2(0, 1), new b2.Vec2());\n    const currentSpeed = b2.Vec2.DotVV(this.getForwardVelocity(), currentForwardNormal);\n\n    //apply necessary force\n    let force = 0;\n    if (desiredSpeed > currentSpeed) {\n      force = this.m_maxDriveForce;\n    } else if (desiredSpeed < currentSpeed) {\n      force = -this.m_maxDriveForce;\n    } else {\n      return;\n    }\n    this.m_body.ApplyForce(currentForwardNormal.SelfMul(this.m_currentTraction * force), this.m_body.GetWorldCenter());\n  }\n\n  public updateTurn(controlState: number): void {\n    let desiredTorque = 0;\n    switch (controlState & (TDC_LEFT | TDC_RIGHT)) {\n      case TDC_LEFT:\n        desiredTorque = 15;\n        break;\n      case TDC_RIGHT:\n        desiredTorque = -15;\n        break;\n      default:\n        //nothing\n    }\n    this.m_body.ApplyTorque(desiredTorque);\n  }\n}\n\nexport class TDCar {\n  public m_tires: TDTire[];\n  public m_body: b2.Body;\n  public flJoint: b2.RevoluteJoint;\n  public frJoint: b2.RevoluteJoint;\n\n  constructor(world: b2.World) {\n    this.m_tires = [];\n\n    //create car body\n    const bodyDef = new b2.BodyDef();\n    bodyDef.type = b2.BodyType.b2_dynamicBody;\n    this.m_body = world.CreateBody(bodyDef);\n    this.m_body.SetAngularDamping(3);\n\n    const vertices = [];\n    vertices[0] = new b2.Vec2(1.5, 0);\n    vertices[1] = new b2.Vec2(3, 2.5);\n    vertices[2] = new b2.Vec2(2.8, 5.5);\n    vertices[3] = new b2.Vec2(1, 10);\n    vertices[4] = new b2.Vec2(-1, 10);\n    vertices[5] = new b2.Vec2(-2.8, 5.5);\n    vertices[6] = new b2.Vec2(-3, 2.5);\n    vertices[7] = new b2.Vec2(-1.5, 0);\n    const polygonShape = new b2.PolygonShape();\n    polygonShape.Set(vertices, 8);\n    this.m_body.CreateFixture(polygonShape, 0.1); //shape, density\n\n    //prepare common joint parameters\n    const jointDef = new b2.RevoluteJointDef();\n    jointDef.bodyA = this.m_body;\n    jointDef.enableLimit = true;\n    jointDef.lowerAngle = 0;\n    jointDef.upperAngle = 0;\n    jointDef.localAnchorB.SetZero(); //center of tire\n\n    const maxForwardSpeed = 250;\n    const maxBackwardSpeed = -40;\n    const backTireMaxDriveForce = 300;\n    const frontTireMaxDriveForce = 500;\n    const backTireMaxLateralImpulse = 8.5;\n    const frontTireMaxLateralImpulse = 7.5;\n\n    //back left tire\n    let tire = new TDTire(world);\n    tire.setCharacteristics(maxForwardSpeed, maxBackwardSpeed, backTireMaxDriveForce, backTireMaxLateralImpulse);\n    jointDef.bodyB = tire.m_body;\n    jointDef.localAnchorA.Set(-3, 0.75);\n    world.CreateJoint(jointDef);\n    this.m_tires.push(tire);\n\n    //back right tire\n    tire = new TDTire(world);\n    tire.setCharacteristics(maxForwardSpeed, maxBackwardSpeed, backTireMaxDriveForce, backTireMaxLateralImpulse);\n    jointDef.bodyB = tire.m_body;\n    jointDef.localAnchorA.Set(3, 0.75);\n    world.CreateJoint(jointDef);\n    this.m_tires.push(tire);\n\n    //front left tire\n    tire = new TDTire(world);\n    tire.setCharacteristics(maxForwardSpeed, maxBackwardSpeed, frontTireMaxDriveForce, frontTireMaxLateralImpulse);\n    jointDef.bodyB = tire.m_body;\n    jointDef.localAnchorA.Set(-3, 8.5);\n    this.flJoint = world.CreateJoint(jointDef);\n    this.m_tires.push(tire);\n\n    //front right tire\n    tire = new TDTire(world);\n    tire.setCharacteristics(maxForwardSpeed, maxBackwardSpeed, frontTireMaxDriveForce, frontTireMaxLateralImpulse);\n    jointDef.bodyB = tire.m_body;\n    jointDef.localAnchorA.Set(3, 8.5);\n    this.frJoint = world.CreateJoint(jointDef);\n    this.m_tires.push(tire);\n  }\n\n  public update(controlState: number) {\n    this.m_tires.forEach((tire) => {\n      tire.updateFriction();\n    });\n    this.m_tires.forEach((tire) => {\n      tire.updateDrive(controlState);\n    });\n\n    //control steering\n    const lockAngle = 35 * DEGTORAD;\n    const turnSpeedPerSec = 160 * DEGTORAD; //from lock to lock in 0.5 sec\n    const turnPerTimeStep = turnSpeedPerSec / 60.0;\n    let desiredAngle = 0;\n    switch (controlState & (TDC_LEFT | TDC_RIGHT)) {\n      case TDC_LEFT:\n        desiredAngle = lockAngle;\n        break;\n      case TDC_RIGHT:\n        desiredAngle = -lockAngle;\n        break;\n      default:\n        //nothing\n    }\n    const angleNow = this.flJoint.GetJointAngle();\n    let angleToTurn = desiredAngle - angleNow;\n    angleToTurn = b2.Clamp(angleToTurn, -turnPerTimeStep, turnPerTimeStep);\n    const newAngle = angleNow + angleToTurn;\n    this.flJoint.SetLimits(newAngle, newAngle);\n    this.frJoint.SetLimits(newAngle, newAngle);\n  }\n}\n\nexport class MyDestructionListener extends testbed.DestructionListener {\n  public SayGoodbyeFixture(fixture: b2.Fixture): void {\n    ///  if ( FixtureUserData* fud = (FixtureUserData*)fixture.GetUserData() )\n    ///    delete fud;\n    super.SayGoodbyeFixture(fixture);\n  }\n\n  /**\n   * (unused but must implement all pure virtual functions)\n   */\n  public SayGoodbyeJoint(joint: b2.Joint): void {\n    super.SayGoodbyeJoint(joint);\n  }\n}\n\nexport class TopdownCar extends testbed.Test {\n  public m_car: TDCar;\n  public m_controlState: number;\n\n  constructor() {\n    super();\n\n    //this.m_destructionListener = new MyDestructionListener(this);\n\n    this.m_world.SetGravity(new b2.Vec2(0.0, 0.0));\n    this.m_world.SetDestructionListener(this.m_destructionListener);\n\n    //set up ground areas\n    {\n      const bodyDef = new b2.BodyDef();\n      this.m_groundBody = this.m_world.CreateBody(bodyDef);\n\n      const polygonShape = new b2.PolygonShape();\n      const fixtureDef = new b2.FixtureDef();\n      fixtureDef.shape = polygonShape;\n      fixtureDef.isSensor = true;\n\n      polygonShape.SetAsBox(9, 7, new b2.Vec2(-10, 15), 20 * DEGTORAD);\n      let groundAreaFixture = this.m_groundBody.CreateFixture(fixtureDef);\n      groundAreaFixture.SetUserData(new GroundAreaFUD(0.5, false));\n\n      polygonShape.SetAsBox(9, 5, new b2.Vec2(5, 20), -40 * DEGTORAD);\n      groundAreaFixture = this.m_groundBody.CreateFixture(fixtureDef);\n      groundAreaFixture.SetUserData(new GroundAreaFUD(0.2, false));\n    }\n\n    //this.m_tire = new TDTire(this.m_world);\n    //this.m_tire.setCharacteristics(100, -20, 150);\n\n    this.m_car = new TDCar(this.m_world);\n\n    this.m_controlState = 0;\n  }\n\n  public Keyboard(key: string): void {\n    switch (key) {\n      case \"a\":\n        this.m_controlState |= TDC_LEFT;\n        break;\n      case \"d\":\n        this.m_controlState |= TDC_RIGHT;\n        break;\n      case \"w\":\n        this.m_controlState |= TDC_UP;\n        break;\n      case \"s\":\n        this.m_controlState |= TDC_DOWN;\n        break;\n      default:\n        super.Keyboard(key);\n    }\n  }\n\n  public KeyboardUp(key: string): void {\n    switch (key) {\n      case \"a\":\n        this.m_controlState &= ~TDC_LEFT;\n        break;\n      case \"d\":\n        this.m_controlState &= ~TDC_RIGHT;\n        break;\n      case \"w\":\n        this.m_controlState &= ~TDC_UP;\n        break;\n      case \"s\":\n        this.m_controlState &= ~TDC_DOWN;\n        break;\n      default:\n        super.KeyboardUp(key);\n    }\n  }\n\n  public static handleContact(contact: b2.Contact, began: boolean): void {\n    const a = contact.GetFixtureA();\n    const b = contact.GetFixtureB();\n    const fudA = a.GetUserData();\n    const fudB = b.GetUserData();\n\n    if (!fudA || !fudB) {\n      return;\n    }\n\n    if (fudA.getType() === FUD_CAR_TIRE || fudB.getType() === FUD_GROUND_AREA) {\n      TopdownCar.tire_vs_groundArea(a, b, began);\n    } else if (fudA.getType() === FUD_GROUND_AREA || fudB.getType() === FUD_CAR_TIRE) {\n      TopdownCar.tire_vs_groundArea(b, a, began);\n    }\n  }\n\n  public BeginContact(contact: b2.Contact): void {\n    TopdownCar.handleContact(contact, true);\n  }\n\n  public EndContact(contact: b2.Contact): void {\n    TopdownCar.handleContact(contact, false);\n  }\n\n  public static tire_vs_groundArea(tireFixture: b2.Fixture, groundAreaFixture: b2.Fixture, began: boolean): void {\n    const tire = tireFixture.GetBody().GetUserData();\n    const gaFud = groundAreaFixture.GetUserData();\n    if (began) {\n      tire.addGroundArea(gaFud);\n    } else {\n      tire.removeGroundArea(gaFud);\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    /*this.m_tire.updateFriction();\n    this.m_tire.updateDrive(this.m_controlState);\n    this.m_tire.updateTurn(this.m_controlState);*/\n\n    this.m_car.update(this.m_controlState);\n\n    super.Step(settings);\n\n    //show some useful info\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Press w/a/s/d to control the car\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n\n    //testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Tire traction: %.2f\", this.m_tire.m_currentTraction);\n    //this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public static Create() {\n    return new TopdownCar();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Topdown Car\", TopdownCar.Create);\n","/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Segway extends testbed.Test {\n  public static PENDULUM_LENGTH: number = 10;\n\n  public targetPosition: number = 10;\n  public targetPositionInterval: number = 0;\n  public posAvg: number = 0;\n  public readonly angleController: PIDController = new PIDController();\n  public readonly positionController: PIDController = new PIDController();\n  public pendulumBody: b2.Body;\n  public wheelBody: b2.Body;\n  public groundBody: b2.Body;\n  public wheelJoint: b2.RevoluteJoint;\n\n  constructor() {\n    super();\n\n    this.m_world.SetGravity({ x: 0, y: -30 });\n\n    this.angleController.gainP = 1000;\n    this.angleController.gainI = 0;\n    this.angleController.gainD = 250;\n\n    this.positionController.gainP = 0.5;\n    this.positionController.gainI = 0;\n    this.positionController.gainD = 1.5;\n\n    const bd: b2.BodyDef = new b2.BodyDef();\n    const fd: b2.FixtureDef = new b2.FixtureDef();\n\n    // pendulumBody = new p2.Body({\n    //     mass: 1,\n    //     position: [0, 2 + 0.5 * PENDULUM_LENGTH]\n    // });\n    // pendulumBody.addShape(new p2.Box({ width: 1, height: PENDULUM_LENGTH }));\n    // world.addBody(pendulumBody);\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.x = 0;\n    bd.position.y = 2 + 0.5 * Segway.PENDULUM_LENGTH;\n    this.pendulumBody = this.m_world.CreateBody(bd);\n    const pendulumShape: b2.PolygonShape = new b2.PolygonShape();\n    pendulumShape.SetAsBox(0.5, 0.5 * Segway.PENDULUM_LENGTH);\n    fd.shape = pendulumShape;\n    fd.density = 1 / (1 * Segway.PENDULUM_LENGTH); // TODO: specify mass\n    // fd.mass = 1;\n    this.pendulumBody.CreateFixture(fd);\n\n    // wheelBody = new p2.Body({\n    //     mass: 1,\n    //     position: [0,1]\n    // });\n    // wheelBody.addShape(new p2.Circle({ radius: 0.6 }));\n    // world.addBody(wheelBody);\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.x = 0;\n    bd.position.y = 1;\n    this.wheelBody = this.m_world.CreateBody(bd);\n    const wheelShape: b2.CircleShape = new b2.CircleShape();\n    wheelShape.m_radius = 0.6;\n    fd.shape = wheelShape;\n    fd.density = 1 / (Math.PI * 0.6 * 0.6); // TODO: specify mass\n    // fd.mass = 1;\n    fd.friction = 10;\n    this.wheelBody.CreateFixture(fd);\n\n    // var wheelJoint = new p2.RevoluteConstraint(wheelBody, pendulumBody, {\n    //     localPivotA: [0, 0],\n    //     localPivotB: [0, -0.5 * PENDULUM_LENGTH],\n    //     collideConnected: false\n    // });\n    // world.addConstraint(wheelJoint);\n    // wheelJoint.motorEnabled = true;\n    // var m = 40;\n    // wheelJoint.motorEquation.maxForce = m;\n    // wheelJoint.motorEquation.minForce = -m;\n    const jd: b2.RevoluteJointDef = new b2.RevoluteJointDef();\n    jd.Initialize(this.wheelBody, this.pendulumBody, { x: 0, y: 0 });\n    jd.localAnchorA.Set(0, 0);\n    jd.localAnchorB.Set(0, -0.5 * Segway.PENDULUM_LENGTH);\n    jd.collideConnected = false;\n    jd.enableMotor = true;\n    jd.maxMotorTorque = 40;\n    this.wheelJoint = this.m_world.CreateJoint(jd);\n\n    // Create ground\n    // var groundShape = new p2.Plane();\n    // var groundBody = new p2.Body({\n    //     position:[0,0],\n    // });\n    // groundBody.addShape(groundShape);\n    // world.addBody(groundBody);\n    bd.type = b2.BodyType.b2_staticBody;\n    bd.position.x = 0;\n    bd.position.y = 0;\n    this.groundBody = this.m_world.CreateBody(bd);\n    const groundShape: b2.EdgeShape = new b2.EdgeShape();\n    groundShape.SetTwoSided({ x: -100, y: 0 }, { x: 100, y: 0 });\n    fd.shape = groundShape;\n    fd.friction = 10;\n    this.groundBody.CreateFixture(fd);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    let dt: number = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n\n    if (settings.m_pause && !settings.m_singleStep) {\n      dt = 0.0;\n    }\n\n    super.Step(settings);\n\n    this.targetPositionInterval += dt;\n    if (this.targetPositionInterval >= 8) {\n      this.targetPositionInterval = 0;\n      this.targetPosition = this.targetPosition === 10 ? -10 : 10;\n    }\n\n    let targetAngle: number = 0;\n    if ( true ) {\n      const alpha: number = 0.4;\n      // posAvg = (1 - alpha) * posAvg + alpha * pendulumBody.position[0];\n      this.posAvg = (1 - alpha) * this.posAvg + alpha * this.pendulumBody.GetPosition().x;\n      this.positionController.currentError = this.targetPosition - this.posAvg;\n      // positionController.step(world.lastTimeStep);\n      this.positionController.step(dt);\n      let targetLinAccel: number = this.positionController.output;\n      // targetLinAccel = clamp(targetLinAccel, -10.0, 10.0);\n      targetLinAccel = b2.Clamp(targetLinAccel, -10, 10);\n      // targetAngle = targetLinAccel / world.gravity[1];\n      targetAngle = targetLinAccel / this.m_world.GetGravity().y;\n      // targetAngle = clamp(targetAngle, -15 * DEGTORAD, 15 * DEGTORAD);\n      targetAngle = b2.Clamp(targetAngle, b2.DegToRad(-15), b2.DegToRad(15));\n    }\n    // var currentAngle = pendulumBody.angle;\n    let currentAngle: number = this.pendulumBody.GetAngle();\n    currentAngle = normalizeAngle(currentAngle);\n    this.angleController.currentError = targetAngle - currentAngle;\n    // angleController.step(world.lastTimeStep);\n    this.angleController.step(dt);\n    let targetSpeed: number = this.angleController.output;\n    // give up if speed required is really high\n    if ( Math.abs(targetSpeed) > 1000 ) {\n      targetSpeed = 0;\n    }\n    // this is the only output\n    // var targetAngularVelocity = -targetSpeed / (2 * Math.PI * wheelBody.shapes[0].radius); // wheel circumference = 2*pi*r\n    const targetAngularVelocity: number = targetSpeed / (2 * Math.PI * 0.6); // wheel circumference = 2*pi*r\n    // wheelJoint.motorSpeed = targetAngularVelocity;\n    this.wheelJoint.SetMotorSpeed(targetAngularVelocity);\n  }\n\n  public static Create(): testbed.Test {\n    return new Segway();\n  }\n}\n\n/*\n  Simple PID controller for single float variable\n  http://en.wikipedia.org/wiki/PID_controller#Pseudocode\n*/\nclass PIDController {\n  public gainP: number = 1;\n  public gainI: number = 1;\n  public gainD: number = 1;\n  public currentError: number = 0;\n  public previousError: number = 0;\n  public integral: number = 0;\n  public output: number = 0;\n\n  public step(dt: number): void {\n    this.integral = dt * (this.integral + this.currentError);\n    const derivative: number = (1 / dt) * (this.currentError - this.previousError);\n    this.output = this.gainP * this.currentError + this.gainI * this.integral + this.gainD * derivative;\n    this.previousError = this.currentError;\n  }\n}\n\n// var DEGTORAD = 0.0174532925199432957;\n// var RADTODEG = 57.295779513082320876;\n// var PENDULUM_LENGTH = 10;\n// var targetPosition = 0;\n// var targetPositionInterval = setInterval(changeTargetPos, 8000);\n// function changeTargetPos(){\n//     targetPosition = targetPosition===0 ? 10 : 0;\n// }\n// changeTargetPos();\n// var posAvg = 0;\n// var angleController = new PIDController();\n// angleController.gainP = 1000;\n// angleController.gainI = 0;\n// angleController.gainD = 250;\n// var positionController = new PIDController();\n// positionController.gainP = 0.5;\n// positionController.gainI = 0;\n// positionController.gainD = 1.5;\n// // Create demo application\n// var app = new p2.WebGLRenderer(function(){\n//     var world = new p2.World({\n//         gravity : [0,-30]\n//     });\n//     this.setWorld(world);\n//     world.defaultContactMaterial.friction = 10;\n//     pendulumBody = new p2.Body({\n//         mass: 1,\n//         position: [0, 2 + 0.5 * PENDULUM_LENGTH]\n//     });\n//     pendulumBody.addShape(new p2.Box({ width: 1, height: PENDULUM_LENGTH }));\n//     world.addBody(pendulumBody);\n//     wheelBody = new p2.Body({\n//         mass: 1,\n//         position: [0,1]\n//     });\n//     wheelBody.addShape(new p2.Circle({ radius: 0.6 }));\n//     world.addBody(wheelBody);\n//     var wheelJoint = new p2.RevoluteConstraint(wheelBody, pendulumBody, {\n//         localPivotA: [0, 0],\n//         localPivotB: [0, -0.5 * PENDULUM_LENGTH],\n//         collideConnected: false\n//     });\n//     world.addConstraint(wheelJoint);\n//     wheelJoint.motorEnabled = true;\n//     var m = 40;\n//     wheelJoint.motorEquation.maxForce = m;\n//     wheelJoint.motorEquation.minForce = -m;\n//     // Create ground\n//     var groundShape = new p2.Plane();\n//     var groundBody = new p2.Body({\n//         position:[0,0],\n//     });\n//     groundBody.addShape(groundShape);\n//     world.addBody(groundBody);\n//     world.on('postStep', function(){\n//         var targetAngle = 0;\n//         if ( true ) {\n//             var alpha = 0.4;\n//             posAvg = (1 - alpha) * posAvg + alpha * pendulumBody.position[0];\n//             positionController.currentError = targetPosition - posAvg;\n//             positionController.step(world.lastTimeStep);\n//             var targetLinAccel = positionController.output;\n//             targetLinAccel = clamp(targetLinAccel, -10.0, 10.0);\n//             targetAngle = targetLinAccel / world.gravity[1];\n//             targetAngle = clamp(targetAngle, -15 * DEGTORAD, 15 * DEGTORAD);\n//         }\n//         var currentAngle = pendulumBody.angle;\n//         currentAngle = normalizeAngle(currentAngle);\n//         angleController.currentError = ( targetAngle - currentAngle );\n//         angleController.step(world.lastTimeStep);\n//         var targetSpeed = angleController.output;\n//         // give up if speed required is really high\n//         if ( Math.abs(targetSpeed) > 1000 )\n//             targetSpeed = 0;\n//         // this is the only output\n//         var targetAngularVelocity = -targetSpeed / (2 * Math.PI * wheelBody.shapes[0].radius); // wheel circumference = 2*pi*r\n//         wheelJoint.motorSpeed = targetAngularVelocity;\n//     });\n//     app.frame(3,5,16,16);\n// });\n// /*\n//     Simple PID controller for single float variable\n//     http://en.wikipedia.org/wiki/PID_controller#Pseudocode\n// */\n// function PIDController(){\n//     this.gainP = 1;\n//     this.gainI = 1;\n//     this.gainD = 1;\n//     this.currentError = 0;\n//     this.previousError = 0;\n//     this.integral = 0;\n//     this.output = 0;\n// }\n// PIDController.prototype.step = function(dt) {\n//     this.integral = dt * (this.integral + this.currentError);\n//     var derivative = (1 / dt) * (this.currentError - this.previousError);\n//     this.output = this.gainP * this.currentError + this.gainI * this.integral + this.gainD * derivative;\n//     this.previousError = this.currentError;\n// };\n// function clamp(num, min, max) {\n//     return Math.min(Math.max(num, min), max);\n// };\nfunction normalizeAngle(angle: number): number {\n    while (angle > b2.DegToRad( 180)) { angle -= b2.DegToRad(360); }\n    while (angle < b2.DegToRad(-180)) { angle += b2.DegToRad(360); }\n    return angle;\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Segway\", Segway.Create);\n","/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class BuoyancyTest extends testbed.Test {\n  public m_bodies: b2.Body[];\n  public m_controller: b2.BuoyancyController;\n\n  constructor() {\n    super();\n\n    this.m_bodies = new Array();\n\n    const bc = new b2.BuoyancyController();\n    this.m_controller = bc;\n\n    bc.normal.Set(0.0, 1.0);\n    bc.offset = 20.0;\n    bc.density = 2.0;\n    bc.linearDrag = 5.0;\n    bc.angularDrag = 2.0;\n\n    const ground = this.m_world.CreateBody(new b2.BodyDef());\n\n    {\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(40.0, 0.0));\n      ground.CreateFixture(shape, 0.0);\n      shape.SetTwoSided(new b2.Vec2(-40.0, 0.0), new b2.Vec2(-40.0, 25.0));\n      ground.CreateFixture(shape, 0.0);\n      shape.SetTwoSided(new b2.Vec2(40.0, 0.0), new b2.Vec2(40.0, 25.0));\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Spawn in a bunch of crap\n    {\n      for (let i = 0; i < 5; i++) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        //bd.isBullet = true;\n        bd.position.Set(Math.random() * 40.0 - 20.0, Math.random() * 15.0 + 5.0);\n        bd.angle = Math.random() * Math.PI;\n        const body = this.m_world.CreateBody(bd);\n\n        const fd = new b2.FixtureDef();\n        fd.density = 1.0;\n        // Override the default friction.\n        fd.friction = 0.3;\n        fd.restitution = 0.1;\n        const polygon = new b2.PolygonShape();\n        fd.shape = polygon;\n        polygon.SetAsBox(Math.random() * 0.5 + 1.0, Math.random() * 0.5 + 1.0);\n        body.CreateFixture(fd);\n\n        this.m_bodies.push(body);\n      }\n    }\n\n    {\n      for (let i = 0; i < 5; i++) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        //bd.isBullet = true;\n        bd.position.Set(Math.random() * 40.0 - 20.0, Math.random() * 15.0 + 5.0);\n        bd.angle = Math.random() * Math.PI;\n        const body = this.m_world.CreateBody(bd);\n\n        const fd = new b2.FixtureDef();\n        fd.density = 1.0;\n        // Override the default friction.\n        fd.friction = 0.3;\n        fd.restitution = 0.1;\n        fd.shape = new b2.CircleShape(Math.random() * 0.5 + 1.0);\n        body.CreateFixture(fd);\n\n        this.m_bodies.push(body);\n      }\n    }\n\n    {\n      for (let i = 0; i < 15; i++) {\n        const bd = new b2.BodyDef();\n        bd.type = b2.BodyType.b2_dynamicBody;\n        //bd.isBullet = true;\n        bd.position.Set(Math.random() * 40.0 - 20.0, Math.random() * 15.0 + 5.0);\n        bd.angle = Math.random() * Math.PI;\n        const body = this.m_world.CreateBody(bd);\n\n        const fd = new b2.FixtureDef();\n        fd.density = 1.0;\n        fd.friction = 0.3;\n        fd.restitution = 0.1;\n        const polygon = new b2.PolygonShape();\n        fd.shape = polygon;\n        if (Math.random() > 0.66) {\n          polygon.Set([\n            new b2.Vec2(-1.0 - Math.random() * 1.0, 1.0 + Math.random() * 1.0),\n            new b2.Vec2(-0.5 - Math.random() * 1.0, -1.0 - Math.random() * 1.0),\n            new b2.Vec2(0.5 + Math.random() * 1.0, -1.0 - Math.random() * 1.0),\n            new b2.Vec2(1.0 + Math.random() * 1.0, 1.0 + Math.random() * 1.0),\n          ]);\n        } else if (Math.random() > 0.5) {\n          const array = [];\n          array[0] = new b2.Vec2(0.0, 1.0 + Math.random() * 1.0);\n          array[2] = new b2.Vec2(-0.5 - Math.random() * 1.0, -1.0 - Math.random() * 1.0);\n          array[3] = new b2.Vec2(0.5 + Math.random() * 1.0, -1.0 - Math.random() * 1.0);\n          array[1] = new b2.Vec2((array[0].x + array[2].x), (array[0].y + array[2].y));\n          array[1].SelfMul(Math.random() / 2 + 0.8);\n          array[4] = new b2.Vec2((array[3].x + array[0].x), (array[3].y + array[0].y));\n          array[4].SelfMul(Math.random() / 2 + 0.8);\n          polygon.Set(array);\n        } else {\n          polygon.Set([\n            new b2.Vec2(0.0, 1.0 + Math.random() * 1.0),\n            new b2.Vec2(-0.5 - Math.random() * 1.0, -1.0 - Math.random() * 1.0),\n            new b2.Vec2(0.5 + Math.random() * 1.0, -1.0 - Math.random() * 1.0),\n          ]);\n        }\n        body.CreateFixture(fd);\n\n        this.m_bodies.push(body);\n      }\n    }\n\n    //Add some exciting bath toys\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 40.0);\n      bd.angle = 0;\n      const body = this.m_world.CreateBody(bd);\n\n      const fd = new b2.FixtureDef();\n      fd.density = 3.0;\n      const polygon = new b2.PolygonShape();\n      fd.shape = polygon;\n      polygon.SetAsBox(4.0, 1.0);\n      body.CreateFixture(fd);\n\n      this.m_bodies.push(body);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.position.Set(0.0, 30.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const fd = new b2.FixtureDef();\n      fd.density = 2.0;\n      const circle = new b2.CircleShape(0.7);\n      fd.shape = circle;\n      circle.m_p.Set(3.0, 0.0);\n      body.CreateFixture(fd);\n      circle.m_p.Set(-3.0, 0.0);\n      body.CreateFixture(fd);\n      circle.m_p.Set(0.0, 3.0);\n      body.CreateFixture(fd);\n      circle.m_p.Set(0.0, -3.0);\n      body.CreateFixture(fd);\n\n      fd.density = 2.0;\n      const polygon = new b2.PolygonShape();\n      fd.shape = polygon;\n      polygon.SetAsBox(3.0, 0.2);\n      body.CreateFixture(fd);\n      polygon.SetAsBox(0.2, 3.0);\n      body.CreateFixture(fd);\n\n      this.m_bodies.push(body);\n    }\n\n    // if (b2.DEBUG) {\n    //   for (let body_i = 0; i < this.m_bodies.length; ++i)\n    //     this.m_controller.AddBody(this.m_bodies[body_i]);\n    //   for (let body_i = 0; i < this.m_bodies.length; ++i)\n    //     this.m_controller.RemoveBody(this.m_bodies[body_i]);\n    // }\n    for (let body_i = 0; body_i < this.m_bodies.length; ++body_i) {\n      this.m_controller.AddBody(this.m_bodies[body_i]);\n    }\n    // if (b2.DEBUG) {\n    //   this.m_world.AddController(this.m_controller);\n    //   this.m_world.RemoveController(this.m_controller);\n    // }\n    this.m_world.AddController(this.m_controller);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n  }\n\n  public static Create(): testbed.Test {\n    return new BuoyancyTest();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Extras\", \"Buoyancy Test\", BuoyancyTest.Create);\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/**\n * Test the behavior of particles falling onto a concave\n * ambiguous Body contact fixture junction.\n */\n\nexport class AntiPointy extends testbed.Test {\n  public m_particlesToCreate = 300;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      // Construct a valley out of many polygons to ensure there's no\n      // issue with particles falling directly on an ambiguous set of\n      // fixture corners.\n\n      const step = 1.0;\n\n      for (let i = -10.0; i < 10.0; i += step) {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(i, -10.0),\n          new b2.Vec2(i + step, -10.0),\n          new b2.Vec2(0.0, 15.0),\n        ];\n        shape.Set(vertices, 3);\n        ground.CreateFixture(shape, 0.0);\n      }\n      for (let i = -10.0; i < 35.0; i += step) {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-10.0, i),\n          new b2.Vec2(-10.0, i + step),\n          new b2.Vec2(0.0, 15.0),\n        ];\n        shape.Set(vertices, 3);\n        ground.CreateFixture(shape, 0.0);\n\n        const vertices2 = [\n          new b2.Vec2(10.0, i),\n          new b2.Vec2(10.0, i + step),\n          new b2.Vec2(0.0, 15.0),\n        ];\n        shape.Set(vertices2, 3);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    // Cap the number of generated particles or we'll fill forever\n    this.m_particlesToCreate = 300;\n\n    this.m_particleSystem.SetRadius(0.25 * 2); // HACK: increase particle radius\n    const particleType = testbed.Test.GetParticleParameterValue();\n    if (particleType === b2.ParticleFlag.b2_waterParticle) {\n      this.m_particleSystem.SetDamping(0.2);\n    }\n  }\n\n  public Step(settings: testbed.Settings) {\n    super.Step(settings);\n\n    if (this.m_particlesToCreate <= 0) {\n      return;\n    }\n\n    --this.m_particlesToCreate;\n\n    const flags = testbed.Test.GetParticleParameterValue();\n    const pd = new b2.ParticleDef();\n\n    pd.position.Set(0.0, 40.0);\n    pd.velocity.Set(0.0, -1.0);\n    pd.flags = flags;\n\n    if (flags & (b2.ParticleFlag.b2_springParticle | b2.ParticleFlag.b2_elasticParticle)) {\n      const count = this.m_particleSystem.GetParticleCount();\n      pd.velocity.Set(count & 1 ? -1.0 : 1.0, -5.0);\n      pd.flags |= b2.ParticleFlag.b2_reactiveParticle;\n    }\n\n    this.m_particleSystem.CreateParticle(pd);\n  }\n\n  public static Create() {\n    return new AntiPointy();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"AntiPointy\", AntiPointy.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class CornerCase extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      // Construct a pathological corner intersection out of many\n      // polygons to ensure there's no issue with particle oscillation\n      // from many fixture contact impulses at the corner\n\n      // left edge\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-20.0, 30.0),\n          new b2.Vec2(-20.0, 0.0),\n          new b2.Vec2(-25.0, 0.0),\n          new b2.Vec2(-25.0, 30.0),\n        ];\n        shape.Set(vertices);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      const yrange = 30.0,\n        ystep = yrange / 10.0,\n        xrange = 20.0,\n        xstep = xrange / 2.0;\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-25.0, 0.0),\n          new b2.Vec2(20.0, 15.0),\n          new b2.Vec2(25.0, 0.0),\n        ];\n        shape.Set(vertices);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      for (let x = -xrange; x < xrange; x += xstep) {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-25.0, 0.0),\n          new b2.Vec2(x, 15.0),\n          new b2.Vec2(x + xstep, 15.0),\n        ];\n        shape.Set(vertices);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      for (let y = 0.0; y < yrange; y += ystep) {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(25.0, y),\n          new b2.Vec2(25.0, y + ystep),\n          new b2.Vec2(20.0, 15.0),\n        ];\n        shape.Set(vertices);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n    }\n\n    this.m_particleSystem.SetRadius(1.0);\n    const particleType = testbed.Test.GetParticleParameterValue();\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 35);\n      shape.m_radius = 12;\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = particleType;\n      pd.shape = shape;\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n  }\n  public static Create() {\n    return new CornerCase();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Corner Case\", CornerCase.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class DamBreak extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.ChainShape();\n      const vertices = [\n        new b2.Vec2(-2, 0),\n        new b2.Vec2(2, 0),\n        new b2.Vec2(2, 4),\n        new b2.Vec2(-2, 4),\n      ];\n      shape.CreateLoop(vertices);\n      ground.CreateFixture(shape, 0.0);\n\n    }\n\n    this.m_particleSystem.SetRadius(0.025 * 2); // HACK: increase particle radius\n    this.m_particleSystem.SetDamping(0.2);\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.8, 1.0, new b2.Vec2(-1.2, 1.01), 0);\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = testbed.Test.GetParticleParameterValue();\n      pd.shape = shape;\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new DamBreak();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Dam Break\", DamBreak.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class DrawingParticles extends testbed.Test {\n  /**\n   * Set bit 31 to distiguish these values from particle flags.\n   */\n  public static readonly Parameters = {\n    e_parameterBegin: (1 << 31), // Start of this parameter namespace.\n    e_parameterMove: (1 << 31) | (1 << 0),\n    e_parameterRigid: (1 << 31) | (1 << 1),\n    e_parameterRigidBarrier: (1 << 31) | (1 << 2),\n    e_parameterElasticBarrier: (1 << 31) | (1 << 3),\n    e_parameterSpringBarrier: (1 << 31) | (1 << 4),\n    e_parameterRepulsive: (1 << 31) | (1 << 5),\n  };\n\n  public m_lastGroup: b2.ParticleGroup | null;\n  public m_drawing = true;\n  public m_particleFlags = 0;\n  public m_groupFlags = 0;\n  public m_colorIndex = 0;\n\n  public static readonly k_paramValues = [\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_zombieParticle, testbed.ParticleParameter.k_DefaultOptions, \"erase\"),\n    new testbed.ParticleParameterValue(DrawingParticles.Parameters.e_parameterMove, testbed.ParticleParameter.k_DefaultOptions, \"move\"),\n    new testbed.ParticleParameterValue(DrawingParticles.Parameters.e_parameterRigid, testbed.ParticleParameter.k_DefaultOptions, \"rigid\"),\n    new testbed.ParticleParameterValue(DrawingParticles.Parameters.e_parameterRigidBarrier, testbed.ParticleParameter.k_DefaultOptions, \"rigid barrier\"),\n    new testbed.ParticleParameterValue(DrawingParticles.Parameters.e_parameterElasticBarrier, testbed.ParticleParameter.k_DefaultOptions, \"elastic barrier\"),\n    new testbed.ParticleParameterValue(DrawingParticles.Parameters.e_parameterSpringBarrier, testbed.ParticleParameter.k_DefaultOptions, \"spring barrier\"),\n    new testbed.ParticleParameterValue(DrawingParticles.Parameters.e_parameterRepulsive, testbed.ParticleParameter.k_DefaultOptions, \"repulsive wall\"),\n  ];\n\n  public static readonly k_paramDef = [\n    new testbed.ParticleParameterDefinition(testbed.ParticleParameter.k_particleTypes),\n    new testbed.ParticleParameterDefinition(DrawingParticles.k_paramValues),\n  ];\n  public static readonly k_paramDefCount = DrawingParticles.k_paramDef.length;\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -2),\n          new b2.Vec2(4, -2),\n          new b2.Vec2(4, 0),\n          new b2.Vec2(-4, 0),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -2),\n          new b2.Vec2(-2, -2),\n          new b2.Vec2(-2, 6),\n          new b2.Vec2(-4, 6),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(2, -2),\n          new b2.Vec2(4, -2),\n          new b2.Vec2(4, 6),\n          new b2.Vec2(2, 6),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, 4),\n          new b2.Vec2(4, 4),\n          new b2.Vec2(4, 6),\n          new b2.Vec2(-4, 6),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_colorIndex = 0;\n    this.m_particleSystem.SetRadius(0.05 * 2);\n    this.m_lastGroup = null;\n    this.m_drawing = true;\n\n    // DEBUG: b2.Assert((DrawingParticles.k_paramDef[0].CalculateValueMask() & DrawingParticles.Parameters.e_parameterBegin) === 0);\n    testbed.Test.SetParticleParameters(DrawingParticles.k_paramDef, DrawingParticles.k_paramDefCount);\n    testbed.Test.SetRestartOnParticleParameterChange(false);\n\n    this.m_particleFlags = testbed.Test.GetParticleParameterValue();\n    this.m_groupFlags = 0;\n  }\n\n  // Determine the current particle parameter from the drawing state and\n  // group flags.\n  public DetermineParticleParameter() {\n    if (this.m_drawing) {\n      if (this.m_groupFlags === (b2.ParticleGroupFlag.b2_rigidParticleGroup | b2.ParticleGroupFlag.b2_solidParticleGroup)) {\n        return DrawingParticles.Parameters.e_parameterRigid;\n      }\n      if (this.m_groupFlags === b2.ParticleGroupFlag.b2_rigidParticleGroup && this.m_particleFlags === b2.ParticleFlag.b2_barrierParticle) {\n        return DrawingParticles.Parameters.e_parameterRigidBarrier;\n      }\n      if (this.m_particleFlags === (b2.ParticleFlag.b2_elasticParticle | b2.ParticleFlag.b2_barrierParticle)) {\n        return DrawingParticles.Parameters.e_parameterElasticBarrier;\n      }\n      if (this.m_particleFlags === (b2.ParticleFlag.b2_springParticle | b2.ParticleFlag.b2_barrierParticle)) {\n        return DrawingParticles.Parameters.e_parameterSpringBarrier;\n      }\n      if (this.m_particleFlags === (b2.ParticleFlag.b2_wallParticle | b2.ParticleFlag.b2_repulsiveParticle)) {\n        return DrawingParticles.Parameters.e_parameterRepulsive;\n      }\n      return this.m_particleFlags;\n    }\n    return DrawingParticles.Parameters.e_parameterMove;\n  }\n\n  public Keyboard(key: string) {\n    this.m_drawing = key !== \"x\";\n    this.m_particleFlags = 0;\n    this.m_groupFlags = 0;\n    switch (key) {\n      case \"e\":\n        this.m_particleFlags = b2.ParticleFlag.b2_elasticParticle;\n        this.m_groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n        break;\n      case \"p\":\n        this.m_particleFlags = b2.ParticleFlag.b2_powderParticle;\n        break;\n      case \"r\":\n        this.m_groupFlags = b2.ParticleGroupFlag.b2_rigidParticleGroup | b2.ParticleGroupFlag.b2_solidParticleGroup;\n        break;\n      case \"s\":\n        this.m_particleFlags = b2.ParticleFlag.b2_springParticle;\n        this.m_groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n        break;\n      case \"t\":\n        this.m_particleFlags = b2.ParticleFlag.b2_tensileParticle;\n        break;\n      case \"v\":\n        this.m_particleFlags = b2.ParticleFlag.b2_viscousParticle;\n        break;\n      case \"w\":\n        this.m_particleFlags = b2.ParticleFlag.b2_wallParticle;\n        this.m_groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n        break;\n      case \"b\":\n        this.m_particleFlags = b2.ParticleFlag.b2_barrierParticle | b2.ParticleFlag.b2_wallParticle;\n        break;\n      case \"h\":\n        this.m_particleFlags = b2.ParticleFlag.b2_barrierParticle;\n        this.m_groupFlags = b2.ParticleGroupFlag.b2_rigidParticleGroup;\n        break;\n      case \"n\":\n        this.m_particleFlags = b2.ParticleFlag.b2_barrierParticle | b2.ParticleFlag.b2_elasticParticle;\n        this.m_groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n        break;\n      case \"m\":\n        this.m_particleFlags = b2.ParticleFlag.b2_barrierParticle | b2.ParticleFlag.b2_springParticle;\n        this.m_groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n        break;\n      case \"f\":\n        this.m_particleFlags = b2.ParticleFlag.b2_wallParticle | b2.ParticleFlag.b2_repulsiveParticle;\n        break;\n      case \"c\":\n        this.m_particleFlags = b2.ParticleFlag.b2_colorMixingParticle;\n        break;\n      case \"z\":\n        this.m_particleFlags = b2.ParticleFlag.b2_zombieParticle;\n        break;\n      default:\n        break;\n    }\n    testbed.Test.SetParticleParameterValue(this.DetermineParticleParameter());\n  }\n\n  public MouseMove(p: b2.Vec2) {\n    super.MouseMove(p);\n    if (this.m_drawing) {\n      const shape = new b2.CircleShape();\n      shape.m_p.Copy(p);\n      shape.m_radius = 0.2;\n      ///  b2Transform xf;\n      ///  xf.SetIdentity();\n      const xf = b2.Transform.IDENTITY;\n\n      this.m_particleSystem.DestroyParticlesInShape(shape, xf);\n\n      const joinGroup = this.m_lastGroup && this.m_groupFlags === this.m_lastGroup.GetGroupFlags();\n      if (!joinGroup) {\n        this.m_colorIndex = (this.m_colorIndex + 1) % testbed.Test.k_ParticleColorsCount;\n      }\n      const pd = new b2.ParticleGroupDef();\n      pd.shape = shape;\n      pd.flags = this.m_particleFlags;\n      if ((this.m_particleFlags & (b2.ParticleFlag.b2_wallParticle | b2.ParticleFlag.b2_springParticle | b2.ParticleFlag.b2_elasticParticle)) ||\n        (this.m_particleFlags === (b2.ParticleFlag.b2_wallParticle | b2.ParticleFlag.b2_barrierParticle))) {\n        pd.flags |= b2.ParticleFlag.b2_reactiveParticle;\n      }\n      pd.groupFlags = this.m_groupFlags;\n      pd.color.Copy(testbed.Test.k_ParticleColors[this.m_colorIndex]);\n      pd.group = this.m_lastGroup;\n      this.m_lastGroup = this.m_particleSystem.CreateParticleGroup(pd);\n      this.m_mouseTracing = false;\n    }\n  }\n\n  public MouseUp(p: b2.Vec2) {\n    super.MouseUp(p);\n    this.m_lastGroup = null;\n  }\n\n  public ParticleGroupDestroyed(group: b2.ParticleGroup) {\n    super.ParticleGroupDestroyed(group);\n    if (group === this.m_lastGroup) {\n      this.m_lastGroup = null;\n    }\n  }\n\n  public SplitParticleGroups() {\n    for (let group = this.m_particleSystem.GetParticleGroupList(); group; group = group.GetNext()) {\n      if (group !== this.m_lastGroup &&\n        (group.GetGroupFlags() & b2.ParticleGroupFlag.b2_rigidParticleGroup) &&\n        (group.GetAllParticleFlags() & b2.ParticleFlag.b2_zombieParticle)) {\n        // Split a rigid particle group which may be disconnected\n        // by destroying particles.\n        this.m_particleSystem.SplitParticleGroup(group);\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings) {\n    const parameterValue = testbed.Test.GetParticleParameterValue();\n    this.m_drawing = (parameterValue & DrawingParticles.Parameters.e_parameterMove) !== DrawingParticles.Parameters.e_parameterMove;\n    if (this.m_drawing) {\n      switch (parameterValue) {\n        case b2.ParticleFlag.b2_elasticParticle:\n        case b2.ParticleFlag.b2_springParticle:\n        case b2.ParticleFlag.b2_wallParticle:\n          this.m_particleFlags = parameterValue;\n          this.m_groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n          break;\n        case DrawingParticles.Parameters.e_parameterRigid:\n          // b2_waterParticle is the default particle type in\n          // LiquidFun.\n          this.m_particleFlags = b2.ParticleFlag.b2_waterParticle;\n          this.m_groupFlags = b2.ParticleGroupFlag.b2_rigidParticleGroup | b2.ParticleGroupFlag.b2_solidParticleGroup;\n          break;\n        case DrawingParticles.Parameters.e_parameterRigidBarrier:\n          this.m_particleFlags = b2.ParticleFlag.b2_barrierParticle;\n          this.m_groupFlags = b2.ParticleGroupFlag.b2_rigidParticleGroup;\n          break;\n        case DrawingParticles.Parameters.e_parameterElasticBarrier:\n          this.m_particleFlags = b2.ParticleFlag.b2_barrierParticle | b2.ParticleFlag.b2_elasticParticle;\n          this.m_groupFlags = 0;\n          break;\n        case DrawingParticles.Parameters.e_parameterSpringBarrier:\n          this.m_particleFlags = b2.ParticleFlag.b2_barrierParticle | b2.ParticleFlag.b2_springParticle;\n          this.m_groupFlags = 0;\n          break;\n        case DrawingParticles.Parameters.e_parameterRepulsive:\n          this.m_particleFlags = b2.ParticleFlag.b2_repulsiveParticle | b2.ParticleFlag.b2_wallParticle;\n          this.m_groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n          break;\n        default:\n          this.m_particleFlags = parameterValue;\n          this.m_groupFlags = 0;\n          break;\n      }\n    }\n\n    if (this.m_particleSystem.GetAllParticleFlags() & b2.ParticleFlag.b2_zombieParticle) {\n      this.SplitParticleGroups();\n    }\n\n    super.Step(settings);\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Keys: (L) liquid, (E) elastic, (S) spring\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"(R) rigid, (W) wall, (V) viscous, (T) tensile\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"(F) repulsive wall, (B) wall barrier\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"(H) rigid barrier, (N) elastic barrier, (M) spring barrier\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"(C) color mixing, (Z) erase, (X) move\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new DrawingParticles();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Drawing Particles\", DrawingParticles.Create);\n\n// #endif\n","/*\n * Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ElasticParticles extends testbed.Test {\n  constructor() {\n    super();\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -1),\n          new b2.Vec2(4, -1),\n          new b2.Vec2(4, 0),\n          new b2.Vec2(-4, 0),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -0.1),\n          new b2.Vec2(-2, -0.1),\n          new b2.Vec2(-2, 2),\n          new b2.Vec2(-4, 2),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(2, -0.1),\n          new b2.Vec2(4, -0.1),\n          new b2.Vec2(4, 2),\n          new b2.Vec2(2, 2),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.035 * 2); // HACK: increase particle radius\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 3);\n      shape.m_radius = 0.5;\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = b2.ParticleFlag.b2_springParticle;\n      pd.groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n      pd.shape = shape;\n      pd.color.Set(1, 0, 0, 1);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(-1, 3);\n      shape.m_radius = 0.5;\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = b2.ParticleFlag.b2_elasticParticle;\n      pd.groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n      pd.shape = shape;\n      pd.color.Set(0, 1, 0, 1);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(1, 0.5);\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = b2.ParticleFlag.b2_elasticParticle;\n      pd.groupFlags = b2.ParticleGroupFlag.b2_solidParticleGroup;\n      pd.position.Set(1, 4);\n      pd.angle = -0.5;\n      pd.angularVelocity = 2.0;\n      pd.shape = shape;\n      pd.color.Set(0, 0, 1, 1);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 8);\n      shape.m_radius = 0.5;\n      body.CreateFixture(shape, 0.5);\n    }\n  }\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n  public static Create() {\n    return new ElasticParticles();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Elastic Particles\", ElasticParticles.Create);\n\n// #endif\n","// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class EyeCandy extends testbed.Test {\n  public m_mover: b2.Body;\n  public m_joint: b2.RevoluteJoint;\n\n  constructor() {\n    super();\n\n    this.m_particleSystem.SetDamping(0.2);\n    this.m_particleSystem.SetRadius(0.3 * 2);\n    this.m_particleSystem.SetGravityScale(0.4);\n    this.m_particleSystem.SetDensity(1.2);\n\n    const bdg = new b2.BodyDef();\n    const ground = this.m_world.CreateBody(bdg);\n\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_staticBody; //b2.BodyType.b2_dynamicBody;\n    bd.allowSleep = false;\n    bd.position.Set(0.0, 0.0);\n    const body = this.m_world.CreateBody(bd);\n\n    const shape = new b2.PolygonShape();\n    shape.SetAsBox(0.5, 10.0, new b2.Vec2(20.0, 0.0), 0.0);\n    body.CreateFixture(shape, 5.0);\n    shape.SetAsBox(0.5, 10.0, new b2.Vec2(-20.0, 0.0), 0.0);\n    body.CreateFixture(shape, 5.0);\n    shape.SetAsBox(0.5, 20.0, new b2.Vec2(0.0, 10.0), Math.PI / 2.0);\n    body.CreateFixture(shape, 5.0);\n    shape.SetAsBox(0.5, 20.0, new b2.Vec2(0.0, -10.0), Math.PI / 2.0);\n    body.CreateFixture(shape, 5.0);\n\n    bd.type = b2.BodyType.b2_dynamicBody;\n    bd.position.Set(0.0, 0.0);\n    this.m_mover = this.m_world.CreateBody(bd);\n    shape.SetAsBox(1.0, 5.0, new b2.Vec2(0.0, 2.0), 0.0);\n    this.m_mover.CreateFixture(shape, 5.0);\n\n    const jd = new b2.RevoluteJointDef();\n    jd.bodyA = ground;\n    jd.bodyB = this.m_mover;\n    jd.localAnchorA.Set(0.0, 0.0);\n    jd.localAnchorB.Set(0.0, 5.0);\n    jd.referenceAngle = 0.0;\n    jd.motorSpeed = 0;\n    jd.maxMotorTorque = 1e7;\n    jd.enableMotor = true;\n    this.m_joint = this.m_world.CreateJoint(jd);\n\n    const pd = new b2.ParticleGroupDef();\n    pd.flags = b2.ParticleFlag.b2_waterParticle;\n\n    const shape2 = new b2.PolygonShape();\n    shape2.SetAsBox(9.0, 9.0, new b2.Vec2(0.0, 0.0), 0.0);\n\n    pd.shape = shape2;\n    this.m_particleSystem.CreateParticleGroup(pd);\n  }\n\n  public Step(settings: testbed.Settings) {\n    const time = new Date().getTime();\n    this.m_joint.SetMotorSpeed(0.7 * Math.cos(time / 1000));\n\n    super.Step(settings);\n  }\n\n  public static Create() {\n    return new EyeCandy();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Eye Candy\", EyeCandy.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ParticleLifetimeRandomizer extends testbed.EmittedParticleCallback {\n  public m_minLifetime = 0.0;\n  public m_maxLifetime = 0.0;\n  constructor(minLifetime: number, maxLifetime: number) {\n    super();\n    this.m_minLifetime = minLifetime;\n    this.m_maxLifetime = maxLifetime;\n  }\n  /**\n   * Called for each created particle.\n   */\n  public ParticleCreated(system: b2.ParticleSystem, particleIndex: number): void {\n    system.SetParticleLifetime(particleIndex, Math.random() * (this.m_maxLifetime - this.m_minLifetime) + this.m_minLifetime);\n  }\n}\n\n/**\n * Faucet test creates a container from boxes and continually\n * spawning particles with finite lifetimes that pour into the\n * box.\n */\nexport class Faucet extends testbed.Test {\n  /**\n   * Used to cycle through particle colors.\n   */\n  public m_particleColorOffset = 0.0;\n  /**\n   * Particle emitter.\n   */\n  public m_emitter: testbed.RadialEmitter;\n  /**\n   * Callback which sets the lifetime of emitted particles.\n   */\n  public m_lifetimeRandomizer: ParticleLifetimeRandomizer;\n\n  /**\n   * Minimum lifetime of particles in seconds.\n   */\n  public static readonly k_particleLifetimeMin = 30.0;\n  /**\n   * Maximum lifetime of particles in seconds.\n   */\n  public static readonly k_particleLifetimeMax = 50.0;\n  /**\n   * Height of the container.\n   */\n  public static readonly k_containerHeight = 0.2;\n  /**\n   * Width of the container.\n   */\n  public static readonly k_containerWidth = 1.0;\n  /**\n   * Thickness of the container's walls and bottom.\n   */\n  public static readonly k_containerThickness = 0.05;\n  /**\n   * Width of the faucet relative to the container width.\n   */\n  public static readonly k_faucetWidth = 0.1;\n  /**\n   * Height of the faucet relative to the base as a fraction of\n   * the container height.\n   */\n  public static readonly k_faucetHeight = 15.0;\n  /**\n   * Length of the faucet as a fraction of the particle diameter.\n   */\n  public static readonly k_faucetLength = 2.0;\n  /**\n   * Spout height as a fraction of the faucet length.  This should\n   * be greater than 1.0f).\n   */\n  public static readonly k_spoutLength = 2.0;\n  /**\n   * Spout width as a fraction of the *faucet* width.  This should\n   * be greater than 1.0).\n   */\n  public static readonly k_spoutWidth = 1.1;\n  /**\n   * Maximum number of particles in the system.\n   */\n  public static readonly k_maxParticleCount = 1000;\n  /**\n   * Factor that is used to increase / decrease the emit rate.\n   * This should be greater than 1.0.\n   */\n  public static readonly k_emitRateChangeFactor = 1.05;\n  /**\n   * Minimum emit rate of the faucet in particles per second.\n   */\n  public static readonly k_emitRateMin = 1.0;\n  /**\n   * Maximum emit rate of the faucet in particles per second.\n   */\n  public static readonly k_emitRateMax = 240.0;\n\n  /**\n   * Selection of particle types for this test.\n   */\n  public static readonly k_paramValues: testbed.ParticleParameterValue[] = [\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, testbed.ParticleParameter.k_DefaultOptions, \"water\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, testbed.ParticleParameter.k_DefaultOptions | testbed.ParticleParameterOptions.OptionStrictContacts, \"water (strict)\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_viscousParticle, testbed.ParticleParameter.k_DefaultOptions, \"viscous\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_powderParticle, testbed.ParticleParameter.k_DefaultOptions, \"powder\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_tensileParticle, testbed.ParticleParameter.k_DefaultOptions, \"tensile\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_colorMixingParticle, testbed.ParticleParameter.k_DefaultOptions, \"color mixing\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_staticPressureParticle, testbed.ParticleParameter.k_DefaultOptions, \"static pressure\"),\n  ];\n  public static readonly k_paramDef: testbed.ParticleParameterDefinition[] = [\n    new testbed.ParticleParameterDefinition(Faucet.k_paramValues),\n  ];\n  public static readonly k_paramDefCount = Faucet.k_paramDef.length;\n\n  constructor() {\n    super(); // base class constructor\n\n    this.m_emitter = new testbed.RadialEmitter();\n    this.m_lifetimeRandomizer = new ParticleLifetimeRandomizer(Faucet.k_particleLifetimeMin, Faucet.k_particleLifetimeMax);\n\n    // Configure particle system parameters.\n    this.m_particleSystem.SetRadius(0.035);\n    this.m_particleSystem.SetMaxParticleCount(Faucet.k_maxParticleCount);\n    this.m_particleSystem.SetDestructionByAge(true);\n\n    let ground: b2.Body;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n    }\n\n    // Create the container / trough style sink.\n    {\n      const shape = new b2.PolygonShape();\n      const height = Faucet.k_containerHeight + Faucet.k_containerThickness;\n      shape.SetAsBox(Faucet.k_containerWidth - Faucet.k_containerThickness,\n        Faucet.k_containerThickness, new b2.Vec2(0.0, 0.0), 0.0);\n      ground.CreateFixture(shape, 0.0);\n      shape.SetAsBox(Faucet.k_containerThickness, height,\n        new b2.Vec2(-Faucet.k_containerWidth, Faucet.k_containerHeight), 0.0);\n      ground.CreateFixture(shape, 0.0);\n      shape.SetAsBox(Faucet.k_containerThickness, height,\n        new b2.Vec2(Faucet.k_containerWidth, Faucet.k_containerHeight), 0.0);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Create ground under the container to catch overflow.\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(Faucet.k_containerWidth * 5.0, Faucet.k_containerThickness,\n        new b2.Vec2(0.0, Faucet.k_containerThickness * -2.0), 0.0);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Create the faucet spout.\n    {\n      const shape = new b2.PolygonShape();\n      const particleDiameter =\n        this.m_particleSystem.GetRadius() * 2.0;\n      const faucetLength = Faucet.k_faucetLength * particleDiameter;\n      // Dimensions of the faucet in world units.\n      const length = faucetLength * Faucet.k_spoutLength;\n      const width = Faucet.k_containerWidth * Faucet.k_faucetWidth *\n        Faucet.k_spoutWidth;\n      // Height from the bottom of the container.\n      const height = (Faucet.k_containerHeight * Faucet.k_faucetHeight) +\n        (length * 0.5);\n\n      shape.SetAsBox(particleDiameter, length,\n        new b2.Vec2(-width, height), 0.0);\n      ground.CreateFixture(shape, 0.0);\n      shape.SetAsBox(particleDiameter, length,\n        new b2.Vec2(width, height), 0.0);\n      ground.CreateFixture(shape, 0.0);\n      shape.SetAsBox(width - particleDiameter, particleDiameter,\n        new b2.Vec2(0.0, height + length -\n          particleDiameter), 0.0);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Initialize the particle emitter.\n    {\n      const faucetLength = this.m_particleSystem.GetRadius() * 2.0 * Faucet.k_faucetLength;\n      this.m_emitter.SetParticleSystem(this.m_particleSystem);\n      this.m_emitter.SetCallback(this.m_lifetimeRandomizer);\n      this.m_emitter.SetPosition(new b2.Vec2(\n        Faucet.k_containerWidth * Faucet.k_faucetWidth,\n        Faucet.k_containerHeight * Faucet.k_faucetHeight + (faucetLength * 0.5)));\n      this.m_emitter.SetVelocity(new b2.Vec2(0.0, 0.0));\n      this.m_emitter.SetSize(new b2.Vec2(0.0, faucetLength));\n      this.m_emitter.SetColor(new b2.Color(1, 1, 1, 1));\n      this.m_emitter.SetEmitRate(120.0);\n      this.m_emitter.SetParticleFlags(testbed.Test.GetParticleParameterValue());\n    }\n\n    // Don't restart the test when changing particle types.\n    testbed.Test.SetRestartOnParticleParameterChange(false);\n    // Limit the set of particle types.\n    testbed.Test.SetParticleParameters(Faucet.k_paramDef, Faucet.k_paramDefCount);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    let dt = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n\n    if (settings.m_pause && !settings.m_singleStep) {\n      dt = 0.0;\n    }\n\n    super.Step(settings);\n    this.m_particleColorOffset += dt;\n    // Keep m_particleColorOffset in the range 0.0f..k_ParticleColorsCount.\n    if (this.m_particleColorOffset >= testbed.Test.k_ParticleColorsCount) {\n      this.m_particleColorOffset -= testbed.Test.k_ParticleColorsCount;\n    }\n\n    // Propagate the currently selected particle flags.\n    this.m_emitter.SetParticleFlags(testbed.Test.GetParticleParameterValue());\n\n    // If this is a color mixing particle, add some color.\n    ///  b2Color color(1, 1, 1, 1);\n    if (this.m_emitter.GetParticleFlags() & b2.ParticleFlag.b2_colorMixingParticle) {\n      // Each second, select a different color.\n      this.m_emitter.SetColor(testbed.Test.k_ParticleColors[Math.floor(this.m_particleColorOffset) % testbed.Test.k_ParticleColorsCount]);\n    } else {\n      this.m_emitter.SetColor(new b2.Color(1, 1, 1, 1));\n    }\n\n    // Create the particles.\n    this.m_emitter.Step(dt);\n\n    const k_keys = [\n      \"Keys: (w) water, (q) powder\",\n      \"      (t) tensile, (v) viscous\",\n      \"      (c) color mixing, (s) static pressure\",\n      \"      (+) increase flow, (-) decrease flow\",\n    ];\n    for (let i = 0; i < k_keys.length; ++i) {\n      testbed.g_debugDraw.DrawString(5, this.m_textLine, k_keys[i]);\n      this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    }\n  }\n\n  public Keyboard(key: string): void {\n    let parameter = 0;\n    switch (key) {\n      case \"w\":\n        parameter = b2.ParticleFlag.b2_waterParticle;\n        break;\n      case \"q\":\n        parameter = b2.ParticleFlag.b2_powderParticle;\n        break;\n      case \"t\":\n        parameter = b2.ParticleFlag.b2_tensileParticle;\n        break;\n      case \"v\":\n        parameter = b2.ParticleFlag.b2_viscousParticle;\n        break;\n      case \"c\":\n        parameter = b2.ParticleFlag.b2_colorMixingParticle;\n        break;\n      case \"s\":\n        parameter = b2.ParticleFlag.b2_staticPressureParticle;\n        break;\n      case \"=\":\n        ///if (this.m_shift)\n        {\n          let emitRate = this.m_emitter.GetEmitRate();\n          emitRate *= Faucet.k_emitRateChangeFactor;\n          emitRate = b2.Max(emitRate, Faucet.k_emitRateMin);\n          this.m_emitter.SetEmitRate(emitRate);\n        }\n        break;\n      case \"-\":\n        ///if (!this.shift)\n        {\n          let emitRate = this.m_emitter.GetEmitRate();\n          emitRate *= 1.0 / Faucet.k_emitRateChangeFactor;\n          emitRate = b2.Min(emitRate, Faucet.k_emitRateMax);\n          this.m_emitter.SetEmitRate(emitRate);\n        }\n        break;\n      default:\n        // Nothing.\n        return;\n    }\n    testbed.Test.SetParticleParameterValue(parameter);\n  }\n\n  public GetDefaultViewZoom(): number {\n    return 0.1;\n  }\n\n  /**\n   * Create the faucet test.\n   */\n  public static Create(): Faucet {\n    return new Faucet();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Faucet\", Faucet.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/**\n * Tracks instances of RadialEmitter and destroys them after a\n * specified period of time.\n */\nexport class EmitterTracker {\n  public m_emitterLifetime: Array<{ emitter: testbed.RadialEmitter, lifetime: number }> = [];\n\n  /**\n   * Delete all emitters.\n   */\n  public __dtor__() {\n    ///  for (std.map<RadialEmitter*, float32>.const_iterator it = m_emitterLifetime.begin(); it !== m_emitterLifetime.end(); ++it)\n    for (let it = 0; it < this.m_emitterLifetime.length; ++it) {\n      ///  delete it.first;\n      this.m_emitterLifetime[it].emitter.__dtor__();\n    }\n  }\n\n  /**\n   * Add an emitter to the tracker.\n   * This assumes emitter was allocated using \"new\" and ownership\n   * of the object is handed to this class.\n   */\n  public Add(emitter: testbed.RadialEmitter, lifetime: number): void {\n    ///  m_emitterLifetime[emitter] = lifetime;\n    this.m_emitterLifetime.push({ emitter, lifetime });\n  }\n\n  /**\n   * Update all emitters destroying those who are too old.\n   */\n  public Step(dt: number): void {\n    ///  std.vector<RadialEmitter*> emittersToDestroy;\n    const emittersToDestroy: testbed.RadialEmitter[] = [];\n    ///  for (std.map<RadialEmitter*, float32>.const_iterator it = m_emitterLifetime.begin(); it !== m_emitterLifetime.end(); ++it)\n    for (let it = 0; it < this.m_emitterLifetime.length; ++it) {\n      ///  RadialEmitter * const emitter = it.first;\n      const emitter = this.m_emitterLifetime[it].emitter;\n      ///  const float32 lifetime = it.second - dt;\n      const lifetime = this.m_emitterLifetime[it].lifetime - dt;\n      if (lifetime <= 0.0) {\n        emittersToDestroy.push(emitter);\n      }\n      ///  m_emitterLifetime[emitter] = lifetime;\n      this.m_emitterLifetime[it].lifetime = lifetime;\n\n      emitter.Step(dt);\n    }\n    ///  for (std.vector<RadialEmitter*>.const_iterator it = emittersToDestroy.begin(); it !== emittersToDestroy.end(); ++it)\n    for (let it = 0; it < emittersToDestroy.length; ++it) {\n      ///  RadialEmitter *emitter = *it;\n      const emitter = emittersToDestroy[it];\n      /// delete emitter;\n      emitter.__dtor__();\n      ///  m_emitterLifetime.erase(m_emitterLifetime.find(emitter));\n      this.m_emitterLifetime = this.m_emitterLifetime.filter((value) => {\n        return value.emitter !== emitter;\n      });\n    }\n  }\n}\n\n/**\n * Keep track of particle groups in a set, removing them when\n * they're destroyed.\n */\nexport class ParticleGroupTracker extends b2.DestructionListener {\n  public m_particleGroups: b2.ParticleGroup[] = [];\n\n  /**\n   * Called when any particle group is about to be destroyed.\n   */\n  public SayGoodbyeParticleGroup(group: b2.ParticleGroup): void {\n    this.RemoveParticleGroup(group);\n  }\n\n  /**\n   * Add a particle group to the tracker.\n   */\n  public AddParticleGroup(group: b2.ParticleGroup): void {\n    this.m_particleGroups.push(group);\n  }\n\n  /**\n   * Remove a particle group from the tracker.\n   */\n  public RemoveParticleGroup(group: b2.ParticleGroup): void {\n    this.m_particleGroups.splice(this.m_particleGroups.indexOf(group), 1);\n  }\n\n  public GetParticleGroups(): b2.ParticleGroup[] {\n    return this.m_particleGroups;\n  }\n}\n\nexport class FrackerSettings {\n  /**\n   * Width and height of the world in tiles.\n   */\n  public static readonly k_worldWidthTiles = 24;\n  public static readonly k_worldHeightTiles = 16;\n  /**\n   * Total number of tiles.\n   */\n  public static readonly k_worldTiles = FrackerSettings.k_worldWidthTiles * FrackerSettings.k_worldHeightTiles;\n  /**\n   * Center of the world in world coordinates.\n   */\n  public static readonly k_worldCenterX = 0.0;\n  public static readonly k_worldCenterY = 2.0;\n  /**\n   * Size of each tile in world units.\n   */\n  public static readonly k_tileWidth = 0.2;\n  public static readonly k_tileHeight = 0.2;\n  /**\n   * Half width and height of tiles in world units.\n   */\n  public static readonly k_tileHalfWidth = FrackerSettings.k_tileWidth * 0.5;\n  public static readonly k_tileHalfHeight = FrackerSettings.k_tileHeight * 0.5;\n  /**\n   * Half width and height of the world in world coordinates.\n   */\n  public static readonly k_worldHalfWidth = (FrackerSettings.k_worldWidthTiles * FrackerSettings.k_tileWidth) * 0.5;\n  public static readonly k_worldHalfHeight = (FrackerSettings.k_worldHeightTiles * FrackerSettings.k_tileHeight) * 0.5;\n\n  /**\n   * Colors of tiles.\n   */\n  public static readonly k_playerColor = new b2.Color(1.0, 1.0, 1.0);\n  public static readonly k_playerFrackColor = new b2.Color(1.0, 0.5, 0.5);\n  public static readonly k_wellColor = new b2.Color(0.5, 0.5, 0.5);\n  public static readonly k_oilColor = new b2.Color(1.0, 0.0, 0.0);\n  public static readonly k_waterColor = new b2.Color(0.0, 0.2, 1.0);\n  public static readonly k_frackingFluidColor = new b2.Color(0.8, 0.4, 0.0);\n\n  /**\n   * Default density of each body.\n   */\n  public static readonly k_density = 0.1;\n\n  /**\n   * Radius of oil / water / fracking fluid particles.\n   */\n  public static readonly k_particleRadius = ((FrackerSettings.k_tileWidth + FrackerSettings.k_tileHeight) * 0.5) * 0.2;\n\n  /**\n   * Probability (0..100%) of generating each tile (must sum to\n   * 1.0).\n   */\n  public static readonly k_dirtProbability = 80;\n  public static readonly k_emptyProbability = 10;\n  public static readonly k_oilProbability = 7;\n  public static readonly k_waterProbability = 3;\n\n  /**\n   * Lifetime of a fracking fluid emitter in seconds.\n   */\n  public static readonly k_frackingFluidEmitterLifetime = 5.0;\n\n  /**\n   * Speed particles are sucked up the well.\n   */\n  public static readonly k_wellSuckSpeedInside = FrackerSettings.k_tileHeight * 5.0;\n  /**\n   * Speed particle are sucket towards the well bottom.\n   */\n  public static readonly k_wellSuckSpeedOutside = FrackerSettings.k_tileWidth * 1.0;\n\n  /**\n   * Time mouse button must be held before emitting fracking\n   * fluid.\n   */\n  public static readonly k_frackingFluidChargeTime = 1.0;\n\n  /**\n   * Scores.\n   */\n  public static readonly k_scorePerOilParticle = 1;\n  public static readonly k_scorePerWaterParticle = -1;\n  public static readonly k_scorePerFrackingParticle = 0;\n  public static readonly k_scorePerFrackingDeployment = -10;\n}\n\n/**\n * Oil Fracking simulator.\n *\n * Dig down to move the oil (red) to the well (gray). Try not to\n * contaminate the ground water (blue). To deploy fracking fluid\n * press 'space'.  Fracking fluid can be used to push other\n * fluids to the well head and ultimately score points.\n */\nexport class Fracker extends testbed.Test {\n  public m_player!: b2.Body;\n  public m_wellX = FrackerSettings.k_worldWidthTiles - (FrackerSettings.k_worldWidthTiles / 4);\n  public m_wellTop = FrackerSettings.k_worldHeightTiles - 1;\n  public m_wellBottom = FrackerSettings.k_worldHeightTiles / 8;\n  public m_tracker: EmitterTracker = new EmitterTracker();\n  public m_allowInput = false;\n  public m_frackingFluidChargeTime = -1.0;\n  public m_material: Fracker_Material[] = [];\n  public m_bodies: Array<b2.Body | null> = [];\n  /**\n   * Set of particle groups the well has influence over.\n   */\n  public m_listener: Fracker_DestructionListener = new Fracker_DestructionListener(this.m_world);\n\n  constructor() {\n    super();\n\n    this.m_particleSystem.SetRadius(FrackerSettings.k_particleRadius);\n    this.InitializeLayout();\n    // Create the boundaries of the play area.\n    this.CreateGround();\n    // Create the well.\n    this.CreateWell();\n    // Create the geography / features (tiles of the world).\n    this.CreateGeo();\n    // Create the player.\n    this.CreatePlayer();\n  }\n\n  public __dtor__() {\n    this.m_listener.__dtor__();\n  }\n\n  /**\n   * Initialize the data structures used to track the material in\n   * each tile and the bodies associated with each tile.\n   */\n  public InitializeLayout(): void {\n    for (let i = 0; i < FrackerSettings.k_worldTiles; ++i) {\n      this.m_material[i] = Fracker_Material.EMPTY;\n      this.m_bodies[i] = null;\n    }\n  }\n\n  /**\n   * Get the material of the tile at the specified tile position.\n   */\n  public GetMaterial(x: number, y: number): Fracker_Material {\n    ///  return *const_cast<Fracker*>(this).GetMaterialStorage(x, y);\n    return this.m_material[Fracker.TileToArrayOffset(x, y)];\n  }\n\n  /**\n   * Set the material of the tile at the specified tile position.\n   */\n  public SetMaterial(x: number, y: number, material: Fracker_Material): void {\n    ///  *GetMaterialStorage(x, y) = material;\n    this.m_material[Fracker.TileToArrayOffset(x, y)] = material;\n  }\n\n  /**\n   * Get the body associated with the specified tile position.\n   */\n  public GetBody(x: number, y: number): b2.Body | null {\n    ///  return *const_cast<Fracker*>(this).GetBodyStorage(x, y);\n    return this.m_bodies[Fracker.TileToArrayOffset(x, y)];\n  }\n\n  /**\n   * Set the body associated with the specified tile position.\n   */\n  public SetBody(x: number, y: number, body: b2.Body | null): void {\n    ///  b2Body** const currentBody = GetBodyStorage(x, y);\n    const currentBody = this.m_bodies[Fracker.TileToArrayOffset(x, y)];\n    if (currentBody) {\n      this.m_world.DestroyBody(currentBody);\n    }\n    this.m_bodies[Fracker.TileToArrayOffset(x, y)] = body;\n  }\n\n  /**\n   * Create the player.\n   */\n  public CreatePlayer(): void {\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_kinematicBody;\n    this.m_player = this.m_world.CreateBody(bd);\n    const shape = new b2.PolygonShape();\n    shape.SetAsBox(FrackerSettings.k_tileHalfWidth,\n      FrackerSettings.k_tileHalfHeight,\n      new b2.Vec2(FrackerSettings.k_tileHalfWidth,\n        FrackerSettings.k_tileHalfHeight), 0);\n    this.m_player.CreateFixture(shape, FrackerSettings.k_density);\n    this.m_player.SetTransformVec(\n      Fracker.TileToWorld(\n        FrackerSettings.k_worldWidthTiles / 2,\n        FrackerSettings.k_worldHeightTiles / 2),\n      0);\n  }\n\n  /**\n   * Create the geography / features of the world.\n   */\n  public CreateGeo(): void {\n    // DEBUG: b2.Assert(FrackerSettings.k_dirtProbability +\n    // DEBUG:   FrackerSettings.k_emptyProbability +\n    // DEBUG:   FrackerSettings.k_oilProbability +\n    // DEBUG:   FrackerSettings.k_waterProbability === 100);\n    for (let x = 0; x < FrackerSettings.k_worldWidthTiles; x++) {\n      for (let y = 0; y < FrackerSettings.k_worldHeightTiles; y++) {\n        if (this.GetMaterial(x, y) !== Fracker_Material.EMPTY) {\n          continue;\n        }\n        // Choose a tile at random.\n        const chance = Math.random() * 100.0;\n        // Create dirt if this is the bottom row or chance dictates it.\n        if (chance < FrackerSettings.k_dirtProbability || y === 0) {\n          this.CreateDirtBlock(x, y);\n        } else if (chance < FrackerSettings.k_dirtProbability +\n          FrackerSettings.k_emptyProbability) {\n          this.SetMaterial(x, y, Fracker_Material.EMPTY);\n        } else if (chance < FrackerSettings.k_dirtProbability +\n          FrackerSettings.k_emptyProbability +\n          FrackerSettings.k_oilProbability) {\n          this.CreateReservoirBlock(x, y, Fracker_Material.OIL);\n        } else {\n          this.CreateReservoirBlock(x, y, Fracker_Material.WATER);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create the boundary of the world.\n   */\n  public CreateGround(): void {\n    const bd = new b2.BodyDef();\n    const ground = this.m_world.CreateBody(bd);\n    const shape = new b2.ChainShape();\n    const bottomLeft = new b2.Vec2(),\n      topRight = new b2.Vec2();\n    Fracker.GetExtents(bottomLeft, topRight);\n    const vertices = [\n      new b2.Vec2(bottomLeft.x, bottomLeft.y),\n      new b2.Vec2(topRight.x, bottomLeft.y),\n      new b2.Vec2(topRight.x, topRight.y),\n      new b2.Vec2(bottomLeft.x, topRight.y),\n    ];\n    shape.CreateLoop(vertices);\n    ground.CreateFixture(shape, 0.0);\n  }\n\n  /**\n   * Create a dirt block at the specified world position.\n   */\n  public CreateDirtBlock(x: number, y: number): void {\n    const position = Fracker.TileToWorld(x, y);\n    const bd = new b2.BodyDef();\n    const body = this.m_world.CreateBody(bd);\n    const shape = new b2.PolygonShape();\n    shape.SetAsBox(FrackerSettings.k_tileHalfWidth,\n      FrackerSettings.k_tileHalfHeight,\n      Fracker.CenteredPosition(position), 0);\n    body.CreateFixture(shape, FrackerSettings.k_density);\n    this.SetBody(x, y, body);\n    this.SetMaterial(x, y, Fracker_Material.DIRT);\n  }\n\n  /**\n   * Create particles in a tile with resources.\n   */\n  public CreateReservoirBlock(x: number, y: number, material: Fracker_Material): void {\n    const position = Fracker.TileToWorld(x, y);\n    const shape = new b2.PolygonShape();\n    this.SetMaterial(x, y, material);\n    shape.SetAsBox(FrackerSettings.k_tileHalfWidth,\n      FrackerSettings.k_tileHalfHeight,\n      Fracker.CenteredPosition(position), 0);\n    const pd = new b2.ParticleGroupDef();\n    pd.flags = b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_viscousParticle | b2.ParticleFlag.b2_destructionListenerParticle;\n    pd.shape = shape;\n    pd.color.Copy(material === Fracker_Material.OIL ?\n      FrackerSettings.k_oilColor : FrackerSettings.k_waterColor);\n    const group = this.m_particleSystem.CreateParticleGroup(pd);\n    this.m_listener.AddParticleGroup(group);\n\n    // Tag each particle with its type.\n    const particleCount = group.GetParticleCount();\n    ///  void** const userDataBuffer = m_particleSystem.GetUserDataBuffer() + group.GetBufferIndex();;\n    const userDataBuffer = this.m_particleSystem.GetUserDataBuffer();\n    const index = group.GetBufferIndex();\n    for (let i = 0; i < particleCount; ++i) {\n      ///  userDataBuffer[i] = GetMaterialStorage(x, y);\n      userDataBuffer[index + i] = this.m_material[Fracker.TileToArrayOffset(x, y)];\n    }\n    // Keep track of the total available oil.\n    if (material === Fracker_Material.OIL) {\n      this.m_listener.AddOil(particleCount);\n    }\n  }\n\n  /**\n   * Create a well and the region which applies negative pressure\n   * to suck out fluid.\n   */\n  public CreateWell(): void {\n    for (let y = this.m_wellBottom; y <= this.m_wellTop; y++) {\n      this.SetMaterial(this.m_wellX, y, Fracker_Material.WELL);\n    }\n  }\n\n  /**\n   * Create a fracking fluid emitter.\n   */\n  public CreateFrackingFluidEmitter(position: b2.Vec2): void {\n    const groupDef = new b2.ParticleGroupDef();\n    const group = this.m_particleSystem.CreateParticleGroup(groupDef);\n    this.m_listener.AddParticleGroup(group);\n    const emitter = new testbed.RadialEmitter();\n    emitter.SetGroup(group);\n    emitter.SetParticleSystem(this.m_particleSystem);\n    emitter.SetPosition(Fracker.CenteredPosition(position));\n    emitter.SetVelocity(new b2.Vec2(0.0, -FrackerSettings.k_tileHalfHeight));\n    emitter.SetSpeed(FrackerSettings.k_tileHalfWidth * 0.1);\n    emitter.SetSize(new b2.Vec2(FrackerSettings.k_tileHalfWidth,\n      FrackerSettings.k_tileHalfHeight));\n    emitter.SetEmitRate(20.0);\n    emitter.SetColor(FrackerSettings.k_frackingFluidColor);\n    emitter.SetParticleFlags(b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_viscousParticle);\n    this.m_tracker.Add(emitter, FrackerSettings.k_frackingFluidEmitterLifetime);\n    this.m_listener.AddScore(FrackerSettings.k_scorePerFrackingDeployment);\n  }\n\n  /**\n   * Update the player's position.\n   */\n  public SetPlayerPosition(playerX: number, playerY: number): void {\n    const playerPosition = this.m_player.GetTransform().p;\n    const currentPlayerX: [number] = [0];\n    const currentPlayerY: [number] = [0];\n    Fracker.WorldToTile(playerPosition, currentPlayerX, currentPlayerY);\n\n    playerX = b2.Clamp(playerX, 0, FrackerSettings.k_worldWidthTiles - 1);\n    playerY = b2.Clamp(playerY, 0, FrackerSettings.k_worldHeightTiles - 1);\n\n    // Only update if the player has moved and isn't attempting to\n    // move through the well.\n    if (this.GetMaterial(playerX, playerY) !== Fracker_Material.WELL &&\n      (currentPlayerX[0] !== playerX ||\n        currentPlayerY[0] !== playerY)) {\n      // Try to deploy any fracking fluid that was charging.\n      this.DeployFrackingFluid();\n      // Move the player.\n      this.m_player.SetTransformVec(Fracker.TileToWorld(playerX, playerY), 0);\n    }\n  }\n\n  /**\n   * Try to deploy fracking fluid at the player's position,\n   * returning true if successful.\n   */\n  public DeployFrackingFluid(): boolean {\n    let deployed = false;\n    const playerPosition = this.m_player.GetTransform().p;\n    if (this.m_frackingFluidChargeTime > FrackerSettings.k_frackingFluidChargeTime) {\n      this.CreateFrackingFluidEmitter(playerPosition);\n      deployed = true;\n    }\n    this.m_frackingFluidChargeTime = -1.0;\n    return deployed;\n  }\n\n  /**\n   * Destroy all particles in the box specified by a set of tile\n   * coordinates.\n   */\n  public DestroyParticlesInTiles(startX: number, startY: number, endX: number, endY: number): void {\n    const shape = new b2.PolygonShape();\n    const width = endX - startX + 1;\n    const height = endY - startY + 1;\n    const centerX = startX + width / 2;\n    const centerY = startY + height / 2;\n    shape.SetAsBox(\n      FrackerSettings.k_tileHalfWidth * width,\n      FrackerSettings.k_tileHalfHeight * height);\n    const killLocation = new b2.Transform();\n    killLocation.SetPositionAngle(Fracker.CenteredPosition(Fracker.TileToWorld(centerX, centerY)), 0);\n    this.m_particleSystem.DestroyParticlesInShape(shape, killLocation);\n  }\n\n  public JointDestroyed(joint: b2.Joint): void {\n    super.JointDestroyed(joint);\n  }\n\n  public ParticleGroupDestroyed(group: b2.ParticleGroup): void {\n    super.ParticleGroupDestroyed(group);\n  }\n\n  public BeginContact(contact: b2.Contact): void {\n    super.BeginContact(contact);\n  }\n\n  public EndContact(contact: b2.Contact): void {\n    super.EndContact(contact);\n  }\n\n  public PreSolve(contact: b2.Contact, oldManifold: b2.Manifold): void {\n    super.PreSolve(contact, oldManifold);\n  }\n\n  public PostSolve(contact: b2.Contact, impulse: b2.ContactImpulse): void {\n    super.PostSolve(contact, impulse);\n  }\n\n  /**\n   * a = left, d = right, a = up, s = down, e = deploy fracking\n   * fluid.\n   */\n  public Keyboard(key: string): void {\n    // Only allow 1 move per simulation step.\n    if (!this.m_allowInput) {\n      return;\n    }\n\n    const playerPosition = this.m_player.GetTransform().p;\n    const playerX: [number] = [0];\n    const playerY: [number] = [0];\n    Fracker.WorldToTile(playerPosition, playerX, playerY);\n    switch (key) {\n      case \"a\":\n        playerX[0]--;\n        break;\n      case \"s\":\n        playerY[0]--;\n        break;\n      case \"d\":\n        playerX[0]++;\n        break;\n      case \"w\":\n        playerY[0]++;\n        break;\n      case \"e\":\n        // Start charging the fracking fluid.\n        if (this.m_frackingFluidChargeTime < 0.0) {\n          this.m_frackingFluidChargeTime = 0.0;\n        } else {\n          // KeyboardUp() in freeglut (at least on OSX) is called\n          // repeatedly while a key is held.  This means there isn't\n          // a way for fracking fluid to be deployed when the user\n          // releases 'e'.  This works around the issue by attempting\n          // to deploy the fluid when 'e' is pressed again.\n          this.DeployFrackingFluid();\n        }\n        break;\n      default:\n        super.Keyboard(key);\n        break;\n    }\n    this.SetPlayerPosition(playerX[0], playerY[0]);\n    this.m_allowInput = false;\n  }\n\n  public KeyboardUp(key: string): void {\n    super.KeyboardUp(key);\n  }\n\n  public MouseDown(p: b2.Vec2): void {\n    super.MouseDown(p);\n    this.m_frackingFluidChargeTime = 0.0;\n  }\n\n  /**\n   * Try to deploy the fracking fluid or move the player.\n   */\n  public MouseUp(p: b2.Vec2): void {\n    super.MouseUp(p);\n    if (!this.m_allowInput) {\n      return;\n    }\n\n    // If fracking fluid isn't being released, move the player.\n    if (!this.DeployFrackingFluid()) {\n      const playerPosition = this.m_player.GetTransform().p;\n      const playerX: [number] = [0];\n      const playerY: [number] = [0];\n      Fracker.WorldToTile(playerPosition, playerX, playerY);\n      // Move the player towards the mouse position, preferring to move\n      // along the axis with the maximal distance from the cursor.\n      const distance = b2.Vec2.SubVV(p, Fracker.CenteredPosition(playerPosition), new b2.Vec2());\n      const absDistX = Math.abs(distance.x);\n      const absDistY = Math.abs(distance.y);\n      if (absDistX > absDistY &&\n        absDistX >= FrackerSettings.k_tileHalfWidth) {\n        playerX[0] += distance.x > 0.0 ? 1 : -1;\n      } else if (absDistY >= FrackerSettings.k_tileHalfWidth) {\n        playerY[0] += distance.y > 0.0 ? 1 : -1;\n      }\n      this.SetPlayerPosition(playerX[0], playerY[0]);\n    }\n    this.m_allowInput = false;\n  }\n\n  public MouseMove(p: b2.Vec2): void {\n    super.MouseMove(p);\n  }\n\n  public Step(settings: testbed.Settings): void {\n    let dt = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n    if (settings.m_pause && !settings.m_singleStep) {\n      dt = 0.0;\n    }\n\n    super.Step(settings);\n\n    this.m_tracker.Step(dt);\n    // Allow the user to move again.\n    this.m_allowInput = true;\n    // Charge up fracking fluid.\n    if (this.m_frackingFluidChargeTime >= 0.0) {\n      this.m_frackingFluidChargeTime += dt;\n    }\n\n    const playerPosition = this.m_player.GetTransform().p;\n    const playerX: [number] = [0];\n    const playerY: [number] = [0];\n    Fracker.WorldToTile(playerPosition, playerX, playerY);\n    // If the player is moved to a square with dirt, remove it.\n    if (this.GetMaterial(playerX[0], playerY[0]) === Fracker_Material.DIRT) {\n      this.SetMaterial(playerX[0], playerY[0], Fracker_Material.EMPTY);\n      this.SetBody(playerX[0], playerY[0], null);\n    }\n\n    // Destroy particles at the top of the well.\n    this.DestroyParticlesInTiles(this.m_wellX, this.m_wellTop, this.m_wellX, this.m_wellTop);\n\n    // Only move particles in the groups being tracked.\n    ///  const std.set<b2ParticleGroup*> &particleGroups = m_listener.GetParticleGroups();\n    const particleGroups = this.m_listener.GetParticleGroups();\n    ///  for (std.set<b2ParticleGroup*>.const_iterator it = particleGroups.begin(); it !== particleGroups.end(); ++it)\n    for (let it = 0; it < particleGroups.length; ++it) {\n      ///  b2ParticleGroup * const particleGroup = *it;\n      const particleGroup = particleGroups[it];\n      const index = particleGroup.GetBufferIndex();\n      ///  const b2Vec2* const positionBuffer = m_particleSystem.GetPositionBuffer() + index;\n      const positionBuffer = this.m_particleSystem.GetPositionBuffer();\n      ///  b2Vec2* const velocityBuffer = m_particleSystem.GetVelocityBuffer() + index;\n      const velocityBuffer = this.m_particleSystem.GetVelocityBuffer();\n      const particleCount = particleGroup.GetParticleCount();\n      for (let i = 0; i < particleCount; ++i) {\n        // Apply velocity to particles near the bottom or in the well\n        // sucking them up to the top.\n        const wellEnd = Fracker.CenteredPosition(Fracker.TileToWorld(this.m_wellX, this.m_wellBottom - 2));\n        const particlePosition = positionBuffer[index + i];\n        // Distance from the well's bottom.\n        ///  const b2Vec2 distance = particlePosition - wellEnd;\n        const distance = b2.Vec2.SubVV(particlePosition, wellEnd, new b2.Vec2());\n          // Distance from either well side wall.\n        const absDistX = Math.abs(distance.x);\n        if (absDistX < FrackerSettings.k_tileWidth &&\n          // If the particles are just below the well bottom.\n          distance.y > FrackerSettings.k_tileWidth * -2.0 &&\n          distance.y < 0.0) {\n          // Suck the particles towards the end of the well.\n          ///  b2Vec2 velocity = wellEnd - particlePosition;\n          const velocity = b2.Vec2.SubVV(wellEnd, particlePosition, new b2.Vec2());\n          velocity.Normalize();\n          ///  velocityBuffer[i] = velocity * FrackerSettings.k_wellSuckSpeedOutside;\n          velocityBuffer[index + i].Copy(velocity.SelfMul(FrackerSettings.k_wellSuckSpeedOutside));\n        } else if (absDistX <= FrackerSettings.k_tileHalfWidth && distance.y > 0.0) {\n          // Suck the particles up the well with a random\n          // x component moving them side to side in the well.\n          const randomX = (Math.random() * FrackerSettings.k_tileHalfWidth) - distance.x;\n          const velocity = new b2.Vec2(randomX, FrackerSettings.k_tileHeight);\n          velocity.Normalize();\n          ///  velocityBuffer[i] = velocity * FrackerSettings.k_wellSuckSpeedInside;\n          velocityBuffer[index + i].Copy(velocity.SelfMul(FrackerSettings.k_wellSuckSpeedInside));\n        }\n      }\n    }\n\n    // Draw everything.\n    this.DrawPlayer();\n    this.DrawWell();\n    this.DrawScore();\n  }\n\n  /**\n   * Render the well.\n   */\n  public DrawWell(): void {\n    for (let y = this.m_wellBottom; y <= this.m_wellTop; ++y) {\n      this.DrawQuad(Fracker.TileToWorld(this.m_wellX, y), FrackerSettings.k_wellColor);\n    }\n  }\n\n  /**\n   * Render the player / fracker.\n   */\n  public DrawPlayer(): void {\n    this.DrawQuad(\n      this.m_player.GetTransform().p,\n      Fracker.LerpColor(FrackerSettings.k_playerColor,\n        FrackerSettings.k_playerFrackColor,\n        b2.Max(this.m_frackingFluidChargeTime /\n          FrackerSettings.k_frackingFluidChargeTime, 0.0)),\n      true);\n  }\n\n  /**\n   * Render the score and the instructions / keys.\n   */\n  public DrawScore(): void {\n    ///  char score[512];\n    ///  sprintf(score, \"Score: %d, Remaining Oil %d\",\n    ///          m_listener.GetScore(), m_listener.GetOil());\n    ///  const char *lines[] = { score,  \"Move: a,s,d,w   Fracking Fluid: e\" };\n    ///  for (uint32 i = 0; i < B2_ARRAY_SIZE(lines); ++i)\n    ///  {\n    ///    m_debugDraw.DrawString(5, m_textLine, lines[i]);\n    ///    m_textLine += DRAW_STRING_NEW_LINE;\n    ///  }\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, `Score: ${this.m_listener.GetScore()}, Remaining Oil ${this.m_listener.GetOil()}`);\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(5, this.m_textLine, \"Move: a,s,d,w   Fracking Fluid: e\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  /**\n   * Draw a quad at position of color that is either just an\n   * outline (fill = false) or solid (fill = true).\n   */\n  public DrawQuad(position: b2.Vec2, color: b2.Color, fill: boolean = false): void {\n    ///  b2Vec2 verts[4];\n    const verts = b2.Vec2.MakeArray(4);\n    const maxX = position.x + FrackerSettings.k_tileWidth;\n    const maxY = position.y + FrackerSettings.k_tileHeight;\n    verts[0].Set(position.x, maxY);\n    verts[1].Set(position.x, position.y);\n    verts[2].Set(maxX, position.y);\n    verts[3].Set(maxX, maxY);\n    if (fill) {\n      testbed.g_debugDraw.DrawPolygon(verts, 4, color);\n    } else {\n      testbed.g_debugDraw.DrawSolidPolygon(verts, 4, color);\n    }\n  }\n\n  ///  // Get a pointer to the material of the tile at the specified position.\n  ///  Material* GetMaterialStorage(const int32 x, const int32 y)\n  ///  {\n  ///    return &m_material[Fracker.TileToArrayOffset(x, y)];\n  ///  }\n\n  ///  // A pointer to the body storage associated with the specified tile\n  ///  // position.\n  ///  b2Body** GetBodyStorage(const int32 x, const int32 y)\n  ///  {\n  ///    return &m_bodies[Fracker.TileToArrayOffset(x, y)];\n  ///  }\n\n  public GetDefaultViewZoom(): number {\n    return 0.1;\n  }\n\n  public static Create(): testbed.Test {\n    return new Fracker();\n  }\n\n  /**\n   * Get the bottom left position of the world in world units.\n   */\n  public static GetBottomLeft(bottomLeft: b2.Vec2): void {\n    bottomLeft.Set(FrackerSettings.k_worldCenterX -\n      FrackerSettings.k_worldHalfWidth,\n      FrackerSettings.k_worldCenterY -\n      FrackerSettings.k_worldHalfHeight);\n  }\n\n  /**\n   * Get the extents of the world in world units.\n   */\n  public static GetExtents(bottomLeft: b2.Vec2, topRight: b2.Vec2): void {\n    Fracker.GetBottomLeft(bottomLeft);\n    topRight.Set(FrackerSettings.k_worldCenterX +\n      FrackerSettings.k_worldHalfWidth,\n      FrackerSettings.k_worldCenterY +\n      FrackerSettings.k_worldHalfHeight);\n  }\n\n  // Convert a point in world coordintes to a tile location\n  public static WorldToTile(position: b2.Vec2, x: [number], y: [number]): void {\n    // Translate relative to the world center and scale based upon the\n    // tile size.\n    const bottomLeft = new b2.Vec2();\n    Fracker.GetBottomLeft(bottomLeft);\n    x[0] = Math.floor(((position.x - bottomLeft.x) /\n        FrackerSettings.k_tileWidth) +\n      FrackerSettings.k_tileHalfWidth);\n    y[0] = Math.floor(((position.y - bottomLeft.y) /\n        FrackerSettings.k_tileHeight) +\n      FrackerSettings.k_tileHalfHeight);\n  }\n\n  /**\n   * Convert a tile position to a point  in world coordinates.\n   */\n  public static TileToWorld(x: number, y: number, out: b2.Vec2 = new b2.Vec2()): b2.Vec2 {\n    // Scale based upon the tile size and translate relative to the world\n    // center.\n    const bottomLeft = new b2.Vec2();\n    Fracker.GetBottomLeft(bottomLeft);\n    return out.Set(\n      (x * FrackerSettings.k_tileWidth) + bottomLeft.x, (y * FrackerSettings.k_tileHeight) + bottomLeft.y);\n  }\n\n  /**\n   * Calculate the offset within an array of all world tiles using\n   * the specified tile coordinates.\n   */\n  public static TileToArrayOffset(x: number, y: number): number {\n    // DEBUG: b2.Assert(x >= 0);\n    // DEBUG: b2.Assert(x < FrackerSettings.k_worldWidthTiles);\n    // DEBUG: b2.Assert(y >= 0);\n    // DEBUG: b2.Assert(y < FrackerSettings.k_worldHeightTiles);\n    return x + (y * FrackerSettings.k_worldWidthTiles);\n  }\n\n  /**\n   * Calculate the center of a tile position in world units.\n   */\n  public static CenteredPosition(position: b2.Vec2, out: b2.Vec2 = new b2.Vec2()): b2.Vec2 {\n    return out.Set(position.x + FrackerSettings.k_tileHalfWidth,\n      position.y + FrackerSettings.k_tileHalfHeight);\n  }\n\n  /**\n   * Interpolate between color a and b using t.\n   */\n  public static LerpColor(a: b2.Color, b: b2.Color, t: number): b2.Color {\n    return new b2.Color(Fracker.Lerp(a.r, b.r, t),\n      Fracker.Lerp(a.g, b.g, t),\n      Fracker.Lerp(a.b, b.b, t));\n  }\n\n  /**\n   * Interpolate between a and b using t.\n   */\n  public static Lerp(a: number, b: number, t: number): number {\n    return a * (1.0 - t) + b * t;\n  }\n}\n\n/**\n * Type of material in a tile.\n */\nexport enum Fracker_Material {\n  EMPTY = 0,\n  DIRT = 1,\n  ROCK = 2,\n  OIL = 3,\n  WATER = 4,\n  WELL = 5,\n  PUMP = 6,\n}\n\n/**\n * Keep track of particle groups which are drawn up the well and\n * tracks the score of the game.\n */\nexport class Fracker_DestructionListener extends ParticleGroupTracker {\n  public m_score = 0;\n  public m_oil = 0;\n  public m_world: b2.World;\n  public m_previousListener: b2.DestructionListener | null = null;\n\n  /**\n   * Initialize the score.\n   */\n  public __ctor__() {}\n\n  /**\n   * Initialize the particle system and world, setting this class\n   * as a destruction listener for the world.\n   */\n  constructor(world: b2.World) {\n    super();\n    // DEBUG: b2.Assert(world !== null);\n    this.m_world = world;\n    this.m_previousListener = world.m_destructionListener;\n    this.m_world.SetDestructionListener(this);\n  }\n\n  public __dtor__() {\n    if (this.m_world) {\n      this.m_world.SetDestructionListener(this.m_previousListener);\n    }\n  }\n\n  /**\n   * Add to the current score.\n   */\n  public AddScore(score: number): void {\n    this.m_score += score;\n  }\n\n  /**\n   * Get the current score.\n   */\n  public GetScore(): number {\n    return this.m_score;\n  }\n\n  /**\n   * Add to the remaining oil.\n   */\n  public AddOil(oil: number): void {\n    this.m_oil += oil;\n  }\n\n  /**\n   * Get the total oil.\n   */\n  public GetOil(): number {\n    return this.m_oil;\n  }\n\n  /**\n   * Update the score when certain particles are destroyed.\n   */\n  public SayGoodbyeParticle(particleSystem: b2.ParticleSystem, index: number): void {\n    // DEBUG: b2.Assert(particleSystem !== null);\n    ///  const void * const userData = particleSystem.GetUserDataBuffer()[index];\n    const userData = particleSystem.GetUserDataBuffer()[index];\n    if (userData) {\n      ///  const Material material = *((Material*)userData);\n      const material = userData;\n      switch (material) {\n        case Fracker_Material.OIL:\n          this.AddScore(FrackerSettings.k_scorePerOilParticle);\n          this.AddOil(-1);\n          break;\n        case Fracker_Material.WATER:\n          this.AddScore(FrackerSettings.k_scorePerWaterParticle);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Fracker\", Fracker.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Impulse extends testbed.Test {\n  public static readonly kBoxLeft = -2;\n  public static readonly kBoxRight = 2;\n  public static readonly kBoxBottom = 0;\n  public static readonly kBoxTop = 4;\n\n  public m_useLinearImpulse = false;\n\n  constructor() {\n    super();\n\n    // Create the containing box.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const box = [\n        new b2.Vec2(Impulse.kBoxLeft, Impulse.kBoxBottom),\n        new b2.Vec2(Impulse.kBoxRight, Impulse.kBoxBottom),\n        new b2.Vec2(Impulse.kBoxRight, Impulse.kBoxTop),\n        new b2.Vec2(Impulse.kBoxLeft, Impulse.kBoxTop),\n      ];\n      const shape = new b2.ChainShape();\n      shape.CreateLoop(box);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    this.m_particleSystem.SetRadius(0.025 * 2); // HACK: increase particle radius\n    this.m_particleSystem.SetDamping(0.2);\n\n    // Create the particles.\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.8, 1.0, new b2.Vec2(0.0, 1.01), 0);\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = testbed.Test.GetParticleParameterValue();\n      pd.shape = shape;\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n  }\n\n  public MouseUp(p: b2.Vec2) {\n    super.MouseUp(p);\n\n    // Apply an impulse to the particles.\n    const isInsideBox = Impulse.kBoxLeft <= p.x && p.x <= Impulse.kBoxRight &&\n      Impulse.kBoxBottom <= p.y && p.y <= Impulse.kBoxTop;\n    if (isInsideBox) {\n      const kBoxCenter = new b2.Vec2(0.5 * (Impulse.kBoxLeft + Impulse.kBoxRight),\n        0.5 * (Impulse.kBoxBottom + Impulse.kBoxTop));\n      const direction = b2.Vec2.SubVV(p, kBoxCenter, new b2.Vec2());\n      direction.Normalize();\n      this.ApplyImpulseOrForce(direction);\n    }\n  }\n\n  public Keyboard(key: string) {\n    super.Keyboard(key);\n\n    switch (key) {\n      case \"l\":\n        this.m_useLinearImpulse = true;\n        break;\n      case \"f\":\n        this.m_useLinearImpulse = false;\n        break;\n    }\n  }\n\n  public ApplyImpulseOrForce(direction: b2.Vec2) {\n    const particleSystem = this.m_world.GetParticleSystemList();\n    if (!particleSystem) { throw new Error(); }\n    const particleGroup = particleSystem.GetParticleGroupList();\n    if (!particleGroup) { throw new Error(); }\n    const numParticles = particleGroup.GetParticleCount();\n\n    if (this.m_useLinearImpulse) {\n      const kImpulseMagnitude = 0.005;\n      ///  const b2Vec2 impulse = kImpulseMagnitude * direction * (float32)numParticles;\n      const impulse = b2.Vec2.MulSV(kImpulseMagnitude * numParticles, direction, new b2.Vec2());\n      particleGroup.ApplyLinearImpulse(impulse);\n    } else {\n      const kForceMagnitude = 1.0;\n      ///  const b2Vec2 force = kForceMagnitude * direction * (float32)numParticles;\n      const force = b2.Vec2.MulSV(kForceMagnitude * numParticles, direction, new b2.Vec2());\n      particleGroup.ApplyForce(force);\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new Impulse();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Impulse\", Impulse.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class LiquidTimer extends testbed.Test {\n  public static readonly k_paramValues = [\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_viscousParticle, testbed.ParticleParameter.k_DefaultOptions, \"tensile + viscous\"),\n  ];\n  public static readonly k_paramDef = [\n    new testbed.ParticleParameterDefinition(LiquidTimer.k_paramValues),\n    new testbed.ParticleParameterDefinition(testbed.ParticleParameter.k_particleTypes),\n  ];\n  public static readonly k_paramDefCount = LiquidTimer.k_paramDef.length;\n\n  constructor() {\n    super();\n\n    // Setup particle parameters.\n    testbed.Test.SetParticleParameters(LiquidTimer.k_paramDef, LiquidTimer.k_paramDefCount);\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      const shape = new b2.ChainShape();\n      const vertices = [\n        new b2.Vec2(-2, 0),\n        new b2.Vec2(2, 0),\n        new b2.Vec2(2, 4),\n        new b2.Vec2(-2, 4),\n      ];\n      shape.CreateLoop(vertices);\n      ground.CreateFixture(shape, 0.0);\n\n    }\n\n    this.m_particleSystem.SetRadius(0.025); {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(2, 0.4, new b2.Vec2(0, 3.6), 0);\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = testbed.Test.GetParticleParameterValue();\n      pd.shape = shape;\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-2, 3.2), new b2.Vec2(-1.2, 3.2));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-1.1, 3.2), new b2.Vec2(2, 3.2));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-1.2, 3.2), new b2.Vec2(-1.2, 2.8));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-1.1, 3.2), new b2.Vec2(-1.1, 2.8));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-1.6, 2.4), new b2.Vec2(0.8, 2));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(1.6, 1.6), new b2.Vec2(-0.8, 1.2));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-1.2, 0.8), new b2.Vec2(-1.2, 0));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-0.4, 0.8), new b2.Vec2(-0.4, 0));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(0.4, 0.8), new b2.Vec2(0.4, 0));\n      body.CreateFixture(shape, 0.1);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(1.2, 0.8), new b2.Vec2(1.2, 0));\n      body.CreateFixture(shape, 0.1);\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new LiquidTimer();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Liquid Timer\", LiquidTimer.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/**\n * Game which adds some fun to Maxwell's demon.\n *\n * http://en.wikipedia.org/wiki/Maxwell's_demon\n *\n * The user's goal is to try to catch as many particles as\n * possible in the bottom half of the container by splitting the\n * container using a barrier with the 'a' key.\n *\n * See Maxwell::Keyboard() for other controls.\n */\n\nexport class Maxwell extends testbed.Test {\n  public m_density = Maxwell.k_densityDefault;\n  public m_position = Maxwell.k_containerHalfHeight;\n  public m_temperature = Maxwell.k_temperatureDefault;\n  public m_barrierBody: b2.Body | null = null;\n  public m_particleGroup: b2.ParticleGroup | null = null;\n\n  public static readonly k_containerWidth = 2.0;\n  public static readonly k_containerHeight = 4.0;\n  public static readonly k_containerHalfWidth = Maxwell.k_containerWidth / 2.0;\n  public static readonly k_containerHalfHeight = Maxwell.k_containerHeight / 2.0;\n  public static readonly k_barrierHeight = Maxwell.k_containerHalfHeight / 100.0;\n  public static readonly k_barrierMovementIncrement = Maxwell.k_containerHalfHeight * 0.1;\n  public static readonly k_densityStep = 1.25;\n  public static readonly k_densityMin = 0.01;\n  public static readonly k_densityMax = 0.8;\n  public static readonly k_densityDefault = 0.25;\n  public static readonly k_temperatureStep = 0.2;\n  public static readonly k_temperatureMin = 0.4;\n  public static readonly k_temperatureMax = 10.0;\n  public static readonly k_temperatureDefault = 5.0;\n\n  constructor() {\n    super();\n\n    this.m_world.SetGravity(new b2.Vec2(0, 0));\n\n    // Create the container.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n      const shape = new b2.ChainShape();\n      const vertices = [\n        new b2.Vec2(-Maxwell.k_containerHalfWidth, 0),\n        new b2.Vec2(Maxwell.k_containerHalfWidth, 0),\n        new b2.Vec2(Maxwell.k_containerHalfWidth, Maxwell.k_containerHeight),\n        new b2.Vec2(-Maxwell.k_containerHalfWidth, Maxwell.k_containerHeight),\n      ];\n      shape.CreateLoop(vertices);\n      const def = new b2.FixtureDef();\n      def.shape = shape;\n      def.density = 0;\n      def.restitution = 1.0;\n      ground.CreateFixture(def);\n    }\n\n    // Enable the barrier.\n    this.EnableBarrier();\n    // Create the particles.\n    this.ResetParticles();\n  }\n\n  /**\n   * Disable the barrier.\n   */\n  public DisableBarrier() {\n    if (this.m_barrierBody) {\n      this.m_world.DestroyBody(this.m_barrierBody);\n      this.m_barrierBody = null;\n    }\n  }\n\n  /**\n   * Enable the barrier.\n   */\n  public EnableBarrier() {\n    if (!this.m_barrierBody) {\n      const bd = new b2.BodyDef();\n      this.m_barrierBody = this.m_world.CreateBody(bd);\n      const barrierShape = new b2.PolygonShape();\n      barrierShape.SetAsBox(Maxwell.k_containerHalfWidth, Maxwell.k_barrierHeight,\n        new b2.Vec2(0, this.m_position), 0);\n      const def = new b2.FixtureDef();\n      def.shape = barrierShape;\n      def.density = 0;\n      def.restitution = 1.0;\n      this.m_barrierBody.CreateFixture(def);\n    }\n  }\n\n  /**\n   * Enable / disable the barrier.\n   */\n  public ToggleBarrier() {\n    if (this.m_barrierBody) {\n      this.DisableBarrier();\n    } else {\n      this.EnableBarrier();\n    }\n  }\n\n  /**\n   * Destroy and recreate all particles.\n   */\n  public ResetParticles() {\n    if (this.m_particleGroup !== null) {\n      this.m_particleGroup.DestroyParticles(false);\n      this.m_particleGroup = null;\n    }\n\n    this.m_particleSystem.SetRadius(Maxwell.k_containerHalfWidth / 20.0); {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(this.m_density * Maxwell.k_containerHalfWidth,\n        this.m_density * Maxwell.k_containerHalfHeight,\n        new b2.Vec2(0, Maxwell.k_containerHalfHeight), 0);\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = b2.ParticleFlag.b2_powderParticle;\n      pd.shape = shape;\n      this.m_particleGroup = this.m_particleSystem.CreateParticleGroup(pd);\n      ///  b2Vec2* velocities =\n      ///    this.m_particleSystem.GetVelocityBuffer() +\n      ///    this.m_particleGroup.GetBufferIndex();\n      const velocities = this.m_particleSystem.GetVelocityBuffer();\n      const index = this.m_particleGroup.GetBufferIndex();\n\n      for (let i = 0; i < this.m_particleGroup.GetParticleCount(); ++i) {\n        ///  b2Vec2& v = *(velocities + i);\n        const v = velocities[index + i];\n        v.Set(testbed.RandomFloat() + 1.0, testbed.RandomFloat() + 1.0);\n        v.Normalize();\n        ///  v *= this.m_temperature;\n        v.SelfMul(this.m_temperature);\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        // Enable / disable the barrier.\n        this.ToggleBarrier();\n        break;\n      case \"=\":\n        // Increase the particle density.\n        this.m_density = b2.Min(this.m_density * Maxwell.k_densityStep, Maxwell.k_densityMax);\n        this.Reset();\n        break;\n      case \"-\":\n        // Reduce the particle density.\n        this.m_density = b2.Max(this.m_density / Maxwell.k_densityStep, Maxwell.k_densityMin);\n        this.Reset();\n        break;\n      case \".\":\n        // Move the location of the divider up.\n        this.MoveDivider(this.m_position + Maxwell.k_barrierMovementIncrement);\n        break;\n      case \",\":\n        // Move the location of the divider down.\n        this.MoveDivider(this.m_position - Maxwell.k_barrierMovementIncrement);\n        break;\n      case \";\":\n        // Reduce the temperature (velocity of particles).\n        this.m_temperature = b2.Max(this.m_temperature - Maxwell.k_temperatureStep,\n          Maxwell.k_temperatureMin);\n        this.Reset();\n        break;\n      case \"'\":\n        // Increase the temperature (velocity of particles).\n        this.m_temperature = b2.Min(this.m_temperature + Maxwell.k_temperatureStep,\n          Maxwell.k_temperatureMax);\n        this.Reset();\n        break;\n      default:\n        super.Keyboard(key);\n        break;\n    }\n  }\n\n  /**\n   * Determine whether a point is in the container.\n   */\n  public InContainer(p: b2.Vec2) {\n    return p.x >= -Maxwell.k_containerHalfWidth && p.x <= Maxwell.k_containerHalfWidth &&\n      p.y >= 0.0 && p.y <= Maxwell.k_containerHalfHeight * 2.0;\n  }\n\n  public MouseDown(p: b2.Vec2) {\n    if (!this.InContainer(p)) {\n      super.MouseDown(p);\n    }\n  }\n\n  public MouseUp(p: b2.Vec2) {\n    // If the pointer is in the container.\n    if (this.InContainer(p)) {\n      // Enable / disable the barrier.\n      this.ToggleBarrier();\n    } else {\n      // Move the barrier to the touch position.\n      this.MoveDivider(p.y);\n\n      super.MouseUp(p);\n    }\n  }\n\n  public Step(settings: testbed.Settings) {\n    super.Step(settings);\n\n    // Number of particles above (top) and below (bottom) the barrier.\n    let top = 0;\n    let bottom = 0;\n\n    if (this.m_particleGroup) {\n      const index = this.m_particleGroup.GetBufferIndex();\n      ///  b2Vec2* const velocities = this.m_particleSystem.GetVelocityBuffer() + index;\n      const velocities = this.m_particleSystem.GetVelocityBuffer();\n      ///  b2Vec2* const positions = this.m_particleSystem.GetPositionBuffer() + index;\n      const positions = this.m_particleSystem.GetPositionBuffer();\n\n      for (let i = 0; i < this.m_particleGroup.GetParticleCount(); i++) {\n        // Add energy to particles based upon the temperature.\n        ///  b2Vec2& v = velocities[i];\n        const v = velocities[index + i];\n        v.Normalize();\n        ///  v *= this.m_temperature;\n        v.SelfMul(this.m_temperature);\n\n        // Keep track of the number of particles above / below the\n        // divider / barrier position.\n        ///  b2Vec2& p = positions[i];\n        const p = positions[index + i];\n        if (p.y > this.m_position) {\n          top++;\n        } else {\n          bottom++;\n        }\n      }\n    }\n\n    // Calculate a score based upon the difference in pressure between the\n    // upper and lower divisions of the container.\n    const topPressure = top / (Maxwell.k_containerHeight - this.m_position);\n    const botPressure = bottom / this.m_position;\n    testbed.g_debugDraw.DrawString(\n      10, 75, `Score: ${topPressure > 0.0 ? botPressure / topPressure - 1.0 : 0.0}`);\n  }\n\n  /**\n   * Reset the particles and the barrier.\n   */\n  public Reset() {\n    this.DisableBarrier();\n    this.ResetParticles();\n    this.EnableBarrier();\n  }\n\n  /**\n   * Move the divider / barrier.\n   */\n  public MoveDivider(newPosition: number) {\n    this.m_position = b2.Clamp(newPosition, Maxwell.k_barrierMovementIncrement,\n      Maxwell.k_containerHeight - Maxwell.k_barrierMovementIncrement);\n    this.Reset();\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new Maxwell();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Maxwell\", Maxwell.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class MultipleParticleSystems extends testbed.Test {\n  public m_particleSystem2: b2.ParticleSystem;\n  public m_emitters: testbed.RadialEmitter[];\n\n  /**\n   * Maximum number of particles per system.\n   */\n  public static readonly k_maxParticleCount = 500;\n  /**\n   * Size of the box which is pushed around by particles.\n   */\n  public static readonly k_dynamicBoxSize = new b2.Vec2(0.5, 0.5);\n  /**\n   * Mass of the box.\n   */\n  public static readonly k_boxMass = 1.0;\n  /**\n   * Emit rate of the emitters in particles per second.\n   */\n  public static readonly k_emitRate = 100.0;\n  /**\n   * Location of the left emitter (the position of the right one\n   * is mirrored along the y-axis).\n   */\n  public static readonly k_emitterPosition = new b2.Vec2(-5.0, 4.0);\n  /**\n   * Starting velocity of particles from the left emitter (the\n   * velocity of particles from the right emitter are mirrored\n   * along the y-axis).\n   */\n  public static readonly k_emitterVelocity = new b2.Vec2(7.0, -4.0);\n  /**\n   * Size of particle emitters.\n   */\n  public static readonly k_emitterSize = new b2.Vec2(1.0, 1.0);\n  /**\n   * Color of the left emitter's particles.\n   */\n  public static readonly k_leftEmitterColor = new b2.Color().SetByteRGBA(0x22, 0x33, 0xff, 0xff);\n  /**\n   * Color of the right emitter's particles.\n   */\n  public static readonly k_rightEmitterColor = new b2.Color().SetByteRGBA(0xff, 0x22, 0x11, 0xff);\n\n  constructor() {\n    super();\n\n    this.m_emitters = [\n      new testbed.RadialEmitter(),\n      new testbed.RadialEmitter(),\n    ];\n\n    // Configure the default particle system's parameters.\n    this.m_particleSystem.SetRadius(0.05);\n    this.m_particleSystem.SetMaxParticleCount(MultipleParticleSystems.k_maxParticleCount);\n    this.m_particleSystem.SetDestructionByAge(true);\n\n    // Create a secondary particle system.\n    const particleSystemDef = new b2.ParticleSystemDef();\n    particleSystemDef.radius = this.m_particleSystem.GetRadius();\n    particleSystemDef.destroyByAge = true;\n    this.m_particleSystem2 = this.m_world.CreateParticleSystem(particleSystemDef);\n    this.m_particleSystem2.SetMaxParticleCount(MultipleParticleSystems.k_maxParticleCount);\n\n    // Don't restart the test when changing particle types.\n    testbed.Test.SetRestartOnParticleParameterChange(false);\n\n    // Create the ground.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(5.0, 0.1);\n      ground.CreateFixture(shape, 0.0);\n    }\n\n    // Create a dynamic body to push around.\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.PolygonShape();\n      const center = new b2.Vec2(0.0, 1.2);\n      shape.SetAsBox(MultipleParticleSystems.k_dynamicBoxSize.x, MultipleParticleSystems.k_dynamicBoxSize.y, center, 0.0);\n      body.CreateFixture(shape, 0.0);\n      ///  b2MassData massData = { MultipleParticleSystems.k_boxMass, center, 0.0 };\n      const massData = new b2.MassData();\n      massData.mass = MultipleParticleSystems.k_boxMass;\n      massData.center.Copy(center);\n      massData.I = 0.0;\n      body.SetMassData(massData);\n    }\n\n    // Initialize the emitters.\n    for (let i = 0; i < this.m_emitters.length; ++i) {\n      const mirrorAlongY = i & 1 ? -1.0 : 1.0;\n      const emitter = this.m_emitters[i];\n      emitter.SetPosition(\n        new b2.Vec2(MultipleParticleSystems.k_emitterPosition.x * mirrorAlongY,\n          MultipleParticleSystems.k_emitterPosition.y));\n      emitter.SetSize(MultipleParticleSystems.k_emitterSize);\n      emitter.SetVelocity(\n        new b2.Vec2(MultipleParticleSystems.k_emitterVelocity.x * mirrorAlongY,\n          MultipleParticleSystems.k_emitterVelocity.y));\n      emitter.SetEmitRate(MultipleParticleSystems.k_emitRate);\n      emitter.SetColor(i & 1 ? MultipleParticleSystems.k_rightEmitterColor : MultipleParticleSystems.k_leftEmitterColor);\n      emitter.SetParticleSystem(i & 1 ? this.m_particleSystem2 : this.m_particleSystem);\n    }\n  }\n\n  public Step(settings: testbed.Settings) {\n    let dt = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n    if (settings.m_pause && !settings.m_singleStep) {\n      dt = 0.0;\n    }\n\n    super.Step(settings);\n\n    for (let i = 0; i < this.m_emitters.length; ++i) {\n      this.m_emitters[i].Step(dt);\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new MultipleParticleSystems();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Multiple Systems\", MultipleParticleSystems.Create);\n\n// #endif\n","/*\n* Copyright (c) 2015 Google, Inc.\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// Optionally disables particle / fixture and particle / particle contacts.\nexport class ParticleContactDisabler extends b2.ContactFilter {\n  public m_enableFixtureParticleCollisions = true;\n  public m_enableParticleParticleCollisions = true;\n\n  // Blindly enable / disable collisions between fixtures and particles.\n  public ShouldCollideFixtureParticle(): boolean {\n    return this.m_enableFixtureParticleCollisions;\n  }\n\n  // Blindly enable / disable collisions between particles.\n  public ShouldCollideParticleParticle(): boolean {\n    return this.m_enableParticleParticleCollisions;\n  }\n}\n\nexport class ParticleCollisionFilter extends testbed.Test {\n  constructor() {\n    super();\n\n    // must also set b2_particleContactFilterParticle and\n    // b2_fixtureContactFilterParticle flags for particle group\n    this.m_world.SetContactFilter(this.m_contactDisabler);\n\n    this.m_world.SetGravity(new b2.Vec2(0, 0));\n\n    // Create the container.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n      const shape = new b2.ChainShape();\n      const vertices: b2.Vec2[] = [\n        new b2.Vec2(-ParticleCollisionFilter.kBoxSize, -ParticleCollisionFilter.kBoxSize + ParticleCollisionFilter.kOffset),\n        new b2.Vec2(ParticleCollisionFilter.kBoxSize, -ParticleCollisionFilter.kBoxSize + ParticleCollisionFilter.kOffset),\n        new b2.Vec2(ParticleCollisionFilter.kBoxSize, ParticleCollisionFilter.kBoxSize + ParticleCollisionFilter.kOffset),\n        new b2.Vec2(-ParticleCollisionFilter.kBoxSize, ParticleCollisionFilter.kBoxSize + ParticleCollisionFilter.kOffset),\n      ];\n      shape.CreateLoop(vertices);\n      const def = new b2.FixtureDef();\n      def.shape = shape;\n      def.density = 0;\n      def.density = 0;\n      def.restitution = 1.0;\n      ground.CreateFixture(def);\n    }\n\n    // create the particles\n    this.m_particleSystem.SetRadius(0.5);\n    {\n      // b2PolygonShape shape;\n      const shape = new b2.PolygonShape();\n      // shape.SetAsBox(1.5f, 1.5f, b2Vec2(kBoxSizeHalf, kBoxSizeHalf + kOffset), 0.0f);\n      shape.SetAsBox(1.5, 1.5, new b2.Vec2(ParticleCollisionFilter.kBoxSizeHalf, ParticleCollisionFilter.kBoxSizeHalf + ParticleCollisionFilter.kOffset), 0.0);\n      // b2ParticleGroupDef pd;\n      const pd = new b2.ParticleGroupDef();\n      // pd.shape = &shape;\n      pd.shape = shape;\n      // pd.flags = b2_powderParticle\n      // \t\t| b2_particleContactFilterParticle\n      // \t\t| b2_fixtureContactFilterParticle;\n      pd.flags = b2.ParticleFlag.b2_powderParticle\n        | b2.ParticleFlag.b2_particleContactFilterParticle\n        | b2.ParticleFlag.b2_fixtureContactFilterParticle;\n      // m_particleGroup =\n      // \tm_particleSystem.CreateParticleGroup(pd);\n      this.m_particleGroup = this.m_particleSystem.CreateParticleGroup(pd);\n\n      // b2Vec2* velocities =\n      // \tm_particleSystem.GetVelocityBuffer() +\n      // \tm_particleGroup.GetBufferIndex();\n      const velocities: b2.Vec2[] = this.m_particleSystem.GetVelocityBuffer();\n      const index: number = this.m_particleGroup.GetBufferIndex();\n      // for (int i = 0; i < m_particleGroup.GetParticleCount(); ++i) {\n      // \tb2Vec2& v = *(velocities + i);\n      // \tv.Set(RandomFloat(), RandomFloat());\n      // \tv.Normalize();\n      // \tv *= kSpeedup;\n      // }\n      for (let i = 0; i < this.m_particleGroup.GetParticleCount(); ++i) {\n        const v: b2.Vec2 = velocities[index + i];\n        v.Set(testbed.RandomFloat(), testbed.RandomFloat());\n        v.SelfNormalize();\n        v.SelfMul(ParticleCollisionFilter.kSpeedup);\n      }\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    super.Step(settings);\n\n    // const int32 index = m_particleGroup.GetBufferIndex();\n    const index: number = this.m_particleGroup.GetBufferIndex();\n    // b2Vec2* const velocities =\n    // \tm_particleSystem.GetVelocityBuffer() + index;\n    const velocities: b2.Vec2[] = this.m_particleSystem.GetVelocityBuffer();\n    // for (int32 i = 0; i < m_particleGroup.GetParticleCount(); i++) {\n    // \t// Add energy to particles based upon the temperature.\n    // \tb2Vec2& v = velocities[i];\n    // \tv.Normalize();\n    // \tv *= kSpeedup;\n    // }\n    for (let i = 0; i < this.m_particleGroup.GetParticleCount(); ++i) {\n      const v: b2.Vec2 = velocities[index + i];\n      v.SelfNormalize();\n      v.SelfMul(ParticleCollisionFilter.kSpeedup);\n    }\n\n    // key help\n    {\n      const k_keys: string[] = [\n        \"Keys: (a) toggle Fixture collisions\",\n        \"      (s) toggle particle collisions\",\n      ];\n      for (let i = 0; i < k_keys.length; ++i) {\n        testbed.g_debugDraw.DrawString(5, this.m_textLine, k_keys[i]);\n        this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n      }\n    }\n  }\n\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"a\":\n        this.ToggleFixtureCollisions();\n        break;\n      case \"s\":\n        this.ToggleParticleCollisions();\n        break;\n      default:\n        super.Keyboard(key);\n        break;\n    }\n  }\n\n  public ToggleFixtureCollisions(): void {\n    this.m_contactDisabler.m_enableFixtureParticleCollisions = !this.m_contactDisabler.m_enableFixtureParticleCollisions;\n  }\n\n  public ToggleParticleCollisions(): void {\n    this.m_contactDisabler.m_enableParticleParticleCollisions = !this.m_contactDisabler.m_enableParticleParticleCollisions;\n  }\n\n  public m_contactDisabler: ParticleContactDisabler = new ParticleContactDisabler();\n  public m_particleGroup: b2.ParticleGroup;\n\n  public static readonly kBoxSize = 10.0;\n  public static readonly kBoxSizeHalf = ParticleCollisionFilter.kBoxSize / 2;\n  public static readonly kOffset = 20.0;\n  public static readonly kParticlesContainerSize = ParticleCollisionFilter.kOffset + 0.5;\n  public static readonly kSpeedup = 8.0;\n\n  public static Create() {\n    return new ParticleCollisionFilter();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Collision Filter\", ParticleCollisionFilter.Create);\n\n// #endif\n","/*\n * Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class ParticlesSurfaceTension extends testbed.Test {\n  constructor() {\n    super(); // base class constructor\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -1),\n          new b2.Vec2(4, -1),\n          new b2.Vec2(4, 0),\n          new b2.Vec2(-4, 0),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -0.1),\n          new b2.Vec2(-2, -0.1),\n          new b2.Vec2(-2, 2),\n          new b2.Vec2(-4, 2),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(2, -0.1),\n          new b2.Vec2(4, -0.1),\n          new b2.Vec2(4, 2),\n          new b2.Vec2(2, 2),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.035 * 2); // HACK: increase particle radius\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 2);\n      shape.m_radius = 0.5;\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_colorMixingParticle;\n      pd.shape = shape;\n      pd.color.Set(1, 0, 0, 1);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(-1, 2);\n      shape.m_radius = 0.5;\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_colorMixingParticle;\n      pd.shape = shape;\n      pd.color.Set(0, 1, 0, 1);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      const vertices = [\n        new b2.Vec2(0, 3),\n        new b2.Vec2(2, 3),\n        new b2.Vec2(2, 3.5),\n        new b2.Vec2(0, 3.5),\n      ];\n      shape.Set(vertices, 4);\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_colorMixingParticle;\n      pd.shape = shape;\n      pd.color.Set(0, 0, 1, 1);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 8);\n      shape.m_radius = 0.5;\n      body.CreateFixture(shape, 0.5);\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new ParticlesSurfaceTension();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Surface Tension\", ParticlesSurfaceTension.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Particles extends testbed.Test {\n  constructor() {\n    super();\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -1),\n          new b2.Vec2(4, -1),\n          new b2.Vec2(4, 0),\n          new b2.Vec2(-4, 0),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -0.1),\n          new b2.Vec2(-2, -0.1),\n          new b2.Vec2(-2, 2),\n          new b2.Vec2(-4, 3),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(2, -0.1),\n          new b2.Vec2(4, -0.1),\n          new b2.Vec2(4, 3),\n          new b2.Vec2(2, 2),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.035 * 2); // HACK: increase particle radius\n    const particleType = testbed.Test.GetParticleParameterValue();\n    this.m_particleSystem.SetDamping(0.2);\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 3);\n      shape.m_radius = 2;\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = particleType;\n      pd.shape = shape;\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 8);\n      shape.m_radius = 0.5;\n      body.CreateFixture(shape, 0.5);\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new Particles();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Particles\", Particles.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n/**\n * Test behavior when particles fall on a convex ambigious Body\n * contact fixture junction.\n */\n\nexport class Pointy extends testbed.Test {\n  public m_killfieldShape = new b2.PolygonShape();\n  public m_killfieldTransform = new b2.Transform();\n\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      // Construct a triangle out of many polygons to ensure there's no\n      // issue with particles falling directly on an ambiguous corner\n\n      const xstep = 1.0;\n      for (let x = -10.0; x < 10.0; x += xstep) {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(x, -10.0),\n          new b2.Vec2(x + xstep, -10.0),\n          new b2.Vec2(0.0, 25.0),\n        ];\n        shape.Set(vertices, 3);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.25 * 2); // HACK: increase particle radius\n    const particleType = testbed.Test.GetParticleParameterValue();\n    if (particleType === b2.ParticleFlag.b2_waterParticle) {\n      this.m_particleSystem.SetDamping(0.2);\n    }\n\n    // Create killfield shape and transform\n    this.m_killfieldShape = new b2.PolygonShape();\n    this.m_killfieldShape.SetAsBox(50.0, 1.0);\n\n    // Put this at the bottom of the world\n    this.m_killfieldTransform = new b2.Transform();\n    const loc = new b2.Vec2(-25, 1);\n    this.m_killfieldTransform.SetPositionAngle(loc, 0);\n  }\n\n  public Step(settings: testbed.Settings) {\n    super.Step(settings);\n\n    const flags = testbed.Test.GetParticleParameterValue();\n    const pd = new b2.ParticleDef();\n\n    pd.position.Set(0.0, 33.0);\n    pd.velocity.Set(0.0, -1.0);\n    pd.flags = flags;\n\n    if (flags & (b2.ParticleFlag.b2_springParticle | b2.ParticleFlag.b2_elasticParticle)) {\n      const count = this.m_particleSystem.GetParticleCount();\n      pd.velocity.Set(count & 1 ? -1.0 : 1.0, -5.0);\n      pd.flags |= b2.ParticleFlag.b2_reactiveParticle;\n    }\n\n    this.m_particleSystem.CreateParticle(pd);\n\n    // kill every particle near the bottom of the screen\n    this.m_particleSystem.DestroyParticlesInShape(this.m_killfieldShape, this.m_killfieldTransform);\n  }\n\n  public static Create() {\n    return new Pointy();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Pointy\", Pointy.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Ramp extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      // Construct a ramp out of many polygons to ensure there's no\n      // issue with particles moving across vertices\n\n      const xstep = 5.0, ystep = 5.0;\n\n      for (let y = 30.0; y > 0.0; y -= ystep) {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-25.0, y),\n          new b2.Vec2(-25.0, y - ystep),\n          new b2.Vec2(0.0, 15.0),\n        ];\n        shape.Set(vertices, 3);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      for (let x = -25.0; x < 25.0; x += xstep) {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(x, 0.0),\n          new b2.Vec2(x + xstep, 0.0),\n          new b2.Vec2(0.0, 15.0),\n        ];\n        shape.Set(vertices, 3);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.25);\n    const particleType = testbed.Test.GetParticleParameterValue();\n    if (particleType === b2.ParticleFlag.b2_waterParticle) {\n      this.m_particleSystem.SetDamping(0.2);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(-20, 33);\n      shape.m_radius = 3;\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = particleType;\n      pd.shape = shape;\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n  }\n\n  public static Create() {\n    return new Ramp();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Ramp\", Ramp.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class RigidParticles extends testbed.Test {\n  constructor() {\n    super();\n\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -1),\n          new b2.Vec2(4, -1),\n          new b2.Vec2(4, 0),\n          new b2.Vec2(-4, 0),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -0.1),\n          new b2.Vec2(-2, -0.1),\n          new b2.Vec2(-2, 2),\n          new b2.Vec2(-4, 2),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(2, -0.1),\n          new b2.Vec2(4, -0.1),\n          new b2.Vec2(4, 2),\n          new b2.Vec2(2, 2),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.035 * 2); // HACK: increase particle radius\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 3);\n      shape.m_radius = 0.5;\n      const pd = new b2.ParticleGroupDef();\n      pd.groupFlags = b2.ParticleGroupFlag.b2_rigidParticleGroup | b2.ParticleGroupFlag.b2_solidParticleGroup;\n      pd.shape = shape;\n      pd.color.SetByteRGBA(255, 0, 0, 255);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(-1, 3);\n      shape.m_radius = 0.5;\n      const pd = new b2.ParticleGroupDef();\n      pd.groupFlags = b2.ParticleGroupFlag.b2_rigidParticleGroup | b2.ParticleGroupFlag.b2_solidParticleGroup;\n      pd.shape = shape;\n      pd.color.SetByteRGBA(0, 255, 0, 255);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const shape = new b2.PolygonShape();\n      //const vertices = [\n      //  new b2.Vec2(0, 3),\n      //  new b2.Vec2(2, 3),\n      //  new b2.Vec2(2, 3.5),\n      //  new b2.Vec2(0, 3.5)\n      //];\n      //shape.Set(vertices, 4);\n      shape.SetAsBox(1, 0.5);\n      const pd = new b2.ParticleGroupDef();\n      pd.groupFlags = b2.ParticleGroupFlag.b2_rigidParticleGroup | b2.ParticleGroupFlag.b2_solidParticleGroup;\n      pd.position.Set(1, 4);\n      pd.angle = -0.5;\n      pd.angularVelocity = 2.0;\n      pd.shape = shape;\n      pd.color.SetByteRGBA(0, 0, 255, 255);\n      this.m_particleSystem.CreateParticleGroup(pd);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 8);\n      shape.m_radius = 0.5;\n      body.CreateFixture(shape, 0.5);\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new RigidParticles();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Rigid Particles\", RigidParticles.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\n// /**\n//  * The following parameters are not static const members of the\n//  * Sandbox class with values assigned inline as it can result in\n//  * link errors when using gcc.\n//  */\n// SandboxParams = {};\nexport class SandboxParams {\n  /**\n   * Total possible pump squares\n   */\n  public static readonly k_maxPumps: number = 5;\n  /**\n   * Total possible emitters\n   */\n  public static readonly k_maxEmitters: number = 5;\n  /**\n   * Number of seconds to push one direction or the other on the\n   * pumps\n   */\n  public static readonly k_flipTime: number = 6;\n  /**\n   * Radius of a tile\n   */\n  public static readonly k_tileRadius: number = 2;\n  /**\n   * Diameter of a tile\n   */\n  public static readonly k_tileDiameter: number = 4;\n  /**\n   * Pump radius; slightly smaller than a tile\n   */\n  public static readonly k_pumpRadius: number = 2.0 - 0.05;\n\n  public static readonly k_playfieldLeftEdge: number = -20;\n  public static readonly k_playfieldRightEdge: number = 20;\n  public static readonly k_playfieldBottomEdge: number = 40;\n\n  /**\n   * The world size in the TILE\n   */\n  public static readonly k_tileWidth: number = 10;\n  public static readonly k_tileHeight: number = 11;\n\n  /**\n   * Particles/second\n   */\n  public static readonly k_defaultEmitterRate: number = 30;\n  /**\n   * Fit cleanly inside one block\n   */\n  public static readonly k_defaultEmitterSize: number = 3;\n  /**\n   * How fast particles coming out of the particles should drop\n   */\n  public static readonly k_particleExitSpeedY: number = -9.8;\n  /**\n   * How hard the pumps can push\n   */\n  public static readonly k_pumpForce: number = 600;\n\n  /**\n   * Number of *special* particles.\n   */\n  public static readonly k_numberOfSpecialParticles: number = 256;\n}\n\n/**\n * Class which tracks a set of particles and applies a special\n * effect to them.\n */\nexport class SpecialParticleTracker extends b2.DestructionListener {\n  /**\n   * Set of particle handles used to track special particles.\n   */\n  public m_particles: b2.ParticleHandle[] = [];\n\n  /**\n   * Pointer to the world used to enable / disable this class as a\n   * destruction listener.\n   */\n  public m_world: b2.World;\n  /**\n   * Pointer to the particle system used to retrieve particle\n   * handles.\n   */\n  public m_particleSystem: b2.ParticleSystem;\n  /**\n   * Current offset into this.m_colorOscillationPeriod.\n   */\n  public m_colorOscillationTime = 0.0;\n  /**\n   * Color oscillation period in seconds.\n   */\n  public m_colorOscillationPeriod = 2.0;\n\n  /**\n   * Register this class as a destruction listener so that it's\n   * possible to keep track of special particles.\n   */\n  constructor(world: b2.World, system: b2.ParticleSystem) {\n    super();\n    // DEBUG: b2.Assert(world !== null);\n    // DEBUG: b2.Assert(system !== null);\n    this.m_world = world;\n    this.m_particleSystem = system;\n    this.m_world.SetDestructionListener(this);\n  }\n\n  public __dtor__(): void {\n    this.m_world.SetDestructionListener(null);\n  }\n\n  /**\n   * Add as many of the specified particles to the set of special\n   * particles.\n   */\n  public Add(particleIndices: number[], numberOfParticles: number) {\n    // DEBUG: b2.Assert(this.m_particleSystem !== null);\n    for (let i = 0; i < numberOfParticles && this.m_particles.length < SandboxParams.k_numberOfSpecialParticles; ++i) {\n      const particleIndex = particleIndices[i];\n      this.m_particleSystem.SetParticleFlags(particleIndex, this.m_particleSystem.GetFlagsBuffer()[particleIndex] | b2.ParticleFlag.b2_destructionListenerParticle);\n      this.m_particles.push(this.m_particleSystem.GetParticleHandleFromIndex(particleIndex));\n    }\n  }\n\n  /**\n   * Apply effects to special particles.\n   */\n  public Step(dt: number): void {\n    function fmod(a: number, b: number) {\n      return (a - (Math.floor(a / b) * b));\n    }\n    // Oscillate the shade of color over this.m_colorOscillationPeriod seconds.\n    this.m_colorOscillationTime = fmod(this.m_colorOscillationTime + dt,\n      this.m_colorOscillationPeriod);\n    const colorCoeff = 2.0 * Math.abs(\n      (this.m_colorOscillationTime / this.m_colorOscillationPeriod) - 0.5);\n    const color = new b2.Color().SetByteRGBA(\n      128 + (128.0 * (1.0 - colorCoeff)),\n      128 + (256.0 * Math.abs(0.5 - colorCoeff)),\n      128 + (128.0 * colorCoeff), 255);\n    // Update the color of all special particles.\n    for (let i = 0; i < this.m_particles.length; ++i) {\n      this.m_particleSystem.GetColorBuffer()[this.m_particles[i].GetIndex()].Copy(color);\n    }\n  }\n\n  public SayGoodbyeJoint(joint: b2.Joint): void {}\n\n  public SayGoodbyeFixture(fixture: b2.Fixture): void {}\n\n  public SayGoodbyeParticleGroup(group: b2.ParticleGroup): void {}\n\n  /**\n   * When a particle is about to be destroyed, remove it from the\n   * list of special particles as the handle will become invalid.\n   */\n  public SayGoodbyeParticle(particleSystem: b2.ParticleSystem, index: number): void {\n    if (particleSystem !== this.m_particleSystem) {\n      return;\n    }\n\n    // NOTE: user data could be used as an alternative method to look up\n    // the local handle pointer from the index.\n    // DEBUG: const length = this.m_particles.length;\n    this.m_particles = this.m_particles.filter((value) => {\n      return value.GetIndex() !== index;\n    });\n    // DEBUG: b2.Assert((length - this.m_particles.length) === 1);\n  }\n}\n\n/**\n * Sandbox test creates a maze of faucets, pumps, ramps,\n * circles, and blocks based on a string constant.  Please\n * modify and play with this string to make new mazes, and also\n * add new maze elements!\n */\n\nexport class Sandbox extends testbed.Test {\n  /**\n   * Count of faucets in the world\n   */\n  public m_faucetEmitterIndex = 0;\n  /**\n   * Count of pumps in the world\n   */\n  public m_pumpIndex = 0;\n\n  /**\n   * How long have we been pushing the pumps?\n   */\n  public m_pumpTimer = 0.0;\n  /**\n   * Particle creation flags\n   */\n  public m_particleFlags = 0;\n\n  /**\n   * Pump force\n   */\n  public readonly m_pumpForce: b2.Vec2 = new b2.Vec2();\n\n  /**\n   * The shape we will use for the killfield\n   */\n  public m_killFieldShape: b2.PolygonShape;\n  /**\n   * Transform for the killfield shape\n   */\n  public m_killFieldTransform: b2.Transform;\n\n  /**\n   * Pumps and emitters\n   */\n  public readonly m_pumps: Array<b2.Body | null> = [];\n  public readonly m_emitters: Array<testbed.RadialEmitter | null> = [];\n\n  /**\n   * Special particle tracker.\n   */\n  public m_specialTracker: SpecialParticleTracker;\n\n  public static readonly k_paramValues = [\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, testbed.ParticleParameter.k_DefaultOptions, \"water\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_waterParticle, testbed.ParticleParameter.k_DefaultOptions | testbed.ParticleParameterOptions.OptionStrictContacts, \"water (strict)\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_powderParticle, testbed.ParticleParameter.k_DefaultOptions, \"powder\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_tensileParticle, testbed.ParticleParameter.k_DefaultOptions, \"tensile\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_viscousParticle, testbed.ParticleParameter.k_DefaultOptions, \"viscous\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_powderParticle, testbed.ParticleParameter.k_DefaultOptions, \"tensile powder\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_viscousParticle | b2.ParticleFlag.b2_powderParticle, testbed.ParticleParameter.k_DefaultOptions, \"viscous powder\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_viscousParticle | b2.ParticleFlag.b2_tensileParticle | b2.ParticleFlag.b2_powderParticle, testbed.ParticleParameter.k_DefaultOptions, \"viscous tensile powder\"),\n    new testbed.ParticleParameterValue(b2.ParticleFlag.b2_viscousParticle | b2.ParticleFlag.b2_tensileParticle, testbed.ParticleParameter.k_DefaultOptions, \"tensile viscous water\"),\n  ];\n\n  public static readonly k_paramDef = [\n    new testbed.ParticleParameterDefinition(Sandbox.k_paramValues),\n  ];\n  public static readonly k_paramDefCount = Sandbox.k_paramDef.length;\n\n  constructor() {\n    super();\n\n    // We need some ground for the pumps to slide against\n    const bd = new b2.BodyDef();\n    const ground = this.m_world.CreateBody(bd);\n\n    // Reset our pointers\n    for (let i = 0; i < SandboxParams.k_maxEmitters; i++) {\n      this.m_emitters[i] = null;\n    }\n\n    for (let i = 0; i < SandboxParams.k_maxPumps; i++) {\n      this.m_pumps[i] = null;\n    }\n\n    this.m_world.SetGravity(new b2.Vec2(0.0, -20));\n\n    // Create physical box, no top\n    {\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-40, -10),\n          new b2.Vec2(40, -10),\n          new b2.Vec2(40, 0),\n          new b2.Vec2(-40, 0),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(SandboxParams.k_playfieldLeftEdge - 20, -1),\n          new b2.Vec2(SandboxParams.k_playfieldLeftEdge, -1),\n          new b2.Vec2(SandboxParams.k_playfieldLeftEdge, 50),\n          new b2.Vec2(SandboxParams.k_playfieldLeftEdge - 20, 50),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(SandboxParams.k_playfieldRightEdge, -1),\n          new b2.Vec2(SandboxParams.k_playfieldRightEdge + 20, -1),\n          new b2.Vec2(SandboxParams.k_playfieldRightEdge + 20, 50),\n          new b2.Vec2(SandboxParams.k_playfieldRightEdge, 50),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.25);\n\n    this.m_specialTracker = new SpecialParticleTracker(this.m_world, this.m_particleSystem);\n\n    this.m_pumpTimer = 0;\n\n    this.SetupMaze();\n\n    // Create killfield shape and transform\n    this.m_killFieldShape = new b2.PolygonShape();\n    this.m_killFieldShape.SetAsBox(SandboxParams.k_playfieldRightEdge - SandboxParams.k_playfieldLeftEdge, 1);\n\n    // Put this at the bottom of the world\n    this.m_killFieldTransform = new b2.Transform();\n    const loc = new b2.Vec2(-20, 1);\n    this.m_killFieldTransform.SetPositionAngle(loc, 0);\n\n    // Setup particle parameters.\n    testbed.Test.SetParticleParameters(Sandbox.k_paramDef, Sandbox.k_paramDefCount);\n    this.m_particleFlags = testbed.Test.GetParticleParameterValue();\n    testbed.Test.SetRestartOnParticleParameterChange(false);\n  }\n\n  public __dtor__() {\n    // deallocate our emitters\n    for (let i = 0; i < this.m_faucetEmitterIndex; i++) {\n      ///  delete this.m_emitters[i];\n      this.m_emitters[i] = null;\n    }\n  }\n\n  // Create a maze of blocks, ramps, pumps, and faucets.\n  // The maze is defined in a string; feel free to modify it.\n  // Items in the maze include:\n  //   # = a block\n  //   / = a right-to-left ramp triangle\n  //   A = a left-to-right ramp triangle (can't be \\ or string formatting\n  //       would be weird)\n  //   r, g, b = colored faucets pointing down\n  //   p = a pump block that rocks back and forth.  You can drag them\n  //       yourself with your finger.\n  //   C = a loose circle\n  //   K = an ignored placeholder for a killfield to remove particles;\n  //       entire bottom row is a killfield.\n  public SetupMaze() {\n    const maze =\n      \"# r#g #r##\" +\n      \"  /#  #  #\" +\n      \" ###     p\" +\n      \"A  #  /###\" +\n      \"## # /#  C\" +\n      \"  /# #   #\" +\n      \" ### # / #\" +\n      \" ## p /#  \" +\n      \" #  ####  \" +\n      \"A        /\" +\n      \"#####KK###\";\n\n    // DEBUG: b2.Assert(maze.length === SandboxParams.k_tileWidth * SandboxParams.k_tileHeight);\n\n    this.m_faucetEmitterIndex = 0;\n    this.m_pumpIndex = 0;\n\n    // Set up some standard shapes/vertices we'll use later.\n    const boxShape = new b2.PolygonShape();\n    boxShape.SetAsBox(SandboxParams.k_tileRadius, SandboxParams.k_tileRadius);\n\n    ///  b2Vec2 triangle[3];\n    const triangle = b2.Vec2.MakeArray(3);\n    triangle[0].Set(-SandboxParams.k_tileRadius, -SandboxParams.k_tileRadius);\n    triangle[1].Set(SandboxParams.k_tileRadius, SandboxParams.k_tileRadius);\n    triangle[2].Set(SandboxParams.k_tileRadius, -SandboxParams.k_tileRadius);\n    const rightTriangleShape = new b2.PolygonShape();\n    rightTriangleShape.Set(triangle, 3);\n\n    triangle[1].Set(-SandboxParams.k_tileRadius, SandboxParams.k_tileRadius);\n    const leftTriangleShape = new b2.PolygonShape();\n    leftTriangleShape.Set(triangle, 3);\n\n    // Make these just a touch smaller than a tile\n    const circleShape = new b2.CircleShape();\n    circleShape.m_radius = SandboxParams.k_tileRadius * 0.7;\n\n    const red = new b2.Color().SetByteRGBA(255, 128, 128, 255);\n    const green = new b2.Color().SetByteRGBA(128, 255, 128, 255);\n    const blue = new b2.Color().SetByteRGBA(128, 128, 255, 255);\n\n    this.m_pumpForce.Set(SandboxParams.k_pumpForce, 0);\n\n    for (let i = 0; i < SandboxParams.k_tileWidth; i++) {\n      for (let j = 0; j < SandboxParams.k_tileHeight; j++) {\n        const item = maze[j * SandboxParams.k_tileWidth + i];\n\n        // Calculate center of this square\n        const center = new b2.Vec2(\n          SandboxParams.k_playfieldLeftEdge + SandboxParams.k_tileRadius * 2 * i + SandboxParams.k_tileRadius,\n          SandboxParams.k_playfieldBottomEdge - SandboxParams.k_tileRadius * 2 * j +\n          SandboxParams.k_tileRadius);\n\n        // Let's add some items\n        switch (item) {\n          case \"#\":\n            // Block\n            this.CreateBody(center, boxShape, b2.BodyType.b2_staticBody);\n            break;\n          case \"A\":\n            // Left-to-right ramp\n            this.CreateBody(center, leftTriangleShape, b2.BodyType.b2_staticBody);\n            break;\n          case \"/\":\n            // Right-to-left ramp\n            this.CreateBody(center, rightTriangleShape, b2.BodyType.b2_staticBody);\n            break;\n          case \"C\":\n            // A circle to play with\n            this.CreateBody(center, circleShape, b2.BodyType.b2_dynamicBody);\n            break;\n          case \"p\":\n            this.AddPump(center);\n            break;\n          case \"b\":\n            // Blue emitter\n            this.AddFaucetEmitter(center, blue);\n            break;\n          case \"r\":\n            // Red emitter\n            this.AddFaucetEmitter(center, red);\n            break;\n          case \"g\":\n            // Green emitter\n            this.AddFaucetEmitter(center, green);\n            break;\n          default:\n            // add nothing\n            break;\n        }\n      }\n    }\n  }\n\n  public CreateBody(center: b2.Vec2, shape: b2.Shape, type: b2.BodyType) {\n    const def = new b2.BodyDef();\n    def.position.Copy(center);\n    def.type = type;\n    const body = this.m_world.CreateBody(def);\n    body.CreateFixture(shape, 10.0);\n  }\n\n  // Inititalizes a pump and its prismatic joint, and adds it to the world\n  public AddPump(center: b2.Vec2) {\n    // Don't make too many pumps\n    // DEBUG: b2.Assert(this.m_pumpIndex < SandboxParams.k_maxPumps);\n\n    const shape = new b2.PolygonShape();\n    shape.SetAsBox(SandboxParams.k_pumpRadius, SandboxParams.k_pumpRadius);\n\n    const def = new b2.BodyDef();\n    def.position.Copy(center);\n    def.type = b2.BodyType.b2_dynamicBody;\n    def.angle = 0;\n    const body = this.m_world.CreateBody(def);\n    body.CreateFixture(shape, 5.0);\n\n    // Create a prismatic joint and connect to the ground, and have it\n    // slide along the x axis.\n    const prismaticJointDef = new b2.PrismaticJointDef();\n    prismaticJointDef.bodyA = this.m_groundBody;\n    prismaticJointDef.bodyB = body;\n    prismaticJointDef.collideConnected = false;\n    prismaticJointDef.localAxisA.Set(1, 0);\n    prismaticJointDef.localAnchorA.Copy(center);\n\n    this.m_world.CreateJoint(prismaticJointDef);\n\n    this.m_pumps[this.m_pumpIndex] = body;\n    this.m_pumpIndex++;\n  }\n\n  // Initializes and adds a faucet emitter\n  public AddFaucetEmitter(center: b2.Vec2, color: b2.Color) {\n    // Don't make too many emitters\n    // DEBUG: b2.Assert(this.m_faucetEmitterIndex < SandboxParams.k_maxPumps);\n\n    const startingVelocity = new b2.Vec2(0, SandboxParams.k_particleExitSpeedY);\n\n    const emitter = new testbed.RadialEmitter();\n    emitter.SetParticleSystem(this.m_particleSystem);\n    emitter.SetPosition(center);\n    emitter.SetVelocity(startingVelocity);\n    emitter.SetSize(new b2.Vec2(SandboxParams.k_defaultEmitterSize, 0.0));\n    emitter.SetEmitRate(SandboxParams.k_defaultEmitterRate);\n    emitter.SetColor(color);\n    this.m_emitters[this.m_faucetEmitterIndex] = emitter;\n    this.m_faucetEmitterIndex++;\n  }\n\n  public JointDestroyed(joint: b2.Joint): void {\n    super.JointDestroyed(joint);\n  }\n\n  public ParticleGroupDestroyed(group: b2.ParticleGroup): void {\n    super.ParticleGroupDestroyed(group);\n  }\n\n  public BeginContact(contact: b2.Contact): void {\n    super.BeginContact(contact);\n  }\n\n  public EndContact(contact: b2.Contact): void {\n    super.EndContact(contact);\n  }\n\n  public PreSolve(contact: b2.Contact, oldManifold: b2.Manifold): void {\n    super.PreSolve(contact, oldManifold);\n  }\n\n  public PostSolve(contact: b2.Contact, impulse: b2.ContactImpulse): void {\n    super.PostSolve(contact, impulse);\n  }\n\n  /**\n   * Allows you to set particle flags on devices with keyboards\n   */\n  public Keyboard(key: string): void {\n    super.Keyboard(key);\n    let toggle = 0;\n    switch (key) {\n      case \"a\":\n        this.m_particleFlags = 0;\n        break;\n      case \"q\":\n        toggle = b2.ParticleFlag.b2_powderParticle;\n        break;\n      case \"t\":\n        toggle = b2.ParticleFlag.b2_tensileParticle;\n        break;\n      case \"v\":\n        toggle = b2.ParticleFlag.b2_viscousParticle;\n        break;\n      case \"w\":\n        toggle = b2.ParticleFlag.b2_wallParticle;\n        break;\n    }\n    if (toggle) {\n      if (this.m_particleFlags & toggle) {\n        this.m_particleFlags = this.m_particleFlags & ~toggle;\n      } else {\n        this.m_particleFlags = this.m_particleFlags | toggle;\n      }\n    }\n    testbed.Test.SetParticleParameterValue(this.m_particleFlags);\n  }\n\n  public KeyboardUp(key: string): void {\n    super.KeyboardUp(key);\n  }\n\n  public MouseDown(p: b2.Vec2): void {\n    super.MouseDown(p);\n  }\n\n  public MouseUp(p: b2.Vec2): void {\n    super.MouseUp(p);\n  }\n\n  public MouseMove(p: b2.Vec2): void {\n    super.MouseMove(p);\n  }\n\n  /**\n   * Per-frame step updater overridden from Test\n   */\n  public Step(settings: testbed.Settings): void {\n    let dt = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n    if (settings.m_pause && !settings.m_singleStep) {\n      dt = 0.0;\n    }\n    super.Step(settings);\n\n    this.m_particleFlags = testbed.Test.GetParticleParameterValue();\n\n    // Step all the emitters\n    for (let i = 0; i < this.m_faucetEmitterIndex; i++) {\n      const particleIndices: number[] = [];\n      const emitter = this.m_emitters[i];\n      if (emitter) {\n        emitter.SetParticleFlags(this.m_particleFlags);\n        const particlesCreated = emitter.Step(dt, particleIndices, SandboxParams.k_numberOfSpecialParticles);\n        this.m_specialTracker.Add(particleIndices, particlesCreated);\n      }\n    }\n\n    // Step the special tracker.\n    this.m_specialTracker.Step(dt);\n\n    // Do killfield work--kill every particle near the bottom of the screen\n    this.m_particleSystem.DestroyParticlesInShape(this.m_killFieldShape, this.m_killFieldTransform);\n\n    // Move the pumps\n    for (let i = 0; i < this.m_pumpIndex; i++) {\n      const pump = this.m_pumps[i];\n      if (pump) {\n        // Pumps can and will clog up if the pile of particles they're\n        // trying to push is too heavy. Increase k_pumpForce to make\n        // stronger pumps.\n        pump.ApplyForceToCenter(this.m_pumpForce, true);\n      }\n\n      this.m_pumpTimer += dt;\n\n      // Reset pump to go back right again\n      if (this.m_pumpTimer > SandboxParams.k_flipTime) {\n        this.m_pumpTimer -= SandboxParams.k_flipTime;\n        this.m_pumpForce.x *= -1;\n      }\n    }\n\n    testbed.g_debugDraw.DrawString(\n      5, this.m_textLine, \"Keys: (a) zero out (water), (q) powder\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n    testbed.g_debugDraw.DrawString(\n      5, this.m_textLine, \"      (t) tensile, (v) viscous\");\n    this.m_textLine += testbed.DRAW_STRING_NEW_LINE;\n  }\n\n  public GetDefaultViewZoom(): number {\n    return super.GetDefaultViewZoom();\n  }\n\n  public static Create() {\n    return new Sandbox();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Sandbox\", Sandbox.Create);\n\n// #endif\n","/*\n * Copyright (c) 2013 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class Soup extends testbed.Test {\n  public m_ground: b2.Body;\n\n  constructor() {\n    super();\n\n    // Disable the selection of wall and barrier particles for this test.\n    this.InitializeParticleParameters(b2.ParticleFlag.b2_wallParticle | b2.ParticleFlag.b2_barrierParticle);\n\n    {\n      const bd = new b2.BodyDef();\n      this.m_ground = this.m_world.CreateBody(bd);\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -1),\n          new b2.Vec2(4, -1),\n          new b2.Vec2(4, 0),\n          new b2.Vec2(-4, 0),\n        ];\n        shape.Set(vertices, 4);\n        this.m_ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-4, -0.1),\n          new b2.Vec2(-2, -0.1),\n          new b2.Vec2(-2, 2),\n          new b2.Vec2(-4, 3),\n        ];\n        shape.Set(vertices, 4);\n        this.m_ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(2, -0.1),\n          new b2.Vec2(4, -0.1),\n          new b2.Vec2(4, 3),\n          new b2.Vec2(2, 2),\n        ];\n        shape.Set(vertices, 4);\n        this.m_ground.CreateFixture(shape, 0.0);\n      }\n    }\n\n    this.m_particleSystem.SetRadius(0.035 * 2); // HACK: increase particle radius\n    {\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(2, 1, new b2.Vec2(0, 1), 0);\n      const pd = new b2.ParticleGroupDef();\n      pd.shape = shape;\n      pd.flags = testbed.Test.GetParticleParameterValue();\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(0, 0.5);\n      shape.m_radius = 0.1;\n      body.CreateFixture(shape, 0.1);\n      this.m_particleSystem.DestroyParticlesInShape(shape, body.GetTransform());\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.1, 0.1, new b2.Vec2(-1, 0.5), 0);\n      body.CreateFixture(shape, 0.1);\n      this.m_particleSystem.DestroyParticlesInShape(shape, body.GetTransform());\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.1, 0.1, new b2.Vec2(1, 0.5), 0.5);\n      body.CreateFixture(shape, 0.1);\n      this.m_particleSystem.DestroyParticlesInShape(shape, body.GetTransform());\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(0, 2), new b2.Vec2(0.1, 2.1));\n      body.CreateFixture(shape, 1);\n      ///  b2MassData massData = {0.1f, 0.5f * (shape.m_vertex1 + shape.m_vertex2), 0.0f};\n      const massData = new b2.MassData();\n      massData.mass = 0.1;\n      massData.center.x = 0.5 * shape.m_vertex1.x + shape.m_vertex2.x;\n      massData.center.y = 0.5 * shape.m_vertex1.y + shape.m_vertex2.y;\n      massData.I = 0.0;\n      body.SetMassData(massData);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(0.3, 2.0), new b2.Vec2(0.4, 2.1));\n      body.CreateFixture(shape, 1);\n      ///  b2MassData massData = {0.1f, 0.5f * (shape.m_vertex1 + shape.m_vertex2), 0.0f};\n      const massData = new b2.MassData();\n      massData.mass = 0.1;\n      massData.center.x = 0.5 * shape.m_vertex1.x + shape.m_vertex2.x;\n      massData.center.y = 0.5 * shape.m_vertex1.y + shape.m_vertex2.y;\n      massData.I = 0.0;\n      body.SetMassData(massData);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.EdgeShape();\n      shape.SetTwoSided(new b2.Vec2(-0.3, 2.1), new b2.Vec2(-0.2, 2.0));\n      body.CreateFixture(shape, 1);\n      ///  b2MassData massData = {0.1f, 0.5f * (shape.m_vertex1 + shape.m_vertex2), 0.0f};\n      const massData = new b2.MassData();\n      massData.mass = 0.1;\n      massData.center.x = 0.5 * shape.m_vertex1.x + shape.m_vertex2.x;\n      massData.center.y = 0.5 * shape.m_vertex1.y + shape.m_vertex2.y;\n      massData.I = 0.0;\n      body.SetMassData(massData);\n    }\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new Soup();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Soup\", Soup.Create);\n\n// #endif\n","/*\n * Copyright (c) 2014 Google, Inc.\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\nimport { Soup } from \"./soup.js\";\n\nexport class SoupStirrer extends Soup {\n  public m_stirrer: b2.Body;\n  public m_joint: b2.Joint | null = null;\n  public m_oscillationOffset = 0.0;\n\n  constructor() {\n    super();\n\n    this.m_particleSystem.SetDamping(1.0);\n\n    // Shape of the stirrer.\n    const shape = new b2.CircleShape();\n    shape.m_p.Set(0, 0.7);\n    shape.m_radius = 0.4;\n\n    // Create the stirrer.\n    const bd = new b2.BodyDef();\n    bd.type = b2.BodyType.b2_dynamicBody;\n    this.m_stirrer = this.m_world.CreateBody(bd);\n    this.m_stirrer.CreateFixture(shape, 1.0);\n\n    // Destroy all particles under the stirrer.\n    const xf = new b2.Transform();\n    xf.SetIdentity();\n    this.m_particleSystem.DestroyParticlesInShape(shape, xf);\n\n    // By default attach the body to a joint to restrict movement.\n    this.CreateJoint();\n  }\n\n  public CreateJoint() {\n    // DEBUG: b2.Assert(!this.m_joint);\n    // Create a prismatic joint and connect to the ground, and have it\n    // slide along the x axis.\n    // Disconnect the body from this joint to have more fun.\n    const prismaticJointDef = new b2.PrismaticJointDef();\n    prismaticJointDef.bodyA = this.m_groundBody;\n    prismaticJointDef.bodyB = this.m_stirrer;\n    prismaticJointDef.collideConnected = true;\n    prismaticJointDef.localAxisA.Set(1, 0);\n    prismaticJointDef.localAnchorA.Copy(this.m_stirrer.GetPosition());\n    this.m_joint = this.m_world.CreateJoint(prismaticJointDef);\n  }\n\n  /**\n   * Enable the joint if it's disabled, disable it if it's\n   * enabled.\n   */\n  public ToggleJoint() {\n    if (this.m_joint) {\n      this.m_world.DestroyJoint(this.m_joint);\n      this.m_joint = null;\n    } else {\n      this.CreateJoint();\n    }\n  }\n\n  /**\n   * Press \"t\" to enable / disable the joint restricting the\n   * stirrer's movement.\n   */\n  public Keyboard(key: string) {\n    switch (key) {\n      case \"t\":\n        this.ToggleJoint();\n        break;\n      default:\n        super.Keyboard(key);\n        break;\n    }\n  }\n\n  /**\n   * Click the soup to toggle between enabling / disabling the\n   * joint.\n   */\n  public MouseUp(p: b2.Vec2) {\n    super.MouseUp(p);\n    if (this.InSoup(p)) {\n      this.ToggleJoint();\n    }\n  }\n\n  /**\n   * Determine whether a point is in the soup.\n   */\n  public InSoup(pos: b2.Vec2) {\n    // The soup dimensions are from the container initialization in the\n    // Soup test.\n    return pos.y > -1.0 && pos.y < 2.0 && pos.x > -3.0 && pos.x < 3.0;\n  }\n\n  /**\n   * Apply a force to the stirrer.\n   */\n  public Step(settings: testbed.Settings) {\n    // Magnitude of the force applied to the body.\n    const k_forceMagnitude = 10.0;\n    // How often the force vector rotates.\n    const k_forceOscillationPerSecond = 0.2;\n    const k_forceOscillationPeriod = 1.0 / k_forceOscillationPerSecond;\n    // Maximum speed of the body.\n    const k_maxSpeed = 2.0;\n\n    this.m_oscillationOffset += (1.0 / settings.m_hertz);\n    if (this.m_oscillationOffset > k_forceOscillationPeriod) {\n      this.m_oscillationOffset -= k_forceOscillationPeriod;\n    }\n\n    // Calculate the force vector.\n    const forceAngle = this.m_oscillationOffset * k_forceOscillationPerSecond * 2.0 * b2.pi;\n    const forceVector = new b2.Vec2(Math.sin(forceAngle), Math.cos(forceAngle)).SelfMul(k_forceMagnitude);\n\n    // Only apply force to the body when it's within the soup.\n    if (this.InSoup(this.m_stirrer.GetPosition()) &&\n      this.m_stirrer.GetLinearVelocity().Length() < k_maxSpeed) {\n      this.m_stirrer.ApplyForceToCenter(forceVector, true);\n    }\n    super.Step(settings);\n  }\n\n  public static Create() {\n    return new SoupStirrer();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Soup Stirrer\", SoupStirrer.Create);\n\n// #endif\n","/*\n* Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n*\n* This software is provided 'as-is', without any express or implied\n* warranty.  In no event will the authors be held liable for any damages\n* arising from the use of this software.\n* Permission is granted to anyone to use this software for any purpose,\n* including commercial applications, and to alter it and redistribute it\n* freely, subject to the following restrictions:\n* 1. The origin of this software must not be misrepresented; you must not\n* claim that you wrote the original software. If you use this software\n* in a product, an acknowledgment in the product documentation would be\n* appreciated but is not required.\n* 2. Altered source versions must be plainly marked as such, and must not be\n* misrepresented as being the original software.\n* 3. This notice may not be removed or altered from any source distribution.\n*/\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nclass ParticleVFX {\n  private m_initialLifetime = 0.0;\n  private m_remainingLifetime = 0.0;\n  private m_halfLifetime = 0.0;\n  private m_pg: b2.ParticleGroup;\n  private m_particleSystem: b2.ParticleSystem;\n  private m_origColor: b2.Color = new b2.Color();\n  constructor(particleSystem: b2.ParticleSystem, origin: b2.Vec2, size: number, speed: number, lifetime: number, particleFlags: b2.ParticleFlag) {\n    // Create a circle to house the particles of size size\n    const shape = new b2.CircleShape();\n    shape.m_p.Copy(origin);\n    shape.m_radius = size;\n\n    // Create particle def of random color.\n    const pd = new b2.ParticleGroupDef();\n    pd.flags = particleFlags;\n    pd.shape = shape;\n    // this.m_origColor.Set(\n    //   Math.random(),\n    //   Math.random(),\n    //   Math.random(),\n    //   1.0);\n    function hue2rgb(p: number, q: number, t: number) {\n      if (t < 0) { t += 1; }\n      if (t > 1) { t -= 1; }\n      if (t < 1 / 6) { return p + (q - p) * 6 * t; }\n      if (t < 1 / 2) { return q; }\n      if (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n      return p;\n    }\n    function hslToRgb(h: number, s: number, l: number, a: number = 1): b2.RGBA {\n      let r, g, b;\n      if (s === 0) {\n        r = g = b = l; // achromatic\n      } else {\n        const q: number = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p: number = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n      return { r, g, b, a };\n    }\n    this.m_origColor.Copy(hslToRgb(Math.random(), 1, 0.5));\n    pd.color.Copy(this.m_origColor);\n    this.m_particleSystem = particleSystem;\n\n    // Create a circle full of particles\n    this.m_pg = this.m_particleSystem.CreateParticleGroup(pd);\n\n    this.m_initialLifetime = this.m_remainingLifetime = lifetime;\n    this.m_halfLifetime = this.m_initialLifetime * 0.5;\n\n    // Set particle initial velocity based on how far away it is from\n    // origin, exploding outwards.\n    const bufferIndex = this.m_pg.GetBufferIndex();\n    const pos = this.m_particleSystem.GetPositionBuffer();\n    const vel = this.m_particleSystem.GetVelocityBuffer();\n    for (let i = bufferIndex; i < bufferIndex + this.m_pg.GetParticleCount(); i++) {\n      ///  vel[i] = pos[i] - origin;\n      b2.Vec2.SubVV(pos[i], origin, vel[i]);\n      ///  vel[i] *= speed;\n      b2.Vec2.MulVS(vel[i], speed, vel[i]);\n    }\n  }\n  public Drop() {\n    this.m_pg.DestroyParticles(false);\n    // this.m_pg = null;\n  }\n  public ColorCoeff() {\n    if (this.m_remainingLifetime >= this.m_halfLifetime) {\n      return 1.0;\n    }\n    return 1.0 - ((this.m_halfLifetime - this.m_remainingLifetime) / this.m_halfLifetime);\n  }\n  public Step(dt: number) {\n    if (dt > 0 && this.m_remainingLifetime > 0.0) {\n      this.m_remainingLifetime = Math.max(this.m_remainingLifetime - dt, 0.0);\n      const coeff = this.ColorCoeff();\n\n      const colors = this.m_particleSystem.GetColorBuffer();\n      const bufferIndex = this.m_pg.GetBufferIndex();\n\n      // Set particle colors all at once.\n      for (let i = bufferIndex; i < bufferIndex + this.m_pg.GetParticleCount(); i++) {\n        const c = colors[i];\n        // c *= coeff;\n        // c.SelfMul(coeff);\n        // c.a = this.m_origColor.a;\n        c.a *= coeff;\n      }\n    }\n  }\n  public IsDone() {\n    return this.m_remainingLifetime <= 0.0;\n  }\n}\n\nexport class Sparky extends testbed.Test {\n  private static c_maxCircles = 3; ///6;\n  private static c_maxVFX = 20; ///50;\n  private static SHAPE_HEIGHT_OFFSET = 7;\n  private static SHAPE_OFFSET = 4.5;\n  private m_VFXIndex: number = 0;\n  private m_VFX: Array<ParticleVFX | null> = [];\n  private m_contact: boolean = false;\n  private m_contactPoint: b2.Vec2 = new b2.Vec2();\n  constructor() {\n    super();\n\n    // Set up array of sparks trackers.\n    this.m_VFXIndex = 0;\n\n    for (let i = 0; i < Sparky.c_maxVFX; i++) {\n      this.m_VFX[i] = null;\n    }\n\n    this.CreateWalls();\n    this.m_particleSystem.SetRadius(0.25 * 2); // HACK: increase particle radius\n\n    // Create a list of circles that will spark.\n    for (let i = 0; i < Sparky.c_maxCircles; i++) {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      const body = this.m_world.CreateBody(bd);\n      const shape = new b2.CircleShape();\n      shape.m_p.Set(3.0 * testbed.RandomFloat(),\n        Sparky.SHAPE_HEIGHT_OFFSET + Sparky.SHAPE_OFFSET * i);\n      shape.m_radius = 2;\n      const f = body.CreateFixture(shape, 0.5);\n      // Tag this as a sparkable body.\n      f.SetUserData({\n        spark: true,\n      });\n    }\n\n    testbed.Test.SetRestartOnParticleParameterChange(false);\n    testbed.Test.SetParticleParameterValue(b2.ParticleFlag.b2_powderParticle);\n  }\n\n  public BeginContact(contact: b2.Contact) {\n    super.BeginContact(contact);\n    // Check to see if these are two circles hitting one another.\n    const userA = contact.GetFixtureA().GetUserData();\n    const userB = contact.GetFixtureB().GetUserData();\n    if ((userA && userA.spark) ||\n      (userB && userB.spark)) {\n      const worldManifold = new b2.WorldManifold();\n      contact.GetWorldManifold(worldManifold);\n\n      // Note that we overwrite any contact; if there are two collisions\n      // on the same frame, only the last one showers sparks.\n      // Two collisions are rare, and this also guarantees we will not\n      // run out of places to store ParticleVFX explosions.\n      this.m_contactPoint.Copy(worldManifold.points[0]);\n      this.m_contact = true;\n    }\n  }\n\n  public Step(settings: testbed.Settings): void {\n    const particleFlags = testbed.Test.GetParticleParameterValue();\n    let dt = settings.m_hertz > 0.0 ? 1.0 / settings.m_hertz : 0.0;\n    if (settings.m_pause && !settings.m_singleStep) {\n      dt = 0.0;\n    }\n\n    super.Step(settings);\n\n    // If there was a contacts...\n    if (this.m_contact) {\n      // ...explode!\n      this.AddVFX(this.m_contactPoint, particleFlags);\n      this.m_contact = false;\n    }\n\n    // Step particle explosions.\n    for (let i = 0; i < Sparky.c_maxVFX; i++) {\n      const vfx = this.m_VFX[i];\n      if (vfx === null) {\n        continue;\n      }\n      vfx.Step(dt);\n      if (vfx.IsDone()) {\n        /// delete vfx;\n        vfx.Drop();\n        this.m_VFX[i] = null;\n      }\n    }\n  }\n\n  public AddVFX(p: b2.Vec2, particleFlags: b2.ParticleFlag) {\n    const vfx = this.m_VFX[this.m_VFXIndex];\n    if (vfx !== null) {\n      /// delete vfx;\n      vfx.Drop();\n      this.m_VFX[this.m_VFXIndex] = null;\n    }\n    this.m_VFX[this.m_VFXIndex] = new ParticleVFX(\n      this.m_particleSystem, p, testbed.RandomFloat(1.0, 2.0), testbed.RandomFloat(10.0, 20.0),\n      testbed.RandomFloat(0.5, 1.0), particleFlags);\n    if (++this.m_VFXIndex >= Sparky.c_maxVFX) {\n      this.m_VFXIndex = 0;\n    }\n  }\n\n  public CreateWalls() {\n    // Create the walls of the world.\n    {\n      const bd = new b2.BodyDef();\n      const ground = this.m_world.CreateBody(bd);\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-40, -10),\n          new b2.Vec2(40, -10),\n          new b2.Vec2(40, 0),\n          new b2.Vec2(-40, 0),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-40, 40),\n          new b2.Vec2(40, 40),\n          new b2.Vec2(40, 50),\n          new b2.Vec2(-40, 50),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(-40, -10),\n          new b2.Vec2(-20, -10),\n          new b2.Vec2(-20, 50),\n          new b2.Vec2(-40, 50),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n\n      {\n        const shape = new b2.PolygonShape();\n        const vertices = [\n          new b2.Vec2(20, -10),\n          new b2.Vec2(40, -10),\n          new b2.Vec2(40, 50),\n          new b2.Vec2(20, 50),\n        ];\n        shape.Set(vertices, 4);\n        ground.CreateFixture(shape, 0.0);\n      }\n    }\n  }\n\n  public static Create(): testbed.Test {\n    return new Sparky();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Sparky\", Sparky.Create);\n\n// #endif\n","/*\n * Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\n// #if B2_ENABLE_PARTICLE\n\nimport * as b2 from \"@box2d\";\nimport * as testbed from \"@testbed\";\n\nexport class WaveMachine extends testbed.Test {\n  public m_joint: b2.RevoluteJoint;\n  public m_time = 0;\n\n  constructor() {\n    super();\n\n    let ground = null;\n    {\n      const bd = new b2.BodyDef();\n      ground = this.m_world.CreateBody(bd);\n    }\n\n    {\n      const bd = new b2.BodyDef();\n      bd.type = b2.BodyType.b2_dynamicBody;\n      bd.allowSleep = false;\n      bd.position.Set(0.0, 1.0);\n      const body = this.m_world.CreateBody(bd);\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.05, 1.0, new b2.Vec2(2.0, 0.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n      shape.SetAsBox(0.05, 1.0, new b2.Vec2(-2.0, 0.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n      shape.SetAsBox(2.0, 0.05, new b2.Vec2(0.0, 1.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n      shape.SetAsBox(2.0, 0.05, new b2.Vec2(0.0, -1.0), 0.0);\n      body.CreateFixture(shape, 5.0);\n\n      const jd = new b2.RevoluteJointDef();\n      jd.bodyA = ground;\n      jd.bodyB = body;\n      jd.localAnchorA.Set(0.0, 1.0);\n      jd.localAnchorB.Set(0.0, 0.0);\n      jd.referenceAngle = 0.0;\n      jd.motorSpeed = 0.05 * b2.pi;\n      jd.maxMotorTorque = 1e7;\n      jd.enableMotor = true;\n      this.m_joint = this.m_world.CreateJoint(jd);\n    }\n\n    this.m_particleSystem.SetRadius(0.025 * 2); // HACK: increase particle radius\n    const particleType = testbed.Test.GetParticleParameterValue();\n    this.m_particleSystem.SetDamping(0.2);\n\n    {\n      const pd = new b2.ParticleGroupDef();\n      pd.flags = particleType;\n\n      const shape = new b2.PolygonShape();\n      shape.SetAsBox(0.9, 0.9, new b2.Vec2(0.0, 1.0), 0.0);\n\n      pd.shape = shape;\n      const group = this.m_particleSystem.CreateParticleGroup(pd);\n      if (pd.flags & b2.ParticleFlag.b2_colorMixingParticle) {\n        this.ColorParticleGroup(group, 0);\n      }\n    }\n\n    this.m_time = 0;\n  }\n\n  public Step(settings: testbed.Settings) {\n    super.Step(settings);\n    if (settings.m_hertz > 0) {\n      this.m_time += 1 / settings.m_hertz;\n    }\n    this.m_joint.SetMotorSpeed(0.05 * Math.cos(this.m_time) * b2.pi);\n  }\n\n  public GetDefaultViewZoom() {\n    return 0.1;\n  }\n\n  public static Create() {\n    return new WaveMachine();\n  }\n}\n\nexport const testIndex: number = testbed.RegisterTest(\"Particles\", \"Wave Machine\", WaveMachine.Create);\n\n// #endif\n","// MIT License\n\n// Copyright (c) 2019 Erin Catto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport * as b2 from \"@box2d\";\nimport { Settings } from \"./settings.js\";\nimport { Test, g_testEntries } from \"./test.js\";\nimport { g_debugDraw, g_camera } from \"./draw.js\";\n\nexport class Main {\n  public m_time_last: number = 0;\n  public m_fps_time: number = 0;\n  public m_fps_frames: number = 0;\n  public m_fps: number = 0;\n  public m_fps_div: HTMLDivElement;\n  public m_debug_div: HTMLDivElement;\n  public readonly m_settings: Settings = new Settings();\n  public m_test?: Test;\n  public m_test_select: HTMLSelectElement;\n  public m_test_options: HTMLOptionElement[];\n  public m_shift: boolean = false;\n  public m_ctrl: boolean = false;\n  public m_lMouseDown: boolean = false;\n  public m_rMouseDown: boolean = false;\n  public readonly m_projection0: b2.Vec2 = new b2.Vec2();\n  public readonly m_viewCenter0: b2.Vec2 = new b2.Vec2();\n  public m_demo_mode: boolean = false;\n  public m_demo_time: number = 0;\n  public m_max_demo_time: number = 1000 * 10;\n  public m_canvas_div: HTMLDivElement;\n  public m_canvas_2d: HTMLCanvasElement;\n  public m_ctx: CanvasRenderingContext2D | null = null;\n  public m_demo_button: HTMLInputElement;\n\n  constructor(time: number) {\n    const fps_div: HTMLDivElement = this.m_fps_div = document.body.appendChild(document.createElement(\"div\"));\n    fps_div.style.position = \"absolute\";\n    fps_div.style.left = \"0px\";\n    fps_div.style.bottom = \"0px\";\n    fps_div.style.backgroundColor = \"rgba(0,0,255,0.75)\";\n    fps_div.style.color = \"white\";\n    fps_div.style.font = \"10pt Courier New\";\n    fps_div.style.zIndex = \"256\";\n    fps_div.innerHTML = \"FPS\";\n\n    const debug_div: HTMLDivElement = this.m_debug_div = document.body.appendChild(document.createElement(\"div\"));\n    debug_div.style.position = \"absolute\";\n    debug_div.style.left = \"0px\";\n    debug_div.style.bottom = \"0px\";\n    debug_div.style.backgroundColor = \"rgba(0,0,255,0.75)\";\n    debug_div.style.color = \"white\";\n    debug_div.style.font = \"10pt Courier New\";\n    debug_div.style.zIndex = \"256\";\n    debug_div.innerHTML = \"\";\n\n    document.body.style.backgroundColor = \"rgba(51, 51, 51, 1.0)\";\n\n    const main_div: HTMLDivElement = document.body.appendChild(document.createElement(\"div\"));\n    main_div.style.position = \"absolute\"; // relative to document.body\n    main_div.style.left = \"0px\";\n    main_div.style.top = \"0px\";\n\n    function resize_main_div(): void {\n      // console.log(window.innerWidth + \"x\" + window.innerHeight);\n      main_div.style.width = window.innerWidth + \"px\";\n      main_div.style.height = window.innerHeight + \"px\";\n    }\n    window.addEventListener(\"resize\", (e: UIEvent): void => { resize_main_div(); });\n    window.addEventListener(\"orientationchange\", (e: Event): void => { resize_main_div(); });\n    resize_main_div();\n\n    const title_div: HTMLDivElement = main_div.appendChild(document.createElement(\"div\"));\n    title_div.style.textAlign = \"center\";\n    title_div.style.color = \"grey\";\n    title_div.innerHTML = \"Box2D Testbed version \" + b2.version.toString();\n\n    const view_div: HTMLDivElement = main_div.appendChild(document.createElement(\"div\"));\n\n    const canvas_div: HTMLDivElement = this.m_canvas_div = view_div.appendChild(document.createElement(\"div\"));\n    canvas_div.style.position = \"absolute\"; // relative to view_div\n    canvas_div.style.left = \"0px\";\n    canvas_div.style.right = \"0px\";\n    canvas_div.style.top = \"0px\";\n    canvas_div.style.bottom = \"0px\";\n\n    const canvas_2d: HTMLCanvasElement = this.m_canvas_2d = canvas_div.appendChild(document.createElement(\"canvas\"));\n\n    function resize_canvas(): void {\n      ///console.log(canvas_div.clientWidth + \"x\" + canvas_div.clientHeight);\n      if (canvas_2d.width !== canvas_div.clientWidth) {\n        g_camera.m_width = canvas_2d.width = canvas_div.clientWidth;\n      }\n      if (canvas_2d.height !== canvas_div.clientHeight) {\n        g_camera.m_height = canvas_2d.height = canvas_div.clientHeight;\n      }\n    }\n    window.addEventListener(\"resize\", (e: UIEvent): void => { resize_canvas(); });\n    window.addEventListener(\"orientationchange\", (e: Event): void => { resize_canvas(); });\n    resize_canvas();\n\n    g_debugDraw.m_ctx = this.m_ctx = this.m_canvas_2d.getContext(\"2d\");\n\n    const controls_div: HTMLDivElement = view_div.appendChild(document.createElement(\"div\"));\n    controls_div.style.position = \"absolute\"; // relative to view_div\n    controls_div.style.backgroundColor = \"rgba(255,255,255,0.5)\";\n    controls_div.style.padding = \"8px\";\n    controls_div.style.right = \"0px\";\n    controls_div.style.top = \"0px\";\n    controls_div.style.bottom = \"0px\";\n    controls_div.style.overflowY = \"scroll\";\n\n    // tests select box\n    controls_div.appendChild(document.createTextNode(\"Tests\"));\n    controls_div.appendChild(document.createElement(\"br\"));\n    const test_select: HTMLSelectElement = document.createElement(\"select\");\n    const test_options: HTMLOptionElement[] = [];\n    for (let i: number = 0; i < g_testEntries.length; ++i) {\n      const option: HTMLOptionElement = document.createElement(\"option\");\n      option.text = `${g_testEntries[i].category}:${g_testEntries[i].name}`;\n      option.value = i.toString();\n      test_options.push(option);\n    }\n    test_options.sort((a: HTMLOptionElement, b: HTMLOptionElement) => a.text.localeCompare(b.text));\n    for (let i: number = 0; i < test_options.length; ++i) {\n      const option: HTMLOptionElement = test_options[i];\n      test_select.add(option);\n    }\n    test_select.selectedIndex = this.m_settings.m_testIndex = 77;\n    test_select.addEventListener(\"change\", (e: Event): void => {\n      this.m_settings.m_testIndex = test_select.selectedIndex;\n      this.LoadTest();\n    });\n    controls_div.appendChild(test_select);\n    this.m_test_select = test_select;\n    this.m_test_options = test_options;\n    controls_div.appendChild(document.createElement(\"br\"));\n\n    controls_div.appendChild(document.createElement(\"hr\"));\n\n    // simulation number inputs\n    function connect_number_input(parent: Node, label: string, init: number, update: (value: number) => void, min: number, max: number, step: number): HTMLInputElement {\n      const number_input_tr: HTMLTableRowElement = parent.appendChild(document.createElement(\"tr\"));\n      const number_input_td0: HTMLTableDataCellElement = number_input_tr.appendChild(document.createElement(\"td\"));\n      number_input_td0.align = \"right\";\n      number_input_td0.appendChild(document.createTextNode(label));\n      const number_input_td1: HTMLTableDataCellElement = number_input_tr.appendChild(document.createElement(\"td\"));\n      const number_input: HTMLInputElement = document.createElement(\"input\");\n      number_input.size = 8;\n      number_input.min = min.toString();\n      number_input.max = max.toString();\n      number_input.step = step.toString();\n      number_input.value = init.toString();\n      number_input.addEventListener(\"change\", (e: Event): void => {\n        update(parseInt(number_input.value, 10));\n      });\n      number_input_td1.appendChild(number_input);\n      return number_input;\n    }\n\n    const number_input_table: HTMLTableElement = controls_div.appendChild(document.createElement(\"table\"));\n    connect_number_input(number_input_table, \"Vel Iters\", this.m_settings.m_velocityIterations, (value: number): void => { this.m_settings.m_velocityIterations = value; }, 1, 20, 1);\n    connect_number_input(number_input_table, \"Pos Iters\", this.m_settings.m_positionIterations, (value: number): void => { this.m_settings.m_positionIterations = value; }, 1, 20, 1);\n    // #if B2_ENABLE_PARTICLE\n    connect_number_input(number_input_table, \"Pcl Iters\", this.m_settings.m_particleIterations, (value: number): void => { this.m_settings.m_particleIterations = value; }, 1, 100, 1);\n    // #endif\n    connect_number_input(number_input_table, \"Hertz\", this.m_settings.m_hertz, (value: number): void => { this.m_settings.m_hertz = value; }, 10, 120, 1);\n\n    // simulation checkbox inputs\n    function connect_checkbox_input(parent: Node, label: string, init: boolean, update: (value: boolean) => void): HTMLInputElement {\n      const checkbox_input: HTMLInputElement = document.createElement(\"input\");\n      checkbox_input.type = \"checkbox\";\n      checkbox_input.checked = init;\n      checkbox_input.addEventListener(\"click\", (e: MouseEvent): void => {\n        update(checkbox_input.checked);\n      });\n      parent.appendChild(checkbox_input);\n      parent.appendChild(document.createTextNode(label));\n      parent.appendChild(document.createElement(\"br\"));\n      return checkbox_input;\n    }\n\n    connect_checkbox_input(controls_div, \"Sleep\", this.m_settings.m_enableSleep, (value: boolean): void => { this.m_settings.m_enableSleep = value; });\n    connect_checkbox_input(controls_div, \"Warm Starting\", this.m_settings.m_enableWarmStarting, (value: boolean): void => { this.m_settings.m_enableWarmStarting = value; });\n    connect_checkbox_input(controls_div, \"Time of Impact\", this.m_settings.m_enableContinuous, (value: boolean): void => { this.m_settings.m_enableContinuous = value; });\n    connect_checkbox_input(controls_div, \"Sub-Stepping\", this.m_settings.m_enableSubStepping, (value: boolean): void => { this.m_settings.m_enableSubStepping = value; });\n    // #if B2_ENABLE_PARTICLE\n    connect_checkbox_input(controls_div, \"Strict Particle/Body Contacts\", this.m_settings.m_strictContacts, (value: boolean): void => { this.m_settings.m_strictContacts = value; });\n    // #endif\n\n    // draw checkbox inputs\n    const draw_fieldset: HTMLFieldSetElement = controls_div.appendChild(document.createElement(\"fieldset\"));\n    const draw_legend: HTMLLegendElement = draw_fieldset.appendChild(document.createElement(\"legend\"));\n    draw_legend.appendChild(document.createTextNode(\"Draw\"));\n    connect_checkbox_input(draw_fieldset, \"Shapes\", this.m_settings.m_drawShapes, (value: boolean): void => { this.m_settings.m_drawShapes = value; });\n    // #if B2_ENABLE_PARTICLE\n    connect_checkbox_input(draw_fieldset, \"Particles\", this.m_settings.m_drawParticles, (value: boolean): void => { this.m_settings.m_drawParticles = value; });\n    // #endif\n    connect_checkbox_input(draw_fieldset, \"Joints\", this.m_settings.m_drawJoints, (value: boolean): void => { this.m_settings.m_drawJoints = value; });\n    connect_checkbox_input(draw_fieldset, \"AABBs\", this.m_settings.m_drawAABBs, (value: boolean): void => { this.m_settings.m_drawAABBs = value; });\n    connect_checkbox_input(draw_fieldset, \"Contact Points\", this.m_settings.m_drawContactPoints, (value: boolean): void => { this.m_settings.m_drawContactPoints = value; });\n    connect_checkbox_input(draw_fieldset, \"Contact Normals\", this.m_settings.m_drawContactNormals, (value: boolean): void => { this.m_settings.m_drawContactNormals = value; });\n    connect_checkbox_input(draw_fieldset, \"Contact Impulses\", this.m_settings.m_drawContactImpulse, (value: boolean): void => { this.m_settings.m_drawContactImpulse = value; });\n    connect_checkbox_input(draw_fieldset, \"Friction Impulses\", this.m_settings.m_drawFrictionImpulse, (value: boolean): void => { this.m_settings.m_drawFrictionImpulse = value; });\n    connect_checkbox_input(draw_fieldset, \"Center of Masses\", this.m_settings.m_drawCOMs, (value: boolean): void => { this.m_settings.m_drawCOMs = value; });\n    connect_checkbox_input(draw_fieldset, \"Statistics\", this.m_settings.m_drawStats, (value: boolean): void => { this.m_settings.m_drawStats = value; });\n    connect_checkbox_input(draw_fieldset, \"Profile\", this.m_settings.m_drawProfile, (value: boolean): void => { this.m_settings.m_drawProfile = value; });\n\n    // simulation buttons\n    function connect_button_input(parent: Node, label: string, callback: (e: MouseEvent) => void): HTMLInputElement {\n      const button_input: HTMLInputElement = document.createElement(\"input\");\n      button_input.type = \"button\";\n      button_input.style.width = \"120\";\n      button_input.value = label;\n      button_input.addEventListener(\"click\", callback);\n      parent.appendChild(button_input);\n      parent.appendChild(document.createElement(\"br\"));\n      return button_input;\n    }\n\n    const button_div: HTMLDivElement = controls_div.appendChild(document.createElement(\"div\"));\n    button_div.align = \"center\";\n    connect_button_input(button_div, \"Pause (P)\", (e: MouseEvent): void => { this.Pause(); });\n    connect_button_input(button_div, \"Single Step (O)\", (e: MouseEvent): void => { this.SingleStep(); });\n    connect_button_input(button_div, \"Restart (R)\", (e: MouseEvent): void => { this.LoadTest(); });\n    this.m_demo_button = connect_button_input(button_div, \"Demo\", (e: MouseEvent): void => { this.ToggleDemo(); });\n\n    // disable context menu to use right-click\n    window.addEventListener(\"contextmenu\", (e: MouseEvent): void => { e.preventDefault(); }, true);\n\n    canvas_div.addEventListener(\"mousemove\", (e: MouseEvent): void => { this.HandleMouseMove(e); });\n    canvas_div.addEventListener(\"mousedown\", (e: MouseEvent): void => { this.HandleMouseDown(e); });\n    canvas_div.addEventListener(\"mouseup\", (e: MouseEvent): void => { this.HandleMouseUp(e); });\n    canvas_div.addEventListener(\"wheel\", (e: WheelEvent): void => { this.HandleWheel(e); });\n\n    canvas_div.addEventListener(\"touchmove\", (e: TouchEvent): void => { this.HandleTouchMove(e); });\n    canvas_div.addEventListener(\"touchstart\", (e: TouchEvent): void => { this.HandleTouchStart(e); });\n    canvas_div.addEventListener(\"touchend\", (e: TouchEvent): void => { this.HandleTouchEnd(e); });\n\n    window.addEventListener(\"keydown\", (e: KeyboardEvent): void => { this.HandleKeyDown(e); });\n    window.addEventListener(\"keyup\", (e: KeyboardEvent): void => { this.HandleKeyUp(e); });\n\n    this.LoadTest();\n\n    this.m_time_last = time;\n  }\n\n  public HomeCamera(): void {\n    g_camera.m_zoom = (this.m_test) ? (this.m_test.GetDefaultViewZoom()) : (1.0);\n    g_camera.m_center.Set(0, 20 * g_camera.m_zoom);\n    ///g_camera.m_roll.SetAngle(b2.DegToRad(0));\n  }\n\n  public MoveCamera(move: b2.Vec2): void {\n    const position: b2.Vec2 = g_camera.m_center.Clone();\n    ///move.SelfRotate(g_camera.m_roll.GetAngle());\n    position.SelfAdd(move);\n    g_camera.m_center.Copy(position);\n  }\n\n  ///public RollCamera(roll: number): void {\n  ///  const angle: number = g_camera.m_roll.GetAngle();\n  ///  g_camera.m_roll.SetAngle(angle + roll);\n  ///}\n\n  public ZoomCamera(zoom: number): void {\n    g_camera.m_zoom *= zoom;\n    g_camera.m_zoom = b2.Clamp(g_camera.m_zoom, 0.02, 20);\n  }\n\n  private m_mouse = new b2.Vec2();\n\n  public HandleMouseMove(e: MouseEvent): void {\n    const element: b2.Vec2 = new b2.Vec2(e.clientX, e.clientY);\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\n\n    this.m_mouse.Copy(element);\n\n    if (this.m_lMouseDown) {\n      if (this.m_test) { this.m_test.MouseMove(world); }\n    }\n\n    if (this.m_rMouseDown) {\n      // m_center = viewCenter0 - (projection - projection0);\n      const projection: b2.Vec2 = g_camera.ConvertElementToProjection(element, new b2.Vec2());\n      const diff: b2.Vec2 = b2.Vec2.SubVV(projection, this.m_projection0, new b2.Vec2());\n      const center: b2.Vec2 = b2.Vec2.SubVV(this.m_viewCenter0, diff, new b2.Vec2());\n      g_camera.m_center.Copy(center);\n    }\n  }\n\n  public HandleMouseDown(e: MouseEvent): void {\n    const element: b2.Vec2 = new b2.Vec2(e.clientX, e.clientY);\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\n\n    switch (e.button) {\n    case 0: // left mouse button\n      this.m_lMouseDown = true;\n      if (this.m_shift) {\n        if (this.m_test) { this.m_test.ShiftMouseDown(world); }\n      } else {\n        if (this.m_test) { this.m_test.MouseDown(world); }\n      }\n      break;\n    case 2: // right mouse button\n      this.m_rMouseDown = true;\n      const projection: b2.Vec2 = g_camera.ConvertElementToProjection(element, new b2.Vec2());\n      this.m_projection0.Copy(projection);\n      this.m_viewCenter0.Copy(g_camera.m_center);\n      break;\n    }\n  }\n\n  public HandleMouseUp(e: MouseEvent): void {\n    const element: b2.Vec2 = new b2.Vec2(e.clientX, e.clientY);\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\n\n    switch (e.button) {\n    case 0: // left mouse button\n      this.m_lMouseDown = false;\n      if (this.m_test) { this.m_test.MouseUp(world); }\n      break;\n    case 2: // right mouse button\n      this.m_rMouseDown = false;\n      break;\n    }\n  }\n\n  public HandleTouchMove(e: TouchEvent): void {\n    const element: b2.Vec2 = new b2.Vec2(e.touches[0].clientX, e.touches[0].clientY);\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\n    if (this.m_test) { this.m_test.MouseMove(world); }\n    e.preventDefault();\n  }\n\n  public HandleTouchStart(e: TouchEvent): void {\n    const element: b2.Vec2 = new b2.Vec2(e.touches[0].clientX, e.touches[0].clientY);\n    const world: b2.Vec2 = g_camera.ConvertScreenToWorld(element, new b2.Vec2());\n    if (this.m_test) { this.m_test.MouseDown(world); }\n    e.preventDefault();\n  }\n\n  public HandleTouchEnd(e: TouchEvent): void {\n    if (this.m_test) { this.m_test.MouseUp(this.m_test.m_mouseWorld); }\n    e.preventDefault();\n  }\n\n  public HandleWheel(e: WheelEvent): void {\n    if (e.deltaY > 0) {\n      this.ZoomCamera(1 / 1.1);\n    } else if (e.deltaY < 0) {\n      this.ZoomCamera(1.1);\n    }\n    e.preventDefault();\n  }\n\n  public HandleKeyDown(e: KeyboardEvent): void {\n    switch (e.key) {\n    case \"Control\":\n      this.m_ctrl = true;\n      break;\n    case \"Shift\":\n      this.m_shift = true;\n      break;\n    case \"ArrowLeft\":\n      if (this.m_ctrl) {\n        if (this.m_test) {\n          this.m_test.ShiftOrigin(new b2.Vec2(2, 0));\n        }\n      } else {\n        this.MoveCamera(new b2.Vec2(-0.5, 0));\n      }\n      break;\n    case \"ArrowRight\":\n      if (this.m_ctrl) {\n        if (this.m_test) {\n          this.m_test.ShiftOrigin(new b2.Vec2(-2, 0));\n        }\n      } else {\n        this.MoveCamera(new b2.Vec2(0.5, 0));\n      }\n      break;\n    case \"ArrowDown\":\n      if (this.m_ctrl) {\n        if (this.m_test) {\n          this.m_test.ShiftOrigin(new b2.Vec2(0, 2));\n        }\n      } else {\n        this.MoveCamera(new b2.Vec2(0, -0.5));\n      }\n      break;\n    case \"ArrowUp\":\n      if (this.m_ctrl) {\n        if (this.m_test) {\n          this.m_test.ShiftOrigin(new b2.Vec2(0, -2));\n        }\n      } else {\n        this.MoveCamera(new b2.Vec2(0, 0.5));\n      }\n      break;\n    case \"Home\":\n      this.HomeCamera();\n      break;\n    ///case \"PageUp\":\n    ///  this.RollCamera(b2.DegToRad(-1));\n    ///  break;\n    ///case \"PageDown\":\n    ///  this.RollCamera(b2.DegToRad(1));\n    ///  break;\n    case \"z\":\n      this.ZoomCamera(1.1);\n      break;\n    case \"x\":\n      this.ZoomCamera(0.9);\n      break;\n    case \"r\":\n      this.LoadTest();\n      break;\n    case \" \":\n      if (this.m_test) {\n        this.m_test.LaunchBomb();\n      }\n      break;\n    case \"o\":\n      this.SingleStep();\n      break;\n    case \"p\":\n      this.Pause();\n      break;\n    case \"[\":\n      this.DecrementTest();\n      break;\n    case \"]\":\n      this.IncrementTest();\n      break;\n    // #if B2_ENABLE_PARTICLE\n    case \",\":\n      if (this.m_shift) {\n        // Press < to select the previous particle parameter setting.\n        Test.particleParameter.Decrement();\n      }\n      break;\n    case \".\":\n      if (this.m_shift) {\n        // Press > to select the next particle parameter setting.\n        Test.particleParameter.Increment();\n      }\n      break;\n    // #endif\n    default:\n      // console.log(e.keyCode);\n      break;\n    }\n\n    if (this.m_test) {\n      this.m_test.Keyboard(e.key);\n    }\n  }\n\n  public HandleKeyUp(e: KeyboardEvent): void {\n    switch (e.key) {\n    case \"Control\":\n      this.m_ctrl = false;\n      break;\n    case \"Shift\":\n      this.m_shift = false;\n      break;\n    default:\n      // console.log(e.keyCode);\n      break;\n    }\n\n    if (this.m_test) {\n      this.m_test.KeyboardUp(e.key);\n    }\n  }\n\n  public UpdateTest(time_elapsed: number): void {\n    if (this.m_demo_mode) {\n      this.m_demo_time += time_elapsed;\n\n      if (this.m_demo_time > this.m_max_demo_time) {\n        this.IncrementTest();\n      }\n\n      const str: string = ((500 + this.m_max_demo_time - this.m_demo_time) / 1000).toFixed(0).toString();\n      this.m_demo_button.value = str;\n    } else {\n      this.m_demo_button.value = \"Demo\";\n    }\n  }\n\n  public DecrementTest(): void {\n    if (this.m_settings.m_testIndex <= 0) {\n      this.m_settings.m_testIndex = this.m_test_options.length;\n    }\n    this.m_settings.m_testIndex--;\n    this.m_test_select.selectedIndex = this.m_settings.m_testIndex;\n    this.LoadTest();\n  }\n\n  public IncrementTest(): void {\n    this.m_settings.m_testIndex++;\n    if (this.m_settings.m_testIndex >= this.m_test_options.length) {\n      this.m_settings.m_testIndex = 0;\n    }\n    this.m_test_select.selectedIndex = this.m_settings.m_testIndex;\n    this.LoadTest();\n  }\n\n  public LoadTest(restartTest: boolean = false): void {\n    // #if B2_ENABLE_PARTICLE\n    Test.fullscreenUI.Reset();\n    if (!restartTest) { Test.particleParameter.Reset(); }\n    // #endif\n    this.m_demo_time = 0;\n    // #if B2_ENABLE_PARTICLE\n    if (this.m_test) {\n      this.m_test.RestoreParticleParameters();\n    }\n    // #endif\n    this.m_test = g_testEntries[parseInt(this.m_test_options[this.m_settings.m_testIndex].value)].createFcn();\n    if (!restartTest) {\n      this.HomeCamera();\n    }\n  }\n\n  public Pause(): void {\n    this.m_settings.m_pause = !this.m_settings.m_pause;\n  }\n\n  public SingleStep(): void {\n    this.m_settings.m_pause = true;\n    this.m_settings.m_singleStep = true;\n  }\n\n  public ToggleDemo(): void {\n    this.m_demo_mode = !this.m_demo_mode;\n  }\n\n  public SimulationLoop(time: number): void {\n    this.m_time_last = this.m_time_last || time;\n\n    let time_elapsed: number = time - this.m_time_last;\n    this.m_time_last = time;\n\n    if (time_elapsed > 1000) { time_elapsed = 1000; } // clamp\n\n    this.m_fps_time += time_elapsed;\n    this.m_fps_frames++;\n\n    if (this.m_fps_time >= 500) {\n      this.m_fps = (this.m_fps_frames * 1000) / this.m_fps_time;\n      this.m_fps_frames = 0;\n      this.m_fps_time = 0;\n\n      this.m_fps_div.innerHTML = this.m_fps.toFixed(1).toString();\n    }\n\n    if (time_elapsed > 0) {\n      const ctx: CanvasRenderingContext2D | null = this.m_ctx;\n\n      // #if B2_ENABLE_PARTICLE\n      const restartTest = [false];\n      // #endif\n\n      if (ctx) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        // ctx.strokeStyle = \"blue\";\n        // ctx.strokeRect(this.m_mouse.x - 24, this.m_mouse.y - 24, 48, 48);\n\n        // const mouse_world: b2.Vec2 = g_camera.ConvertScreenToWorld(this.m_mouse, new b2.Vec2());\n\n        ctx.save();\n\n          // 0,0 at center of canvas, x right, y up\n        ctx.translate(0.5 * ctx.canvas.width, 0.5 * ctx.canvas.height);\n        ctx.scale(1, -1);\n          ///ctx.scale(g_camera.m_extent, g_camera.m_extent);\n          ///ctx.lineWidth /= g_camera.m_extent;\n        const s: number = 0.5 * g_camera.m_height / g_camera.m_extent;\n        ctx.scale(s, s);\n        ctx.lineWidth /= s;\n\n          // apply camera\n        ctx.scale(1 / g_camera.m_zoom, 1 / g_camera.m_zoom);\n        ctx.lineWidth *= g_camera.m_zoom;\n          ///ctx.rotate(-g_camera.m_roll.GetAngle());\n        ctx.translate(-g_camera.m_center.x, -g_camera.m_center.y);\n\n        if (this.m_test) { this.m_test.Step(this.m_settings); }\n\n        // #if B2_ENABLE_PARTICLE\n        // Update the state of the particle parameter.\n        Test.particleParameter.Changed(restartTest);\n        // #endif\n\n        // #if B2_ENABLE_PARTICLE\n        let msg = this.m_test_options[this.m_settings.m_testIndex].text;\n        if (Test.fullscreenUI.GetParticleParameterSelectionEnabled()) {\n          msg += \" : \";\n          msg += Test.particleParameter.GetName();\n        }\n        if (this.m_test) { this.m_test.DrawTitle(msg); }\n        // #else\n        // if (this.m_test) { this.m_test.DrawTitle(this.m_test_options[this.m_settings.m_testIndex].text); }\n        // #endif\n\n        // ctx.strokeStyle = \"yellow\";\n        // ctx.strokeRect(mouse_world.x - 0.5, mouse_world.y - 0.5, 1.0, 1.0);\n\n        ctx.restore();\n      }\n\n      // #if B2_ENABLE_PARTICLE\n      if (restartTest[0]) {\n        this.LoadTest(true);\n      }\n      // #endif\n\n      this.UpdateTest(time_elapsed);\n    }\n  }\n}\n\nimport \"./tests/add_pair.js\";\nimport \"./tests/apply_force.js\";\nimport \"./tests/body_types.js\";\nimport \"./tests/box_stack.js\";\nimport \"./tests/breakable.js\";\nimport \"./tests/bridge.js\";\nimport \"./tests/bullet_test.js\";\nimport \"./tests/cantilever.js\";\nimport \"./tests/car.js\";\nimport \"./tests/chain.js\";\nimport \"./tests/character_collision.js\";\nimport \"./tests/circle_stack.js\";\nimport \"./tests/collision_filtering.js\";\nimport \"./tests/collision_processing.js\";\nimport \"./tests/compound_shapes.js\";\nimport \"./tests/confined.js\";\nimport \"./tests/continuous_test.js\";\nimport \"./tests/convex_hull.js\";\nimport \"./tests/conveyor_belt.js\";\nimport \"./tests/distance_joint.js\";\nimport \"./tests/distance_test.js\";\nimport \"./tests/dominos.js\";\nimport \"./tests/dump_loader.js\";\nimport \"./tests/dynamic_tree.js\";\nimport \"./tests/edge_shapes.js\";\nimport \"./tests/edge_test.js\";\nimport \"./tests/friction.js\";\nimport \"./tests/gear_joint.js\";\nimport \"./tests/heavy1.js\";\nimport \"./tests/heavy2.js\";\nimport \"./tests/mobile_balanced.js\";\nimport \"./tests/mobile_unbalanced.js\";\nimport \"./tests/motor_joint.js\";\nimport \"./tests/pinball.js\";\nimport \"./tests/platformer.js\";\nimport \"./tests/polygon_collision.js\";\nimport \"./tests/polygon_shapes.js\";\nimport \"./tests/prismatic_joint.js\";\nimport \"./tests/pulley_joint.js\";\nimport \"./tests/pyramid.js\";\nimport \"./tests/ray_cast.js\";\nimport \"./tests/restitution.js\";\nimport \"./tests/revolute_joint.js\";\nimport \"./tests/rope.js\";\nimport \"./tests/sensor.js\";\nimport \"./tests/shape_cast.js\";\nimport \"./tests/shape_editing.js\";\nimport \"./tests/skier.js\";\nimport \"./tests/slider_crank_1.js\";\nimport \"./tests/slider_crank_2.js\";\nimport \"./tests/theo_jansen.js\";\nimport \"./tests/tiles.js\";\nimport \"./tests/time_of_impact.js\";\nimport \"./tests/tumbler.js\";\nimport \"./tests/web.js\";\nimport \"./tests/wheel_joint.js\";\nimport \"./tests/wrecking_ball.js\";\n\nimport \"./tests/extras/blob_test.js\";\nimport \"./tests/extras/domino_tower.js\";\nimport \"./tests/extras/pyramid_topple.js\";\nimport \"./tests/extras/test_ccd.js\";\nimport \"./tests/extras/test_ragdoll.js\";\nimport \"./tests/extras/test_stack.js\";\nimport \"./tests/extras/top_down_car.js\";\nimport \"./tests/extras/segway.js\";\n\n// #if B2_ENABLE_CONTROLLER\nimport \"./tests/extras/buoyancy_test.js\";\n// #endif\n\n// #if B2_ENABLE_PARTICLE\nimport \"./tests/particles/anti_pointy.js\";\nimport \"./tests/particles/corner_case.js\";\nimport \"./tests/particles/dam_break.js\";\nimport \"./tests/particles/drawing_particles.js\";\nimport \"./tests/particles/elastic_particles.js\";\nimport \"./tests/particles/eye_candy.js\";\nimport \"./tests/particles/faucet.js\";\nimport \"./tests/particles/fracker.js\";\nimport \"./tests/particles/impulse.js\";\nimport \"./tests/particles/liquid_timer.js\";\nimport \"./tests/particles/maxwell.js\";\nimport \"./tests/particles/multiple_particle_systems.js\";\nimport \"./tests/particles/particle_collision_filter.js\";\nimport \"./tests/particles/particles_surface_tension.js\";\nimport \"./tests/particles/particles.js\";\nimport \"./tests/particles/pointy.js\";\nimport \"./tests/particles/ramp.js\";\nimport \"./tests/particles/rigid_particles.js\";\nimport \"./tests/particles/sandbox.js\";\nimport \"./tests/particles/soup_stirrer.js\";\nimport \"./tests/particles/soup.js\";\nimport \"./tests/particles/sparky.js\";\nimport \"./tests/particles/wave_machine.js\";\n// #endif\n"],"names":["b2","ParticleParameterOptions","testbed.Test","testbed.RegisterTest","testbed.g_debugDraw","testbed.DRAW_STRING_NEW_LINE","testbed.g_camera","testbed.ParticleParameterValue","testbed.ParticleParameter","testbed.ParticleParameterDefinition","testbed.EmittedParticleCallback","testbed.RadialEmitter","testbed.ParticleParameterOptions","testbed.RandomFloat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;QAwBa,QAAQ;MAArB;UACS,gBAAW,GAAW,CAAC,CAAC;UACxB,kBAAa,GAAW,IAAI,CAAC;UAC7B,mBAAc,GAAW,GAAG,CAAC;UAC7B,YAAO,GAAW,EAAE,CAAC;UACrB,yBAAoB,GAAW,CAAC,CAAC;UACjC,yBAAoB,GAAW,CAAC,CAAC;;;;;UAKjC,yBAAoB,GAAWA,aAAE,CAAC,2BAA2B,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;;UAE1F,iBAAY,GAAY,IAAI,CAAC;;UAE7B,oBAAe,GAAY,IAAI,CAAC;;UAEhC,iBAAY,GAAY,IAAI,CAAC;UAC7B,gBAAW,GAAY,KAAK,CAAC;UAC7B,wBAAmB,GAAY,KAAK,CAAC;UACrC,yBAAoB,GAAY,KAAK,CAAC;UACtC,yBAAoB,GAAY,KAAK,CAAC;UACtC,0BAAqB,GAAY,KAAK,CAAC;UACvC,eAAU,GAAY,KAAK,CAAC;UAC5B,sBAAiB,GAAY,IAAI,CAAC;UAClC,gBAAW,GAAY,KAAK,CAAC;UAC7B,kBAAa,GAAY,KAAK,CAAC;UAC/B,yBAAoB,GAAY,IAAI,CAAC;UACrC,uBAAkB,GAAY,IAAI,CAAC;UACnC,wBAAmB,GAAY,KAAK,CAAC;UACrC,kBAAa,GAAY,IAAI,CAAC;UAC9B,YAAO,GAAY,KAAK,CAAC;UACzB,iBAAY,GAAY,KAAK,CAAC;;UAE9B,qBAAgB,GAAY,KAAK,CAAC;OA6C1C;;MA1CQ,KAAK;UACV,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;UACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;UAC1B,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;UAC1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;UAClB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;UAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;;;;;UAK9B,IAAI,CAAC,oBAAoB,GAAGA,aAAE,CAAC,2BAA2B,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;;UAEvF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;UAEzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;;UAE5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;UACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;UACzB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;UACjC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;UAClC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;UAClC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;UACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;UAExB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;;UAE9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;UACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;UAC3B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;UACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;UAC/B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;UACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;UAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;UACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;UAE1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;;OAE/B;MAEM,IAAI,MAAY;MAChB,IAAI,MAAY;;;ECtGzB;QAwBa,MAAM;MAAnB;UACkB,aAAQ,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;UAEhD,aAAQ,GAAW,EAAE,CAAC;UACtB,WAAM,GAAW,CAAC,CAAC;UACnB,YAAO,GAAW,IAAI,CAAC;UACvB,aAAQ,GAAW,GAAG,CAAC;OAsE/B;MApEQ,oBAAoB,CAAC,WAAoB,EAAE,GAAY;UAC5D,OAAO,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;OACrD;MAEM,oBAAoB,CAAC,UAAmB,EAAE,GAAY;UAC3D,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;OACpD;MAEM,wBAAwB,CAAC,QAAiB,EAAE,GAAY;;UAE7D,MAAM,SAAS,GAAW,QAAQ,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;UAC5D,MAAM,SAAS,GAAW,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;UAC7D,OAAO,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;OACtC;MAEM,wBAAwB,CAAC,OAAgB,EAAE,GAAY;;UAE5D,MAAM,UAAU,GAAW,OAAO,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;UAC5D,MAAM,UAAU,GAAW,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;UAC7D,OAAO,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;OACxC;MAEM,2BAA2B,CAAC,UAAmB,EAAE,GAAY;UAClE,MAAM,QAAQ,GAAY,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;UAC/CA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;;UAEnDA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;UAC3E,OAAO,QAAQ,CAAC;OACjB;MAEM,2BAA2B,CAAC,QAAiB,EAAE,GAAY;UAChE,MAAM,UAAU,GAAY,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;UAE/CA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;UACzEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;UACnD,OAAO,UAAU,CAAC;OACnB;MAEM,wBAAwB,CAAC,KAAc,EAAE,GAAY;UAC1D,MAAM,UAAU,GAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UAC5CA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;;UAErD,OAAO,UAAU,CAAC;OACnB;MAEM,wBAAwB,CAAC,UAAmB,EAAE,GAAY;UAC/D,MAAM,KAAK,GAAY,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;UAE5CA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;UAC3C,OAAO,KAAK,CAAC;OACd;MAEM,qBAAqB,CAAC,OAAgB,EAAE,GAAY;UACzD,MAAM,QAAQ,GAAY,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;UACtE,MAAM,UAAU,GAAY,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;UAC5E,OAAO,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;OACvD;MAEM,qBAAqB,CAAC,KAAc,EAAE,GAAY;UACvD,MAAM,UAAU,GAAY,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;UACtE,MAAM,QAAQ,GAAY,IAAI,CAAC,2BAA2B,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;UAC5E,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;OACrD;MAEM,0BAA0B,CAAC,OAAgB,EAAE,GAAY;UAC9D,MAAM,QAAQ,GAAY,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;UACtE,OAAO,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;OACxD;GACF;EAED;EACA;QACa,SAAU,SAAQA,aAAE,CAAC,IAAI;MAGpC;UACE,KAAK,EAAE,CAAC;UAHH,UAAK,GAAoC,IAAI,CAAC;OAIpD;MAEM,aAAa,CAAC,EAAgB;UACnC,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,IAAI,EAAE,CAAC;cACX,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9B,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;WAC7B;OACF;MAEM,YAAY,CAAC,EAAgB;UAClC,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,OAAO,EAAE,CAAC;WACf;OACF;MAEM,WAAW,CAAC,QAAmB,EAAE,WAAmB,EAAE,KAAe;UAC1E,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;kBAC5C,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eAC1C;cACD,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;cAC3C,GAAG,CAAC,MAAM,EAAE,CAAC;WACd;OACF;MAEM,gBAAgB,CAAC,QAAmB,EAAE,WAAmB,EAAE,KAAe;UAC/E,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;kBAC5C,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eAC1C;cACD,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;cAC3C,GAAG,CAAC,IAAI,EAAE,CAAC;cACX,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;cAC3C,GAAG,CAAC,MAAM,EAAE,CAAC;WACd;OACF;MAEM,UAAU,CAAC,MAAe,EAAE,MAAc,EAAE,KAAe;UAChE,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAEA,aAAE,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;cACxD,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;cAC3C,GAAG,CAAC,MAAM,EAAE,CAAC;WACd;OACF;MAEM,eAAe,CAAC,MAAe,EAAE,MAAc,EAAE,IAAa,EAAE,KAAe;UACpF,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,MAAM,EAAE,GAAW,MAAM,CAAC,CAAC,CAAC;cAC5B,MAAM,EAAE,GAAW,MAAM,CAAC,CAAC,CAAC;cAC5B,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAEA,aAAE,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;cAC5C,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cACnB,GAAG,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC;cAC3D,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;cAC3C,GAAG,CAAC,IAAI,EAAE,CAAC;cACX,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;cAC3C,GAAG,CAAC,MAAM,EAAE,CAAC;WACd;OACF;;MAGM,aAAa,CAAC,OAAkB,EAAE,MAAc,EAAE,MAAyB,EAAE,KAAa;UAC/F,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,IAAI,MAAM,KAAK,IAAI,EAAE;kBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;sBAC9B,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;sBAC1B,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;sBACxB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;;sBAExC,GAAG,CAAC,SAAS,EAAE,CAAC;sBAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAEA,aAAE,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;sBAAC,GAAG,CAAC,IAAI,EAAE,CAAC;mBACtF;eACF;mBAAM;kBACL,GAAG,CAAC,SAAS,GAAG,uBAAuB,CAAC;;kBAExC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;sBAC9B,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;sBAE1B,GAAG,CAAC,SAAS,EAAE,CAAC;sBAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAEA,aAAE,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;sBAAC,GAAG,CAAC,IAAI,EAAE,CAAC;mBACtF;;eAEF;WACF;OACF;;MAGM,WAAW,CAAC,EAAW,EAAE,EAAW,EAAE,KAAe;UAC1D,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;cACvB,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;cACvB,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;cAC3C,GAAG,CAAC,MAAM,EAAE,CAAC;WACd;OACF;MAEM,aAAa,CAAC,EAAgB;UACnC,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEvB,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACjB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACjB,GAAG,CAAC,WAAW,GAAGA,aAAE,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;cAClD,GAAG,CAAC,MAAM,EAAE,CAAC;cAEb,GAAG,CAAC,SAAS,EAAE,CAAC;cAChB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACjB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACjB,GAAG,CAAC,WAAW,GAAGA,aAAE,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;cACpD,GAAG,CAAC,MAAM,EAAE,CAAC;cAEb,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;WACvB;OACF;MAEM,SAAS,CAAC,CAAU,EAAE,IAAY,EAAE,KAAe;UACxD,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;cACxC,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC;cACxB,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC;cAC1B,MAAM,KAAK,GAAW,IAAI,GAAG,CAAC,CAAC;cAC/B,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;WACpD;OACF;MAGM,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,OAAe;UACrD,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,IAAI,EAAE,CAAC;cACX,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACnC,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;cAC5B,MAAM,KAAK,GAAa,SAAS,CAAC,kBAAkB,CAAC;cACrD,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;cACxC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cAC5B,GAAG,CAAC,OAAO,EAAE,CAAC;WACf;OACF;MAKM,eAAe,CAAC,CAAS,EAAE,CAAS,EAAE,OAAe;UAC1D,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,MAAM,CAAC,GAAY,SAAS,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;cAG3D,MAAM,EAAE,GAAY,QAAQ,CAAC,QAAQ,CAAC;cACtCA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;;cAGxB,MAAM,EAAE,GAAW,QAAQ,CAAC,MAAM,CAAC;cACnCA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;cAG5B,MAAM,EAAE,GAAW,GAAG,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;cAC/DA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACxB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;cACV,MAAM,EAAE,GAAY,SAAS,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;cACxGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;cAExB,GAAG,CAAC,IAAI,EAAE,CAAC;cACX,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACnC,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;cAC5B,MAAM,KAAK,GAAa,SAAS,CAAC,uBAAuB,CAAC;cAC1D,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;cACxC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;cAChC,GAAG,CAAC,OAAO,EAAE,CAAC;WACf;OACF;MAEM,QAAQ,CAAC,IAAa,EAAE,KAAe;UAC5C,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;UACxD,IAAI,GAAG,EAAE;cACP,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;cAC1C,MAAM,CAAC,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;cACpC,MAAM,CAAC,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;cACpC,MAAM,CAAC,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;cACxD,MAAM,CAAC,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;cACxD,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;WAC5B;OACF;;EAzDc,4BAAkB,GAAa,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAc3D,6BAAmB,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;EAC7C,8BAAoB,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;EAC9C,iCAAuB,GAAa,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QA4CpE,WAAW,GAAc,IAAI,SAAS,GAAG;QACzC,QAAQ,GAAW,IAAI,MAAM;;ECzT1C;;;;;;;;;;;;;;;;;EAkBA;EAEA;;;QAGa,YAAY;MACvB;;;;UAOO,wCAAmC,GAAY,KAAK,CAAC;UAN1D,IAAI,CAAC,KAAK,EAAE,CAAC;OACd;;;;MAUM,KAAK;UACV,IAAI,CAAC,mCAAmC,GAAG,KAAK,CAAC;OAClD;;;;MAKM,oCAAoC,CAAC,MAAe;UACzD,IAAI,CAAC,mCAAmC,GAAG,MAAM,CAAC;OACnD;;;;MAKM,oCAAoC;UACzC,OAAO,IAAI,CAAC,mCAAmC,CAAC;OACjD;GACF;EAED;;ECvDA;;;;;;;;;;;;;;;;;QAsBa,uBAAuB;;;;MAI3B,eAAe,CAAC,MAAyB,EAAE,aAAqB,KAAU;GAClF;EAED;;;QAGa,aAAa;MAA1B;;;;UAIS,qBAAgB,GAA6B,IAAI,CAAC;;;;UAIlD,eAAU,GAAmC,IAAI,CAAC;;;;UAIlD,aAAQ,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;;;;UAIlC,uBAAkB,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;;;;UAI5C,YAAO,GAAG,GAAG,CAAC;;;;UAId,eAAU,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;;;;UAIpC,eAAU,GAAG,GAAG,CAAC;;;;UAIjB,YAAO,GAAa,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC;;;;UAInC,oBAAe,GAAG,GAAG,CAAC;;;;UAItB,YAAO,GAAoBA,aAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC;;;;UAI5D,YAAO,GAA4B,IAAI,CAAC;OA0NhD;;;;MArNQ,OAAO,MAAM;UAClB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;OACtB;MAEM,QAAQ;UACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;OACrB;;;;MAKM,WAAW,CAAC,MAAe;UAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;OAC5B;;;;MAKM,WAAW,CAAC,GAAY;UAC7B,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAChC;;;;MAKM,OAAO,CAAC,IAAa;UAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;OACzC;;;;MAKM,OAAO,CAAC,GAAY;UACzB,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;OAC/C;;;;MAKM,WAAW,CAAC,QAAiB;UAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACxC;;;;MAKM,WAAW,CAAC,GAAY;UAC7B,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;OAC1C;;;;;MAMM,QAAQ,CAAC,KAAa;UAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;OACtB;;;;;MAMM,QAAQ;UACb,OAAO,IAAI,CAAC,OAAO,CAAC;OACrB;;;;MAKM,gBAAgB,CAAC,KAAsB;UAC5C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;OACtB;;;;MAKM,gBAAgB;UACrB,OAAO,IAAI,CAAC,OAAO,CAAC;OACrB;;;;MAKM,QAAQ,CAAC,KAAe;UAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC1B;;;;MAKM,QAAQ,CAAC,GAAa;UAC3B,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;OAC/B;;;;MAKM,WAAW,CAAC,QAAgB;UACjC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;OAC5B;;;;MAKM,WAAW;UAChB,OAAO,IAAI,CAAC,UAAU,CAAC;OACxB;;;;MAKM,iBAAiB,CAAC,cAAiC;UACxD,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC;OACxC;;;;MAKM,iBAAiB;UACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC;OAC9B;;;;;MAMM,WAAW,CAAC,QAAiC;UAClD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;OAC5B;;;;;MAMM,WAAW;UAChB,OAAO,IAAI,CAAC,UAAU,CAAC;OACxB;;;;;;;;MASM,QAAQ,CAAC,KAA8B;UAC5C,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,GAAG,CAACA,aAAE,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,CAAC;WAC7G;UACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;UACrB,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,GAAGA,aAAE,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,CAAC;WAC5G;OACF;;;;MAKM,QAAQ;UACb,OAAO,IAAI,CAAC,OAAO,CAAC;OACrB;;;;;;;;MASM,IAAI,CAAC,EAAU,EAAE,eAA0B,EAAE,uBAA+B,eAAe,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC;UAC7H,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;cAAE,MAAM,IAAI,KAAK,EAAE,CAAC;WAAE;UAC1D,IAAI,wBAAwB,GAAG,CAAC,CAAC;;UAEjC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;UAE7C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UAChC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UAC5B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;UACxB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;;;UAIxB,OAAO,IAAI,CAAC,eAAe,GAAG,GAAG,EAAE;cACjC,IAAI,CAAC,eAAe,IAAI,GAAG,CAAC;;cAG5B,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,EAAE,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;;cAEnD,MAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;cACxC,MAAM,oBAAoB,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;cAG3E,EAAE,CAAC,QAAQ,CAAC,GAAG,CACb,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,oBAAoB,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EACvE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,oBAAoB,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;cAE3E,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;cAC1C,IAAI,IAAI,CAAC,OAAO,KAAK,GAAG,EAAE;;kBAExB,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;eAC5D;cAED,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;cAC/D,IAAI,IAAI,CAAC,UAAU,EAAE;kBACnB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;eACvE;cACD,IAAI,eAAe,KAAK,wBAAwB,GAAG,oBAAoB,CAAC,EAAE;kBACxE,eAAe,CAAC,wBAAwB,CAAC,GAAG,aAAa,CAAC;eAC3D;cACD,EAAE,wBAAwB,CAAC;WAC5B;UACD,OAAO,wBAAwB,CAAC;OACjC;GACF;EAED;;ECxSA;;;;;;;;;;;;;;;;;AAsBYC;EAAZ,WAAY,wBAAwB;MAClC,uGAA6B,CAAA;MAC7B,+FAAyB,CAAA;MACzB,qGAA4B,CAAA;MAC5B,+FAAyB,CAAA;MACzB,8FAAwB,CAAA;MACxB,8GAAgC,CAAA;MAChC,gHAAiC,CAAA;MACjC,iHAAiC,CAAA;MACjC,mHAAkC,CAAA;MAClC,6FAAuB,CAAA;MACvB,gGAAyB,CAAA;MACzB,oGAA2B,CAAA;EAC7B,CAAC,EAbWA,gCAAwB,KAAxBA,gCAAwB,QAanC;QAEY,sBAAsB;MAMjC,YAAY,GAAG,IAAW;;;;UAanB,UAAK,GAAW,CAAC,CAAC;;;;;UAMlB,YAAO,GAA6B,CAAC,CAAC;;;;UAKtC,SAAI,GAAG,EAAE,CAAC;UAvBf,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,sBAAsB,EAAE;cAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;WACpB;eAAM;cACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;cACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;cACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;WACrB;OACF;MAkBM,IAAI,CAAC,KAA6B;UACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;UACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;UAC7B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;UACvB,OAAO,IAAI,CAAC;OACb;GACF;QAEY,2BAA2B;;;;MAItC,YAAY,MAAgC,EAAE,YAAoB,MAAM,CAAC,MAAM;UAMxE,cAAS,GAAW,CAAC,CAAC;UAL3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;UACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;OAC5B;MAKM,kBAAkB;UACvB,IAAI,IAAI,GAAG,CAAC,CAAC;UACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;cACvC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;WAC9B;UACD,OAAO,IAAI,CAAC;OACb;GACF;QAEY,iBAAiB;MA4B5B;UARO,YAAO,GAAG,CAAC,CAAC;UACZ,cAAS,GAAG,KAAK,CAAC;UAClB,sBAAiB,GAAG,KAAK,CAAC;UAC1B,YAAO,GAAkC,IAAI,CAAC;UAC9C,iBAAY,GAAkC,iBAAiB,CAAC,mBAAmB,CAAC;UACpF,sBAAiB,GAAG,CAAC,CAAC;UACtB,iBAAY,GAAG,CAAC,CAAC;UAGtB,IAAI,CAAC,KAAK,EAAE,CAAC;OACd;MAEM,KAAK;UACV,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;UAC9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;UACjB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;UAC1D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OACb;MAEM,aAAa,CAAC,UAAyC,EAAE,kBAA0B,UAAU,CAAC,MAAM;UACzG,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;UAC/B,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC;UACzC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;UACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE;cAC/C,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;WACrD;;UAED,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;OACtB;MAEM,GAAG;UACR,OAAO,IAAI,CAAC,OAAO,CAAC;OACrB;MAEM,GAAG,CAAC,KAAa;UACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC;UACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;UACrE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;;OAElD;MAEM,SAAS;UACd,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;UACzB,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;OACtD;MAEM,SAAS;UACd,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;UACzB,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;OAC3D;MAEM,OAAO,CAAC,OAAkB;UAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;UAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;UACvB,IAAI,OAAO,EAAE;cACX,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;WACnD;UACD,OAAO,OAAO,CAAC;OAChB;MAEM,QAAQ;UACb,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;cAAE,MAAM,IAAI,KAAK,EAAE,CAAC;WAAE;UACjD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;OAC3B;MAEM,OAAO;UACZ,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;cAAE,MAAM,IAAI,KAAK,EAAE,CAAC;WAAE;UACjD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;OAC1B;MAEM,UAAU;UACf,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;cAAE,MAAM,IAAI,KAAK,EAAE,CAAC;WAAE;UACjD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;OAC7B;MAEM,kBAAkB,CAAC,MAAe;UACvC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;OACjC;MAEM,kBAAkB;UACvB,OAAO,IAAI,CAAC,iBAAiB,CAAC;OAC/B;MAEM,gBAAgB,CAAC,KAAa;UACnC,IAAI,KAAK,GAAG,CAAC,CAAC;UACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE;cAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;cACxC,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;cACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE;kBAC3C,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,EAAE;sBAAE,OAAO,KAAK,CAAC;mBAAE;eAC5D;WACF;UACD,OAAO,CAAC,CAAC,CAAC;OACX;MAEM,0BAA0B;UAC/B,IAAI,KAAK,GAAG,CAAC,CAAC;UACd,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;UACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,EAAE;cAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;cACxC,MAAM,GAAG,GAAG,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC;cACzC,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,GAAG,EAAE;kBACjC,OAAO,UAAU,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;eACzC;cACD,KAAK,GAAG,GAAG,CAAC;WACb;UACD,OAAO,IAAI,CAAC;OACb;;EA9HsB,kCAAgB,GAA6BA,gCAAwB,CAAC,gBAAgB,GAAGA,gCAAwB,CAAC,mBAAmB,CAAC;EACtI,iCAAe,GAA6B;MACjE,IAAI,sBAAsB,CAACD,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,OAAO,CAAC;MACzG,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,gBAAgB,GAAGC,gCAAwB,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;MAClK,IAAI,sBAAsB,CAACD,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;MAC3G,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC7G,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC7G,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;MAC3G,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC7G,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,cAAc,CAAC;MACtH,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,eAAe,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,MAAM,CAAC;MACvG,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,eAAe,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC/I,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,yBAAyB,EAAE,iBAAiB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;MAC5H,IAAI,sBAAsB,CAACA,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,gBAAgB,GAAGC,gCAAwB,CAAC,eAAe,EAAE,wBAAwB,CAAC;GACtK,CAAC;EACqB,qCAAmB,GAAkC;MAC1E,IAAI,2BAA2B,CAAC,iBAAiB,CAAC,eAAe,CAAC;GACnE,CAAC;EAgHJ;;ECpOA;EA4BA;QAEa,oBAAoB,GAAW,GAAG;WAE/B,WAAW,CAAC,KAAa,CAAC,CAAC,EAAE,KAAa,CAAC;MACzD,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;MACtB,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;MACvB,OAAO,CAAC,CAAC;EACX,CAAC;QAEY,SAAS;MAKpB,YAAY,QAAgB,EAAE,IAAY,EAAE,SAAqB;UAJ1D,aAAQ,GAAW,EAAE,CAAC;UACtB,SAAI,GAAW,SAAS,CAAC;UAI9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;UACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;UACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;OAC5B;GACF;QAEY,aAAa,GAAgB,GACzC;WAEe,YAAY,CAAC,QAAgB,EAAE,IAAY,EAAE,GAAe;MAC1E,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;EAChE,CAAC;QAEY,mBAAoB,SAAQD,aAAE,CAAC,mBAAmB;MAG7D,YAAY,IAAU;UACpB,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;OAClB;MAEM,eAAe,CAAC,KAAe;UACpC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;cACpC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;WAC/B;eAAM;cACL,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;WACjC;OACF;MAEM,iBAAiB,CAAC,OAAmB,KAAU;;MAG/C,uBAAuB,CAAC,KAAuB;UACpD,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;OACzC;GAEF;QAEY,YAAY;MAAzB;UAGkB,WAAM,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAChC,aAAQ,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC3C,UAAK,GAAkBA,aAAE,CAAC,UAAU,CAAC,YAAY,CAAC;UAClD,kBAAa,GAAW,CAAC,CAAC;UAC1B,mBAAc,GAAW,CAAC,CAAC;UAC3B,eAAU,GAAW,CAAC,CAAC;OAC/B;GAAA;EAED;EACA,MAAM,cAAe,SAAQA,aAAE,CAAC,aAAa;MAI3C,YAAY,cAAiC,EAAE,KAAe,EAAE,QAAiB;UAC/E,KAAK,EAAE,CAAC;UACR,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC;UACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;UACrB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;OAC5B;MAEM,aAAa,CAAC,OAAmB;UACtC,OAAO,KAAK,CAAC;OACd;MAEM,cAAc,CAAC,cAAiC,EAAE,KAAa;UACpE,IAAI,cAAc,KAAK,IAAI,CAAC,gBAAgB,EAAE;cAC5C,OAAO,KAAK,CAAC;WACd;UACD,MAAM,EAAE,GAAGA,aAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;UACjC,MAAM,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,CAAC;UAC3D,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;cACjC,MAAM,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,CAAC;cAC3D,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;WACzB;UACD,OAAO,IAAI,CAAC;OACb;GACF;EACD;QAEa,IAAK,SAAQA,aAAE,CAAC,eAAe;;MAkC1C;UACE,KAAK,EAAE,CAAC;;UAxBH,WAAM,GAAmB,IAAI,CAAC;UAC9B,eAAU,GAAW,EAAE,CAAC;UACxB,iBAAY,GAAyB,IAAI,CAAC;UACjC,aAAQ,GAAmBA,aAAE,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,KAAK,IAAI,YAAY,EAAE,CAAC,CAAC;UACrG,iBAAY,GAAW,CAAC,CAAC;UAEhB,qBAAgB,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACnD,mBAAc,GAAY,KAAK,CAAC;UACvB,iBAAY,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;;UAE/C,mBAAc,GAAY,KAAK,CAAC;UACvB,0BAAqB,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC/C,0BAAqB,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;;UAExD,gBAAW,GAAW,CAAC,CAAC;UACf,iBAAY,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5C,mBAAc,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;;UAGvD,yBAAoB,GAAoC,IAAI,CAAC;UAC7D,2BAAsB,GAAuC,IAAI,CAAC;;UAOvE,MAAM,iBAAiB,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;;UAErD,MAAM,OAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC7C,IAAI,CAAC,OAAO,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;UAErC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;;UAE7E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;UACnB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;UACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;UAEzB,IAAI,CAAC,qBAAqB,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;UAC3D,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;UAChE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;UACtC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;;UAGvC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;UAC3C,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;;UAGtC,MAAM,OAAO,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;OACtD;MAEM,cAAc,CAAC,KAAe,KAAU;;MAGxC,sBAAsB,CAAC,KAAuB,KAAI;;MAGlD,YAAY,CAAC,OAAmB,KAAU;MAE1C,UAAU,CAAC,OAAmB,KAAU;MAKxC,QAAQ,CAAC,OAAmB,EAAE,WAAwB;UAC3D,MAAM,QAAQ,GAAgB,OAAO,CAAC,WAAW,EAAE,CAAC;UAEpD,IAAI,QAAQ,CAAC,UAAU,KAAK,CAAC,EAAE;cAC7B,OAAO;WACR;UAED,MAAM,QAAQ,GAAsB,OAAO,CAAC,WAAW,EAAE,CAAC;UAC1D,MAAM,QAAQ,GAAsB,OAAO,CAAC,WAAW,EAAE,CAAC;UAE1D,MAAM,MAAM,GAAoB,IAAI,CAAC,iBAAiB,CAAC;UACvD,MAAM,MAAM,GAAoB,IAAI,CAAC,iBAAiB,CAAC;UACvDA,aAAE,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;UAEzD,MAAM,aAAa,GAAqB,IAAI,CAAC,wBAAwB,CAAC;UACtE,OAAO,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;UAExC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAAE;cACnG,MAAM,EAAE,GAAiB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;cAC1D,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;cACvB,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;cACvB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;cAC1C,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;cACrB,EAAE,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;cACpD,EAAE,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;cACtD,EAAE,CAAC,UAAU,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;cAC7C,EAAE,IAAI,CAAC,YAAY,CAAC;WACrB;OACF;MAEM,SAAS,CAAC,OAAmB,EAAE,OAA0B,KAAU;MAEnE,QAAQ,CAAC,GAAW,KAAU;MAE9B,UAAU,CAAC,GAAW,KAAU;MAEhC,WAAW,CAAC,IAAY;UAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;OACxB;MAEM,SAAS,CAAC,KAAa;UAC5B,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;UACvD,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,oBAAoB,CAAC;OAC5C;MAEM,SAAS,CAAC,CAAU;UACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;UAE1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;UAC3B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACnC,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;;UAGrC,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;cAC9B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;cAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;WAC1B;UAED,IAAI,WAAW,GAA4B,IAAI,CAAC;;UAGhD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,OAAmB;cACjD,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;cAC/B,IAAI,IAAI,CAAC,OAAO,EAAE,KAAKA,aAAE,CAAC,QAAQ,CAAC,cAAc,EAAE;kBACjD,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;kBACpC,IAAI,MAAM,EAAE;sBACV,WAAW,GAAG,OAAO,CAAC;sBACtB,OAAO,KAAK,CAAC;mBACd;eACF;cACD,OAAO,IAAI,CAAC;WACb,CAAC,CAAC;UAEH,IAAI,WAAW,EAAE;cACf,MAAM,WAAW,GAAG,GAAG,CAAC;cACxB,MAAM,YAAY,GAAG,GAAG,CAAC;cAEzB,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;cACnC,MAAM,EAAE,GAAqB,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;cACpD,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;cAC7B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;cAClB,EAAE,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;cACpCA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cAEtE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;WACrB;OACF;MAEM,SAAS,CAAC,OAAgB;UAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;OAC5B;MAEM,iBAAiB,CAAC,CAAU;UACjC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;cACxB,OAAO;WACR;UAED,MAAM,UAAU,GAAW,EAAE,CAAC;UAC9B,MAAM,GAAG,GAAYA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC5E,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;UACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;UAC9C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;OAC7B;MAEM,cAAc,CAAC,CAAU;UAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAE1B,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;cAC9B,OAAO;WACR;UAED,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;OACnB;MAEM,OAAO,CAAC,CAAU;;UAEvB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;UAE5B,IAAI,IAAI,CAAC,YAAY,EAAE;cACrB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;cAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;WAC1B;UAED,IAAI,IAAI,CAAC,cAAc,EAAE;cACvB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;WAC3B;OACF;MAEM,SAAS,CAAC,CAAU;UACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAE1B,IAAI,IAAI,CAAC,YAAY,EAAE;cACrB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;WAChC;OACF;MAEM,UAAU;UACf,MAAM,CAAC,GAAY,IAAIA,aAAE,CAAC,IAAI,CAACA,aAAE,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;UAC5D,MAAM,CAAC,GAAYA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UACvD,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;OACzB;MAEM,YAAY,CAAC,QAAiB,EAAE,QAAiB;UACtD,IAAI,IAAI,CAAC,MAAM,EAAE;cACf,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;WACpB;UAED,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACxC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAC3B,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;UACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC1C,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;UAExC,MAAM,MAAM,GAAmB,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACpD,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;UAEtB,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC9C,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;UAClB,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC;UAChB,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC;;;;;;UASnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;OAC/B;MAEM,IAAI,CAAC,QAAkB;UAC5B,IAAI,QAAQ,GAAG,QAAQ,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;UAE/D,IAAI,QAAQ,CAAC,OAAO,EAAE;cACpB,IAAI,QAAQ,CAAC,YAAY,EAAE;kBACzB,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;eAC/B;mBAAM;kBACL,QAAQ,GAAG,CAAC,CAAC;eACd;cAED,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;cAC7D,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;WACzC;UAED,IAAI,KAAK,GAAGA,aAAE,CAAC,SAAS,CAAC,MAAM,CAAC;UAChC,IAAI,QAAQ,CAAC,YAAY,EAAE;cAAE,KAAK,IAAIA,aAAE,CAAC,SAAS,CAAC,UAAU,CAAC;WAAS;;UAEvE,IAAI,QAAQ,CAAC,eAAe,EAAE;cAAE,KAAK,IAAIA,aAAE,CAAC,SAAS,CAAC,aAAa,CAAC;WAAE;;UAEtE,IAAI,QAAQ,CAAC,YAAY,EAAE;cAAE,KAAK,IAAIA,aAAE,CAAC,SAAS,CAAC,UAAU,CAAC;WAAS;UACvE,IAAI,QAAQ,CAAC,WAAW,EAAG;cAAE,KAAK,IAAIA,aAAE,CAAC,SAAS,CAAC,SAAS,CAAC;WAAU;UACvE,IAAI,QAAQ,CAAC,UAAU,EAAI;cAAE,KAAK,IAAIA,aAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC;WAAE;;UAEvE,IAAI,QAAQ,CAAC,iBAAiB,EAAI;cAAE,KAAK,IAAIA,aAAE,CAAC,SAAS,CAAC,eAAe,CAAC;WAAE;;UAE5E,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;UAE5B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;UACtD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;UAC5D,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;UAC/D,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;;UAE1D,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;;UAGvE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;;UAGtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,CAAC,oBAAoB,EAAE,QAAQ,CAAC,oBAAoB,CAAC,CAAC;;;;UAKzH,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;UAEzB,IAAI,QAAQ,GAAG,CAAC,EAAE;cAChB,EAAE,IAAI,CAAC,WAAW,CAAC;WACpB;UAED,IAAI,QAAQ,CAAC,WAAW,EAAE;cACxB,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;cAC9C,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;cACpD,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;cAChD,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,2BAA2B,GAAG,SAAS,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC;cAC5H,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;;cAGxC,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;cAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;cACjE,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;cACvD,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;cACzD,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,kCAAkC,GAAG,aAAa,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC;cACvJ,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;;cAGxC,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;cAChD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;cAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;cAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;cAC9C,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,mCAAmC,GAAG,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;cACvJ,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;WACzC;;UAGD;cACE,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;cACpC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;cAChE,IAAI,CAAC,YAAY,CAAC,OAAO,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;cACzE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;cACnE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;cAC/E,IAAI,CAAC,YAAY,CAAC,aAAa,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;cAC3F,IAAI,CAAC,YAAY,CAAC,aAAa,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;cAC3F,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;cAC5E,IAAI,CAAC,YAAY,CAAC,UAAU,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;cAElF,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC;cACnC,IAAI,CAAC,cAAc,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC;cACzC,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC;cACrC,IAAI,CAAC,cAAc,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,CAAC;cAC7C,IAAI,CAAC,cAAc,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,CAAC;cACrD,IAAI,CAAC,cAAc,CAAC,aAAa,IAAI,CAAC,CAAC,aAAa,CAAC;cACrD,IAAI,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC;cAC3C,IAAI,CAAC,cAAc,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC;WAChD;UAED,IAAI,QAAQ,CAAC,aAAa,EAAE;cAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;cAEpC,MAAM,UAAU,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAChD,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;kBACxB,MAAM,KAAK,GAAW,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;kBAC3C,UAAU,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;kBACnD,UAAU,CAAC,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;kBACzD,UAAU,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;kBACrD,UAAU,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;kBAC7D,UAAU,CAAC,aAAa,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;kBACrE,UAAU,CAAC,aAAa,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;kBACrE,UAAU,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;kBAC3D,UAAU,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;eAChE;cAED,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,qBAAqB,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cAC5K,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;cACxC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,wBAAwB,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cACxL,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;cACxC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,sBAAsB,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cAChL,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;cACxC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,2BAA2B,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cACjM,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;cACxC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+BAA+B,GAAG,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cACjN,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;cACxC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+BAA+B,GAAG,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cACjN,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;cACxC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,yBAAyB,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cAC5L,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;cACxC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,4BAA4B,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cACrM,IAAI,CAAC,UAAU,IAAI,oBAAoB,CAAC;WACzC;;UAGD,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;cAC7C,MAAM,KAAK,GAAG,GAAG,CAAC;;cAElB,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;cACnC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;cAC/H,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;;cAE/H,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;;cAE9D,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;cAC5E,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;cAC3C,KAAK,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;;cAE/C,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;cAC9F,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;cAC3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAC9B,EAAE,CAAC,WAAW,EAAE,CAAC;cACjB,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;cAC/B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;WACxC;;UAGD,IAAI,IAAI,CAAC,cAAc,EAAE;cACvB,MAAM,CAAC,GAAa,IAAIA,aAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cAC1C,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cAEnD,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cACxB,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;WACtE;UAED,IAAI,QAAQ,CAAC,mBAAmB,EAAE;cAChC,MAAM,cAAc,GAAW,GAAG,CAAC;cACnC,MAAM,WAAW,GAAW,GAAG,CAAC;cAEhC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;kBAClD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;kBAE/B,IAAI,KAAK,CAAC,KAAK,KAAKA,aAAE,CAAC,UAAU,CAAC,WAAW,EAAE;;sBAE7C,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;mBACzE;uBAAM,IAAI,KAAK,CAAC,KAAK,KAAKA,aAAE,CAAC,UAAU,CAAC,eAAe,EAAE;;sBAExD,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;mBACxE;kBAED,IAAI,QAAQ,CAAC,oBAAoB,EAAE;sBACjC,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;sBAC1B,MAAM,EAAE,GAAYA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,MAAM,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;sBAC7G,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;mBAC9D;uBAAM,IAAI,QAAQ,CAAC,oBAAoB,EAAE;sBACxC,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;sBAC1B,MAAM,EAAE,GAAYA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,cAAc,GAAG,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;sBAC7G,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;mBAC9D;kBAED,IAAI,QAAQ,CAAC,qBAAqB,EAAE;sBAClC,MAAM,OAAO,GAAYA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;sBACxE,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;sBAC1B,MAAM,EAAE,GAAYA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,cAAc,GAAG,KAAK,CAAC,cAAc,EAAE,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;sBACzG,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;mBAC9D;eACF;WACF;OACF;MAEM,WAAW,CAAC,SAAkB;UACnC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;OACrC;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;;;;;;;;;;;MA0BM,kBAAkB,CAAC,KAAuB,EAAE,iBAAyB;;UAE1E,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;UAC3D,MAAM,aAAa,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;UAC/C,MAAM,UAAU,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;UAC1C,MAAM,QAAQ,GAAG,aAAa,GAAG,UAAU,CAAC;UAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;UAChD,IAAI,CAAC,iBAAiB,EAAE;cACtB,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;cAC3D,IAAI,CAAC,iBAAiB,EAAE;kBACtB,iBAAiB,GAAG,CAAC,CAAC;eACvB;WACF;UACD,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;;cAE1C,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,iBAAiB,CAAC,GAAG,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;WAChG;OACF;;;;;MAMM,4BAA4B,CAAC,UAAkB;UACpD,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;UAC5E,MAAM,aAAa,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;;UAEtE,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;;UAE/B,IAAI,SAAS,GAAG,CAAC,CAAC;UAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;cACzC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,UAAU,EAAE;kBACvC,SAAS;eACV;;cAED,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,IAAI,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;cACpF,SAAS,EAAE,CAAC;WACb;UACD,IAAI,CAAC,sBAAsB,GAAG,IAAI,2BAA2B,CAAC,IAAI,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;;;UAGpG,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;OAC9D;;;;MAKM,yBAAyB;UAC9B,IAAI,IAAI,CAAC,oBAAoB,EAAE;cAC7B,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;;cAErE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;WAClC;OACF;;;;;MAMM,OAAO,mCAAmC,CAAC,MAAe;UAC/D,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;OACnD;;;;;;;MAQM,OAAO,yBAAyB,CAAC,KAAa;UACnD,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;;;UAG7D,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;UACnD,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;OAC1C;;;;;MAMM,OAAO,yBAAyB;;UAErC,IAAI,CAAC,YAAY,CAAC,oCAAoC,CAAC,IAAI,CAAC,CAAC;UAC7D,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;OAC1C;;;;MAKM,OAAO,qBAAqB,CAAC,oBAAmD,EAAE,4BAAoC,oBAAoB,CAAC,MAAM;UACtJ,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,oBAAoB,EAAE,yBAAyB,CAAC,CAAC;OACvF;;EA5jBD;EACuB,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;EAClC,sBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC;EACnE;EACuB,uBAAkB,GAAW,IAAI,CAAC;EAoE1C,sBAAiB,GAAoB,2BAA0B,CAAC;EAChE,sBAAiB,GAAoB,2BAA0B,CAAC;EAChE,6BAAwB,GAAqB,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;EA8XnF;EACuB,qBAAgB,GAAe;MACpD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;GACnD,CAAC;EAEqB,0BAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM;;ECllB7E;QAyBa,OAAQ,SAAQE,IAAY;MACvC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIF,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAC/C;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC;cAClB,MAAM,IAAI,GAAG,GAAG,CAAC;cACjB,MAAM,IAAI,GAAG,GAAG,CAAC;cACjB,MAAM,IAAI,GAAG,GAAG,CAAC;cAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;kBAC5B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAACA,aAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,EAAEA,aAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;kBACxE,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;eACjC;WACF;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5B,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;cACjB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,IAAI,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;WAChD;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM;;ECvE7F;EAyBA;EACA;EACA;QACa,UAAW,SAAQD,IAAY;MAG1C;UACE,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIF,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE/C,MAAM,aAAa,GAAG,GAAG,CAAC;UAE1B,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAEjC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,WAAW,GAAG,aAAa,CAAC;;cAG/B,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACvE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAGzB,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACrE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAGzB,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACrE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAGzB,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;cACvE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;UAED;cACE,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAC/B,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAGA,aAAE,CAAC,EAAE,CAAC,CAAC;cAC/B,GAAG,CAAC,CAAC,CAAC,IAAI,CAACA,aAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAEtE,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;cAC7B,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC7E,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5E,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAE5E,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEvB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAChC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC;cAElB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAC/B,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAGA,aAAE,CAAC,EAAE,CAAC,CAAC;cAChC,GAAG,CAAC,CAAC,CAAC,IAAI,CAACA,aAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAEvE,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC7E,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5E,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAE5E,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEvB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAChC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAErC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,EAAE,CAAC;cACjB,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;cAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;cAE/B,MAAM,OAAO,GAAW,IAAI,CAAC;cAC7B,MAAM,CAAC,GAAW,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;cAC3C,MAAM,IAAI,GAAW,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;;;;cAK3C,MAAM,MAAM,GAAWA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;cAE/C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;cACvB,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;cAC1B,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;cACnD,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;cAC3B,EAAE,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,GAAG,OAAO,CAAC;cACnC,EAAE,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC;cAE7C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC9B;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;kBAC3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBAErC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;kBACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,MAAM,OAAO,GAAG,IAAI,CAAC;kBACrB,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;kBAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;;kBAG5B,MAAM,MAAM,GAAGA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;kBAEvC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;kBACrC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;kBAC1B,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;kBAC1B,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;kBAClB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;kBAChB,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;kBAC3B,EAAE,CAAC,QAAQ,GAAG,IAAI,GAAG,OAAO,CAAC;kBAC7B,EAAE,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC;kBAE7C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;eAC9B;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN;sBACE,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;sBAC7E,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;sBAC1E,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;mBACpC;kBACD,MAAM;cAER,KAAK,GAAG;kBACN;sBACE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;mBACrC;kBACD,MAAM;cAER,KAAK,GAAG;kBACN;sBACE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;mBACtC;kBACD,MAAM;WACT;UAED,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;OACrB;MAEM,IAAI,CAAC,QAA0B;UACpCI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;UACpF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;AAEgCF,cAAoB,CAAC,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM;;EChNhG;QAyBa,SAAU,SAAQD,IAAY;MAKzC;UACE,KAAK,EAAE,CAAC;UAHH,YAAO,GAAG,CAAC,CAAC;UAKjB,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;UAEnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UAEjB,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;UAGzB;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEhD,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAC7C;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE9C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC,CAAC;cAE7D,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAElC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACtC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAC1E,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC;cAC1B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE9B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;cACvC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAEtF,GAAG,CAAC,aAAa,GAAG,MAAM,CAAC;cAC3B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cACvB,GAAG,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC;cAC7B,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;cAC5B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cAEvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE9B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;WACpB;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,OAAO,CAACA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;kBACpD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,OAAO,CAACA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;kBACnD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,OAAO,CAACA,aAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;kBACtD,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;kBACnE,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;kBACxC,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;;UAEpC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAKA,aAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE;cAC9D,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;cAC3C,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;cAE9C,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG;mBAC1B,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE;kBAC3B,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;eAC3D;WACF;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,8CAA8C,CAAC,CAAC;UACnG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;GACF;AAEgCF,cAAoB,CAAC,UAAU,EAAE,YAAY,EAAE,SAAS,CAAC,MAAM;;ECvJhG;QAyBa,QAAS,SAAQD,IAAY;MAQxC;UACE,KAAK,EAAE,CAAC;UALH,aAAQ,GAAmB,IAAI,CAAC;UAOrC,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;UACxE,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;UAEzE;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;UAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE;cAC/C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;kBAC5C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBAErC,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;;kBAEtC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;kBACtB,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;kBAEhC,MAAM,CAAC,GAAG,GAAG,CAAC;;;kBAGd,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;kBAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;kBAExB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eACxB;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,QAAQ,EAAE;sBACjB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;sBACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;mBACtB;kBAED;sBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;sBACnC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;sBAEtB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;sBAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;sBACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;sBAClB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;sBAEtB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;sBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;sBACrC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;sBACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;sBAE5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;sBAC5C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;sBAEhC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;mBAC1D;kBACD,MAAM;cACR,KAAK,GAAG;kBACNA,aAAE,CAAC,gBAAgB,CAAC,CAACA,aAAE,CAAC,gBAAgB,EAAE,CAAC,CAAC;kBAC5C,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,gCAAgC,CAAC,CAAC;UACrF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;OA8BjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;;EAjIsB,sBAAa,GAAG,CAAC,CAAC;EAClB,mBAAU,GAAG,EAAE,CAAC;AAmIRF,cAAoB,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,MAAM;;EC9J1F;EAyBA;QACa,SAAU,SAAQD,IAAY;MAazC;UACE,KAAK,EAAE,CAAC;UAVM,eAAU,GAAG,IAAIF,aAAE,CAAC,IAAI,EAAE,CAAC;UACpC,sBAAiB,GAAG,CAAC,CAAC;UACb,aAAQ,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACjC,aAAQ,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAC1C,aAAQ,GAAsB,IAAI,CAAC;UACnC,aAAQ,GAAsB,IAAI,CAAC;UACnC,YAAO,GAAG,KAAK,CAAC;UAChB,YAAO,GAAG,KAAK,CAAC;;UAMrB;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,EAAE,CAAC,KAAK,GAAG,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC;cACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,IAAI,CAAC,QAAQ,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;cAE/D,IAAI,CAAC,QAAQ,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;WAChE;OACF;MAEM,SAAS,CAAC,OAAmB,EAAE,OAA0B;UAC9D,IAAI,IAAI,CAAC,OAAO,EAAE;;cAEhB,OAAO;WACR;;UAGD,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC;UAE/C,IAAI,UAAU,GAAG,GAAG,CAAC;UACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;cAC9B,UAAU,GAAGA,aAAE,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;WAC5D;UAED,IAAI,UAAU,GAAG,IAAI,EAAE;;cAErB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;WACrB;OACF;MAEM,KAAK;UACV,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;cAAE,OAAO;WAAE;UACvC,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;cAAE,OAAO;WAAE;;UAEvC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;UACtC,MAAM,MAAM,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;UAEtC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;UAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;UACtC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;UAE5B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC1C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;;;UAIxD,MAAM,OAAO,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;UACvC,MAAM,OAAO,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;UAEvC,MAAM,SAAS,GAAGA,aAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC5I,MAAM,SAAS,GAAGA,aAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAE5I,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;UACjD,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;UAEnC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;UACjD,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;OACpC;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,KAAK,EAAE,CAAC;cACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;cACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;WACtB;;UAGD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;cACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC;cACvD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;WAC5D;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;;EAlHsB,iBAAO,GAAG,CAAC,CAAC;AAqHJG,cAAoB,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,MAAM;;EChJ/F;QAyBa,MAAO,SAAQD,IAAY;MAKtC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAElB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cAErC,IAAI,QAAQ,GAAG,MAAM,CAAC;cACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBACvC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;kBACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;kBACjD,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;kBACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;kBAE7B,IAAI,CAAC,MAAM,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,EAAE;sBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;mBACtB;kBACD,QAAQ,GAAG,IAAI,CAAC;eACjB;cAED,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAC9D,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;cACxC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC9B;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;cAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEpC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;cAEpB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;cACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;cACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;;EA9FsB,cAAO,GAAG,EAAE,CAAC;AAiGLG,cAAoB,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM;;EC3HvF;QAyBa,UAAW,SAAQD,IAAY;MAK1C;UACE,KAAK,EAAE,CAAC;UAHH,QAAG,GAAW,CAAC,CAAC;UAKrB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAEhC,IAAI,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAE9B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE1B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEpC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;cAGzB,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC;cACtB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAChC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;cAEjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC5C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAExC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;WAC1D;OACF;MAEM,MAAM;UACX,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UACxD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAACA,aAAE,CAAC,SAAS,CAAC,CAAC;UAC5C,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;UAEpC,IAAI,CAAC,GAAG,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACrC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;UAChE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;UACzD,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;;;;;;;UAStCA,aAAE,CAAC,SAAS,EAAE,CAAC;;;;;;UAOfA,aAAE,CAAC,SAAS,EAAE,CAAC;OAChB;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAIA,aAAE,CAAC,QAAQ,GAAG,CAAC,EAAE;;cAEnBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,eAAeJ,aAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,qBAAqB,CAACA,aAAE,CAAC,QAAQ,GAAGA,aAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,qBAAqBA,aAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;cACrM,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;WACjD;UAED,IAAIL,aAAE,CAAC,QAAQ,GAAG,CAAC,EAAE;;cAEnBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,eAAeJ,aAAE,CAAC,QAAQ,qBAAqB,CAACA,aAAE,CAAC,QAAQ,GAAGA,aAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,qBAAqBA,aAAE,CAAC,eAAe,EAAE,CAAC,CAAC;cACnL,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;;cAGhDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,wBAAwB,CAACJ,aAAE,CAAC,YAAY,GAAGA,aAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,0BAA0BA,aAAE,CAAC,eAAe,EAAE,CAAC,CAAC;cACrK,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;WACjD;UAED,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,KAAK,CAAC,EAAE;cAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;WACf;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;AAEgCF,cAAoB,CAAC,YAAY,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM;;ECjIpG;EAyBA;EACA;EACA;EACA;QACa,UAAW,SAAQD,IAAY;MAG1C;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAElB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAEjC,IAAI,QAAQ,GAAG,MAAM,CAAC;cACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAC3C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;kBACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;kBACjD,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;kBACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;kBAE7B,QAAQ,GAAG,IAAI,CAAC;eACjB;WACF;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACjC,MAAM,WAAW,GAAW,GAAG,CAAC;cAChC,MAAM,YAAY,GAAW,GAAG,CAAC;cAEjC,IAAI,QAAQ,GAAG,MAAM,CAAC;cACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;kBAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBAClD,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;kBAC1CA,aAAE,CAAC,gBAAgB,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;kBACnE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;kBAE7B,QAAQ,GAAG,IAAI,CAAC;eACjB;WACF;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAEjC,IAAI,QAAQ,GAAG,MAAM,CAAC;cACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAC3C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,IAAI,CAAC,GAAG,CAAC,EAAE;sBACT,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;sBACjD,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;sBACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;mBAC9B;kBAED,QAAQ,GAAG,IAAI,CAAC;eACjB;WACF;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACjC,MAAM,WAAW,GAAW,GAAG,CAAC;cAChC,MAAM,YAAY,GAAW,GAAG,CAAC;cAEjC,IAAI,QAAQ,GAAG,MAAM,CAAC;cACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAC3C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,IAAI,CAAC,GAAG,CAAC,EAAE;sBACT,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;sBAChD,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;sBACtCA,aAAE,CAAC,gBAAgB,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;sBACvE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;mBAC9B;kBAED,QAAQ,GAAG,IAAI,CAAC;eACjB;WACF;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;cAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEpC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;cAEpB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;cACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;cACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;;EA5KsB,kBAAO,GAAG,CAAC,CAAC;AA+KJG,cAAoB,CAAC,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,MAAM;;EC7M/F;EAyBA;QACa,GAAI,SAAQD,IAAY;MAQnC;UACE,KAAK,EAAE,CAAC;UALH,YAAO,GAAW,GAAG,CAAC;UAO3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;UAEpB,IAAI,MAAe,CAAC;UACpB;cACE,MAAM,EAAE,GAAe,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAiB,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAE/C,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAa,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAE9E,IAAI,CAAC,GAAW,IAAI,EAAE,EAAE,GAAW,GAAG,CAAC;cACvC,MAAM,EAAE,GAAW,GAAG,CAAC;cAEvB,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;kBACnC,MAAM,EAAE,GAAW,EAAE,CAAC,CAAC,CAAC,CAAC;kBACzB,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;kBAC/D,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBACzB,EAAE,GAAG,EAAE,CAAC;kBACR,CAAC,IAAI,EAAE,CAAC;eACT;cAED,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;kBACnC,MAAM,EAAE,GAAW,EAAE,CAAC,CAAC,CAAC,CAAC;kBACzB,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;kBAC/D,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBACzB,EAAE,GAAG,EAAE,CAAC;kBACR,CAAC,IAAI,EAAE,CAAC;eACT;cAED,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEzB,CAAC,IAAI,IAAI,CAAC;cACV,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEzB,CAAC,IAAI,IAAI,CAAC;cACV,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEzB,CAAC,IAAI,IAAI,CAAC;cACV,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEzB,CAAC,IAAI,IAAI,CAAC;cACV,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;cAC7D,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;;UAGD;cACE,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAY,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAElD,MAAM,GAAG,GAAoB,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACnD,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACzB,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE7B,MAAM,EAAE,GAAwB,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cAC1D,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;cAChD,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;cACrC,EAAE,CAAC,UAAU,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;cACpC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAE7B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;WACjC;;UAGD;cACE,MAAM,CAAC,GAAW,EAAE,CAAC;cACrB,MAAM,KAAK,GAAoB,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACrD,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,MAAM,EAAE,GAAwB,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cAE1D,IAAI,QAAQ,GAAY,MAAM,CAAC;cAC/B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;kBAClC,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBACxC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;kBACzC,MAAM,IAAI,GAAY,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAClD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,MAAM,MAAM,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;kBAC7D,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;kBACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;kBAE7B,QAAQ,GAAG,IAAI,CAAC;eACjB;cAED,MAAM,MAAM,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;cAC7D,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;cACxC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC9B;;UAGD;cACE,MAAM,GAAG,GAAoB,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACnD,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEvB,IAAI,IAAa,CAAC;cAClB,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAErC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC5B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACnC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE7B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC5B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACnC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE7B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC5B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACnC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE7B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC5B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACnC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE7B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC5B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACnC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WAC9B;;UAGD;cACE,MAAM,OAAO,GAAoB,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACvD,MAAM,QAAQ,GAAcA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cACjD,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEzB,MAAM,MAAM,GAAmB,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACpD,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;cAEtB,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAEvC,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC5C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC5C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEhC,MAAM,EAAE,GAAqB,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;cACpD,MAAM,IAAI,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE/C,MAAM,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;cAC9C,MAAM,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;cAE9C,MAAM,KAAK,GAAW,GAAG,CAAC;cAC1B,MAAM,YAAY,GAAW,GAAG,CAAC;cACjC,MAAM,KAAK,GAAW,GAAG,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;cAEvC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;cAC5E,EAAE,CAAC,UAAU,GAAG,GAAG,CAAC;cACpB,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC;cACzB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACzB,EAAE,CAAC,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;cACrC,EAAE,CAAC,OAAO,GAAG,GAAG,GAAG,KAAK,GAAG,YAAY,GAAG,KAAK,CAAC;cAChD,EAAE,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC;cAC5B,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;cAC3B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAE9C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;cAC5E,EAAE,CAAC,UAAU,GAAG,GAAG,CAAC;cACpB,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC;cACzB,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;cAC1B,EAAE,CAAC,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;cACrC,EAAE,CAAC,OAAO,GAAG,GAAG,GAAG,KAAK,GAAG,YAAY,GAAG,KAAK,CAAC;cAChD,EAAE,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC;cAC5B,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;cAC3B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC/C;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACX,KAAK,GAAG;kBACN,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;kBAC3C,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;kBAClC,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;kBAC5C,MAAM;WACP;OACF;MAEM,IAAI,CAAC,QAA0B;UACpCI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,8DAA8D,CAAC,CAAC;UACnH,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhDC,QAAgB,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;UACzD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,GAAG,EAAE,CAAC;OAClB;GACF;AAEgCH,cAAoB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,MAAM;;ECpRnF;QA2Ba,KAAM,SAAQD,IAAY;MAGrC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAElB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;cAE5B,MAAM,CAAC,GAAG,IAAI,CAAC;cACf,IAAI,QAAQ,GAAG,MAAM,CAAC;cACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBACtC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;kBAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAWzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;kBACjC,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;kBACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;kBAE7B,QAAQ,GAAG,IAAI,CAAC;eACjB;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,KAAK,EAAE,CAAC;OACpB;;EA9DsB,aAAO,GAAG,EAAE,CAAC;AAiELG,cAAoB,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,MAAM;;EC7FrF;EAyBA;EACA;EACA;QACa,kBAAmB,SAAQD,IAAY;MAGlD;UACE,KAAK,EAAE,CAAC;;UAGR;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;;;UAKD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,KAAK,GAAG,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC;cACxB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cAChC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACrB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;;;UAKD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACrD,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACrD,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACrD,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cAChC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACrB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;cACjC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACrB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;cACxB,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;cACxB,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;cACxB,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,IAAI,KAAK,GAAG,GAAG,CAAC;cAChB,MAAM,KAAK,GAAGA,aAAE,CAAC,EAAE,GAAG,GAAG,CAAC;cAC1B,MAAM,QAAQ,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;kBAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAGA,aAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,GAAGA,aAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;kBAC1D,KAAK,IAAI,KAAK,CAAC;eAChB;cAED,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEvB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;cACxB,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cAEtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE/C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;cAEtB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACpC;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,KAAK,EAAE,CAAC;UACvD,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;UACX,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;UAEtC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+CAA+C,CAAC,CAAC;UACpG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,2DAA2D,CAAC,CAAC;UAChH,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,4DAA4D,CAAC,CAAC;UACjH,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,kBAAkB,EAAE,CAAC;OACjC;GACF;AAEgCF,cAAoB,CAAC,UAAU,EAAE,qBAAqB,EAAE,kBAAkB,CAAC,MAAM;;EC5PlH;QAyBa,WAAY,SAAQD,IAAY;MAK3C;UACE,KAAK,EAAE,CAAC;UAHH,aAAQ,GAAc,EAAE,CAAC;UAK9B;cACE,MAAM,EAAE,GAAe,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,MAAM,MAAM,GAAY,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEpD,MAAM,KAAK,GAAiB,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAC/C,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAmB,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnD,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBACpD,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBACxC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;kBAEpC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAE/C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAE3C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;eAC7D;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;;;;;;;OAatB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;;EApDsB,mBAAO,GAAW,EAAE,CAAC;AAuDbG,cAAoB,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,MAAM;;ECjF/F;EAyBA;EACA;EACA;EACA;EACA;EACA;QACa,kBAAmB,SAAQD,IAAY;MAUlD;UACE,KAAK,EAAE,CAAC;;UAGR;cACE,MAAM,KAAK,GAAG,IAAIF,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;;UAGD,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;UAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACpC,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACtC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UAEzB,MAAM,gBAAgB,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC7C,gBAAgB,CAAC,KAAK,GAAG,OAAO,CAAC;UACjC,gBAAgB,CAAC,OAAO,GAAG,GAAG,CAAC;UAE/B,gBAAgB,CAAC,MAAM,CAAC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC;UACrE,gBAAgB,CAAC,MAAM,CAAC,YAAY,GAAG,kBAAkB,CAAC,kBAAkB,CAAC;UAC7E,gBAAgB,CAAC,MAAM,CAAC,QAAQ,GAAG,kBAAkB,CAAC,cAAc,CAAC;UAErE,MAAM,eAAe,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACzC,eAAe,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAClD,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAExC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;UACvD,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;;UAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UACzB,gBAAgB,CAAC,MAAM,CAAC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC;UACrE,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACxC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC;UAErC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;UACvD,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;UAEtC;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAChC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;cACtC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;cAC1B,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC5B,EAAE,CAAC,gBAAgB,GAAG,CAAC,GAAG,CAAC;cAC3B,EAAE,CAAC,gBAAgB,GAAG,GAAG,CAAC;cAE1B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC9B;;UAGD,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC3B,MAAM,WAAW,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UACxC,WAAW,CAAC,KAAK,GAAG,OAAO,CAAC;UAC5B,WAAW,CAAC,OAAO,GAAG,GAAG,CAAC;UAC1B,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;UAE9B,WAAW,CAAC,MAAM,CAAC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC;UAChE,WAAW,CAAC,MAAM,CAAC,YAAY,GAAG,kBAAkB,CAAC,aAAa,CAAC;UACnE,WAAW,CAAC,MAAM,CAAC,QAAQ,GAAG,kBAAkB,CAAC,SAAS,CAAC;UAE3D,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACpC,UAAU,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAC7C,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAElC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;UAClD,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;;UAGjC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC3B,WAAW,CAAC,MAAM,CAAC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC;UAChE,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAElC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;UAClD,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;;UAGjC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACpC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;UAEtB,MAAM,cAAc,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC3C,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC;UAC9B,cAAc,CAAC,OAAO,GAAG,GAAG,CAAC;UAE7B,cAAc,CAAC,MAAM,CAAC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC;UACnE,cAAc,CAAC,MAAM,CAAC,YAAY,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;UACzE,cAAc,CAAC,MAAM,CAAC,QAAQ,GAAG,kBAAkB,CAAC,YAAY,CAAC;UAEjE,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACvC,aAAa,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAChD,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAErC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;UACrD,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;;UAGpC,MAAM,CAAC,QAAQ,IAAI,GAAG,CAAC;UACvB,cAAc,CAAC,MAAM,CAAC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC;UACnE,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAErC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;UACrD,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;OACrC;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,kBAAkB,EAAE,CAAC;OACjC;;EAhJsB,+BAAY,GAAG,CAAC,CAAC;EACjB,+BAAY,GAAG,CAAC,CAAC,CAAC;EAClB,qCAAkB,GAAG,MAAM,CAAC;EAC5B,gCAAa,GAAG,MAAM,CAAC;EACvB,mCAAgB,GAAG,MAAM,CAAC;EAC1B,iCAAc,GAAG,MAAM,CAAC;EACxB,4BAAS,GAAG,MAAM,GAAG,kBAAkB,CAAC,kBAAkB,CAAC;EAC3D,+BAAY,GAAG,MAAM,CAAC;AA4IdG,cAAoB,CAAC,UAAU,EAAE,qBAAqB,EAAE,kBAAkB,CAAC,MAAM;;ECnLlH;EAyBA;EACA;QACa,mBAAoB,SAAQD,IAAY;MACnD;UACE,KAAK,EAAE,CAAC;;UAGR;cACE,MAAM,KAAK,GAAG,IAAIF,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cAEjB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;UAED,MAAM,GAAG,GAAG,CAAC,GAAG,EACd,GAAG,GAAG,GAAG,CAAC;UACZ,MAAM,GAAG,GAAG,GAAG,EACb,GAAG,GAAG,IAAI,CAAC;;UAGb,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;UAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAEpC,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACtC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UAEzB,MAAM,gBAAgB,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC7C,gBAAgB,CAAC,KAAK,GAAG,OAAO,CAAC;UACjC,gBAAgB,CAAC,OAAO,GAAG,GAAG,CAAC;UAE/B,MAAM,eAAe,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACzC,eAAe,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAClD,eAAe,CAAC,QAAQ,CAAC,GAAG,CAACA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAEjF,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;UACvD,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;;UAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;UACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UAEzB,eAAe,CAAC,QAAQ,CAAC,GAAG,CAACA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAEjF,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;UACvD,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;;UAGtC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAE3B,MAAM,WAAW,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UACxC,WAAW,CAAC,KAAK,GAAG,OAAO,CAAC;UAC5B,WAAW,CAAC,OAAO,GAAG,GAAG,CAAC;UAE1B,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACpC,UAAU,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAC7C,UAAU,CAAC,QAAQ,CAAC,GAAG,CAACA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE5E,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;UAClD,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;;UAGjC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC3B,UAAU,CAAC,QAAQ,CAAC,GAAG,CAACA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE5E,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;UAClD,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;;UAGjC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACpC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;UAEtB,MAAM,cAAc,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC3C,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC;UAC9B,cAAc,CAAC,OAAO,GAAG,GAAG,CAAC;UAE7B,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACvC,aAAa,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAChD,aAAa,CAAC,QAAQ,CAAC,GAAG,CAACA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE/E,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;UACrD,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;;UAGpC,MAAM,CAAC,QAAQ,IAAI,GAAG,CAAC;UACvB,aAAa,CAAC,QAAQ,CAAC,GAAG,CAACA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE/E,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;UACrD,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;OAErC;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;UAKrB,MAAM,SAAS,GAAG,CAAC,CAAC;UACpB,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;UAClC,IAAI,SAAS,GAAG,CAAC,CAAC;;;UAIlB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAE/B,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;cACvC,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;cACvC,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;cAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;cAE9B,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE;kBAC9B,IAAI,KAAK,GAAG,KAAK,EAAE;sBACjB,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,KAAK,CAAC;mBAC3B;uBAAM;sBACL,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,KAAK,CAAC;mBAC3B;kBAED,IAAI,SAAS,KAAK,SAAS,EAAE;sBAC3B,MAAM;mBACP;eACF;WACF;;UAGD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;cACb,OAAO,CAAC,GAAG,CAAC,CAAC;WACd,CAAC,CAAC;;UAGH,IAAI,CAAC,GAAG,CAAC,CAAC;UACV,OAAO,CAAC,GAAG,SAAS,EAAE;cACpB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;cACpB,OAAO,CAAC,GAAG,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;kBACrC,EAAE,CAAC,CAAC;eACL;cAED,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;kBACrB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;eAC7B;WACF;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,mBAAmB,EAAE,CAAC;OAClC;GACF;AAEgCG,cAAoB,CAAC,UAAU,EAAE,sBAAsB,EAAE,mBAAmB,CAAC,MAAM;;ECtLpH;QAyBa,cAAe,SAAQD,IAAY;MAM9C;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE5C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEnD,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACtC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAExD,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACvC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAExD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACtC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAC1C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;WAC5C;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE5C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEnD,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACtC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAExD,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACvC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAExD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACtC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAC1C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;WAC5C;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,QAAQ,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cAEtC,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACnC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;cAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEtB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;cAChC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACtC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WACxC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,QAAQ,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cAEtC,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACnC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEtB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cAEvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACtC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WACxC;OACF;MAEM,KAAK;;UAEV;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;cAEpC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEnD,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WAC9B;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;cAEpC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEnD,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WAC9B;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;cAC7C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;cACnC,EAAE,CAAC,YAAY,GAAG,GAAG,CAAC;cAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACpC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;cACtB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;WACjC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;cAC7C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;cACnC,EAAE,CAAC,YAAY,GAAG,GAAG,CAAC;cAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACpC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;cACtB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;WACjC;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBAAE,IAAI,CAAC,KAAK,EAAE,CAAC;kBAAC,MAAM;WAC/B;UACD,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;OACrB;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,cAAc,EAAE,CAAC;OAC7B;GACF;AAEgCG,cAAoB,CAAC,UAAU,EAAE,iBAAiB,EAAE,cAAc,CAAC,MAAM;;EC3N1G;QAyBa,QAAS,SAAQD,IAAY;MAIxC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;;cAGjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;cAGjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACrE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;cAGjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;cAGjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACrE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,MAAM,MAAM,GAAG,GAAG,CAAC;UACnB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACnC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;UACpB,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;UAExB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;UACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;UAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE;cAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;kBAC5C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC;kBACvF,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eACxB;WACF;UAED,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;OAChD;MAEM,YAAY;UACjB,MAAM,MAAM,GAAG,GAAG,CAAC;UACnB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACnC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;UACpB,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;UAExB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;UACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;UAElB,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAACA,aAAE,CAAC,MAAM,EAAE,EAAE,GAAG,GAAGA,aAAE,CAAC,MAAM,EAAE,CAAC,CAAC;UACtD,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;UAEpB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAEzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;OACxB;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,YAAY,EAAE,CAAC;kBACpB,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UAEpC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;cACxD,IAAI,CAAC,CAAC,OAAO,EAAE,KAAKA,aAAE,CAAC,QAAQ,CAAC,cAAc,EAAE;kBAC9C,SAAS;eACV;cAED,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAEhB;WACF;UAED,IAAI,IAAI,CAAC,WAAW,KAAK,GAAG,EAAE;cAC5B,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;WACvB;UAMD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;cACxD,IAAI,CAAC,CAAC,OAAO,EAAE,KAAKA,aAAE,CAAC,QAAQ,CAAC,cAAc,EAAE;kBAC9C,SAAS;eACV;;;;;WAMF;UAEDI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;UACpF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;;EAzHsB,sBAAa,GAAG,CAAC,CAAC;EAClB,mBAAU,GAAG,CAAC,CAAC;AA2HPF,cAAoB,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM;;ECtJ3F;QAyBa,cAAe,SAAQD,IAAY;MAI9C;UACE,KAAK,EAAE,CAAC;UAHH,sBAAiB,GAAG,GAAG,CAAC;UAK7B;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAEhC,IAAI,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAE9B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;cAG3B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEtC,IAAI,CAAC,iBAAiB,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;cAErD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;cACxD,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;WACxD;;;;;;;;;;;;;;;;;;;;;;UAuBDA,aAAE,CAAC,SAAS,EAAE,CAAC;;;;;;;UAOfA,aAAE,CAAC,SAAS,EAAE,CAAC;OAChB;MAEM,MAAM;;;;UAIXA,aAAE,CAAC,SAAS,EAAE,CAAC;;;;;;;UAOfA,aAAE,CAAC,SAAS,EAAE,CAAC;UAEf,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;UACzD,IAAI,CAAC,iBAAiB,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UACrD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;UACxD,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;OACxD;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAIA,aAAE,CAAC,QAAQ,GAAG,CAAC,EAAE;;cAEnBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,eAAeJ,aAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,qBAAqB,CAACA,aAAE,CAAC,QAAQ,GAAGA,aAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,qBAAqBA,aAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;cACrM,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;WACjD;UAED,IAAIL,aAAE,CAAC,QAAQ,GAAG,CAAC,EAAE;;cAEnBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,qBAAqBJ,aAAE,CAAC,QAAQ,qBAAqB,CAACA,aAAE,CAAC,QAAQ,GAAGA,aAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,KAAKA,aAAE,CAAC,eAAe,GAAG,CAAC,CAAC;cAC1K,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;;cAGhDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,8BAA8B,CAACJ,aAAE,CAAC,YAAY,GAAGA,aAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,KAAKA,aAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;cAClK,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;;cAGhDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,wBAAwB,CAAC,MAAM,GAAGJ,aAAE,CAAC,OAAO,GAAGA,aAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAGA,aAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;cACrL,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;WACjD;UAED,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,KAAK,CAAC,EAAE;cAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;WACf;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,cAAc,EAAE,CAAC;OAC7B;GACF;AAEgCF,cAAoB,CAAC,YAAY,EAAE,iBAAiB,EAAE,cAAc,CAAC,MAAM;;ECpJ5G;QAyBa,UAAW,SAAQD,IAAY;MAO1C;UACE,KAAK,EAAE,CAAC;UALH,kBAAa,GAAc,EAAE,CAAC;UAC9B,YAAO,GAAG,CAAC,CAAC;UACZ,WAAM,GAAG,KAAK,CAAC;UAKpB,IAAI,CAAC,QAAQ,EAAE,CAAC;OACjB;MAEM,QAAQ;UACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cAC3C,IAAI,CAAC,GAAGF,aAAE,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACpC,IAAI,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;;cAIpC,CAAC,GAAGA,aAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,CAAC,GAAGA,aAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;WAC3C;UAED,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;OACnC;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;kBAC3B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,EAAE,CAAC;kBAChB,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;UAE5CI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,8CAA8C,CAAC,CAAC;UACnG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhDD,WAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE9F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cACrCI,WAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cACvFI,WAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;WAC7G;UAED,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE;cACrB,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;WACtB;UAED,IAAI,IAAI,CAAC,MAAM,EAAE;cACf,IAAI,CAAC,QAAQ,EAAE,CAAC;WACjB;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;;EAlEsB,kBAAO,GAAG,EAAE,CAAC;AAqELD,cAAoB,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM;;EC/FlG;QAyBa,YAAa,SAAQD,IAAY;MAG5C;UACE,KAAK,EAAE,CAAC;;UAGR;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAE1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1C;;UAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;WACjC;OACF;MAEM,QAAQ,CAAC,OAAmB,EAAE,WAAwB;UAC3D,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;UAErC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UAEvC,IAAI,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;cAChC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;WAC9B;UAED,IAAI,QAAQ,KAAK,IAAI,CAAC,UAAU,EAAE;cAChC,OAAO,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC;WAC/B;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;GACF;AAEgCG,cAAoB,CAAC,UAAU,EAAE,eAAe,EAAE,YAAY,CAAC,MAAM;;EC7FtG;EAyBA;QACa,aAAc,SAAQD,IAAY;MAQ7C;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAElB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;cAExB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAE/B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;cACnB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;cAE1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;cACjE,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;cAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC;cAC1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;cAChD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;cAChDA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cAC9E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC7C;OACF;MAEM,QAAQ,CAAC,GAAW;OAc1B;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;;;OAMtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,aAAa,EAAE,CAAC;OAC5B;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,eAAe,EAAE,aAAa,CAAC,MAAM;;ECxGrG;QAyBa,YAAa,SAAQD,IAAY;MAQ5C;UACE,KAAK,EAAE,CAAC;UARH,gBAAW,GAAG,IAAIF,aAAE,CAAC,IAAI,EAAE,CAAC;UAC5B,aAAQ,GAAG,CAAC,CAAC;UACb,iBAAY,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAClC,iBAAY,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAClC,eAAU,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACnC,eAAU,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAKxC;cACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;cAChC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;WACrC;UAED;cACE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;cAC5C,IAAI,CAAC,QAAQ,GAAG,CAAC,SAAS,CAAC;cAC3B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;cAEpE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WACpC;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;kBAC7B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;kBAC7B,MAAM;WACT;UAED,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;OACrE;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;UACrC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;UAC1C,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;UAC1C,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UACzC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UACzC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;UACtB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;UAChB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,cAAc,EAAE,CAAC;UACvCA,aAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;UAElCI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAC/F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,gBAAgB,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;UACxF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD;cACE,MAAM,KAAK,GAAG,IAAIL,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1C,MAAM,CAAC,GAAG,EAAE,CAAC;cACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAChD,CAAC,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;eAC5F;cACDI,WAAmB,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;cAEnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAChD,CAAC,CAAC,CAAC,CAAC,GAAGJ,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;eAC5F;cACDI,WAAmB,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;WACpE;UAED,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC;UACzB,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC;UAEzB,MAAM,EAAE,GAAG,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACvCI,WAAmB,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;UAE3C,MAAM,EAAE,GAAG,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACvCI,WAAmB,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;OAC5C;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;GACF;AAEgCD,cAAoB,CAAC,UAAU,EAAE,eAAe,EAAE,YAAY,CAAC,MAAM;;EClItG;QAyBa,OAAQ,SAAQD,IAAY;MACvC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,EAAE,GAAG,IAAI,CAAC;UACd;cACE,MAAM,KAAK,GAAG,IAAIF,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACjC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAC9B;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAE1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;kBAC3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;kBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eACxB;WACF;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAEA,aAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;cAE7C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,IAAI,GAAG,GAAG,IAAI,CAAC;UACf;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAE1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAClC,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAC/B;UAED,IAAI,EAAE,GAAG,IAAI,CAAC;UACd;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC;cAEjB,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACjC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;WAC/B;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UACrC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAE7B,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACtB,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;UAC9B,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;UAC3B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;UAE7B,IAAI,EAAE,GAAG,IAAI,CAAC;UACd;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAC7B,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACjC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;WAC/B;UAED,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UACvB,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;UAC/B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;UAE7B,IAAI,EAAE,GAAG,IAAI,CAAC;UACd;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEjC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAE/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACtD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAErB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACtD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAErB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACrD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACtB;UAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACrB,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;UAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;UAE7B,IAAI,EAAE,GAAG,IAAI,CAAC;UACd;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACjC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;WAC/B;UAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACrB,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;UAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;UAE7B,IAAI,EAAE,GAAG,IAAI,CAAC;UACd;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE1B,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACjC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;WAC/B;UAED,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UACtC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;UACf,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;UACf,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC/B,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;UAChC,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC3J,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;UAE1BA,aAAE,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;UACtD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;UAE9B;cACE,MAAM,MAAM,GAAG,GAAG,CAAC;cAEnB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;cAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;kBAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;kBAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;eACjC;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;GACF;AAEgCG,cAAoB,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM;;EC3N3F;EAyBA;QACa,SAAU,SAAQD,IAAY;MACzC;UACE,KAAK,EAAE,CAAC;;UAGR,MAAM,CAAC,GAAG,IAAIF,aAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;UAC5D,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;UAC3B,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;UAC5B,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;UAC5B;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;cACpC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cACtD,EAAE,CAAC,KAAK,GAAG,iBAAiB,CAAC;cAC7B,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cAC5D,EAAE,CAAC,eAAe,GAAG,iBAAiB,CAAC;cACvC,EAAE,CAAC,aAAa,GAAG,iBAAiB,CAAC;cACrC,EAAE,CAAC,cAAc,GAAG,iBAAiB,CAAC;cACtC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;cACrB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,aAAa,GAAG,KAAK,CAAC;cACzB,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,YAAY,GAAG,iBAAiB,CAAC;cACpC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACxC;kBACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,kBAAkB,CAAC;kBACjC,EAAE,CAAC,WAAW,GAAG,iBAAiB,CAAC;kBACnC,EAAE,CAAC,OAAO,GAAG,iBAAiB,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;kBACpB,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;kBACzB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;kBACjC,KAAK,CAAC,QAAQ,GAAG,iBAAiB,CAAC;kBACnC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;kBAC3D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;kBACjB,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eAC7B;cACD;kBACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,kBAAkB,CAAC;kBACjC,EAAE,CAAC,WAAW,GAAG,iBAAiB,CAAC;kBACnC,EAAE,CAAC,OAAO,GAAG,iBAAiB,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;kBACpB,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;kBACzB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;kBACjC,KAAK,CAAC,QAAQ,GAAG,iBAAiB,CAAC;kBACnC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;kBAC3D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;kBAC5D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;kBACjB,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eAC7B;cACD;kBACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,kBAAkB,CAAC;kBACjC,EAAE,CAAC,WAAW,GAAG,iBAAiB,CAAC;kBACnC,EAAE,CAAC,OAAO,GAAG,iBAAiB,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;kBACpB,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;kBACzB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;kBACjC,KAAK,CAAC,QAAQ,GAAG,iBAAiB,CAAC;kBACnC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;kBAC3D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;kBACjB,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eAC7B;cACD;kBACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,kBAAkB,CAAC;kBACjC,EAAE,CAAC,WAAW,GAAG,iBAAiB,CAAC;kBACnC,EAAE,CAAC,OAAO,GAAG,iBAAiB,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;kBACpB,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;kBACzB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;kBACjC,KAAK,CAAC,QAAQ,GAAG,iBAAiB,CAAC;kBACnC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;kBAC5D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;kBAC3D,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAC1D,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;kBACjB,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eAC7B;WACF;UACD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cACtD,EAAE,CAAC,KAAK,GAAG,iBAAiB,CAAC;cAC7B,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cAC5D,EAAE,CAAC,eAAe,GAAG,iBAAiB,CAAC;cACvC,EAAE,CAAC,aAAa,GAAG,iBAAiB,CAAC;cACrC,EAAE,CAAC,cAAc,GAAG,iBAAiB,CAAC;cACtC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;cACrB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,aAAa,GAAG,KAAK,CAAC;cACzB,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,YAAY,GAAG,iBAAiB,CAAC;cACpC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACxC;kBACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,iBAAiB,CAAC;kBAChC,EAAE,CAAC,WAAW,GAAG,iBAAiB,CAAC;kBACnC,EAAE,CAAC,OAAO,GAAG,kBAAkB,CAAC;kBAChC,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;kBACpB,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;kBACzB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;kBAChC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAChD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBACjD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,CAAC,CAAC;kBAClD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,CAAC,CAAC;kBACjD,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;kBACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;kBACjB,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eAC7B;WACF;UACD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;cACvD,EAAE,CAAC,KAAK,GAAG,iBAAiB,CAAC;cAC7B,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cAC5D,EAAE,CAAC,eAAe,GAAG,iBAAiB,CAAC;cACvC,EAAE,CAAC,aAAa,GAAG,iBAAiB,CAAC;cACrC,EAAE,CAAC,cAAc,GAAG,iBAAiB,CAAC;cACtC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;cACrB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,aAAa,GAAG,KAAK,CAAC;cACzB,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,YAAY,GAAG,iBAAiB,CAAC;cACpC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACxC;kBACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,QAAQ,GAAG,iBAAiB,CAAC;kBAChC,EAAE,CAAC,WAAW,GAAG,iBAAiB,CAAC;kBACnC,EAAE,CAAC,OAAO,GAAG,kBAAkB,CAAC;kBAChC,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;kBACpB,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;kBAC3B,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;kBACzB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;kBAChC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,CAAC,CAAC;kBACjD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBAChD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;kBACjD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,CAAC,CAAC;kBAClD,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;kBACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;kBACjB,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eAC7B;WACF;UACD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;cACpC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cACtD,EAAE,CAAC,KAAK,GAAG,iBAAiB,CAAC;cAC7B,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cAC5D,EAAE,CAAC,eAAe,GAAG,iBAAiB,CAAC;cACvC,EAAE,CAAC,aAAa,GAAG,iBAAiB,CAAC;cACrC,EAAE,CAAC,cAAc,GAAG,iBAAiB,CAAC;cACtC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;cACrB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,aAAa,GAAG,KAAK,CAAC;cACzB,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,YAAY,GAAG,iBAAiB,CAAC;cACpC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;WACzC;UACD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;cACrB,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;cACrB,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;cAC5B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cAC1D,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cAC1D,EAAE,CAAC,cAAc,GAAG,iBAAiB,CAAC;cACtC,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;cACvB,EAAE,CAAC,UAAU,GAAG,iBAAiB,CAAC;cAClC,EAAE,CAAC,UAAU,GAAG,iBAAiB,CAAC;cAClC,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;cACvB,EAAE,CAAC,UAAU,GAAG,iBAAiB,CAAC;cAClC,EAAE,CAAC,cAAc,GAAG,iBAAiB,CAAC;cACtC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC1C;UACD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;cACtC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;cACrB,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;cACrB,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;cAC5B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cAC1D,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;cAC5D,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;cACzD,EAAE,CAAC,cAAc,GAAG,iBAAiB,CAAC;cACtC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,EAAE,CAAC,gBAAgB,GAAG,CAAC,kBAAkB,CAAC;cAC1C,EAAE,CAAC,gBAAgB,GAAG,iBAAiB,CAAC;cACxC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,EAAE,CAAC,UAAU,GAAG,iBAAiB,CAAC;cAClC,EAAE,CAAC,aAAa,GAAG,kBAAkB,CAAC;cACtC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC1C;;OAEF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;GACF;AAEgCG,cAAoB,CAAC,MAAM,EAAE,aAAa,EAAE,SAAS,CAAC,MAAM;;EClQ7F;QAyBa,eAAgB,SAAQD,IAAY;MAe/C;UACE,KAAK,EAAE,CAAC;UAbH,kBAAa,GAAG,GAAG,CAAC;UACpB,kBAAa,GAAG,GAAG,CAAC;UAEpB,WAAM,GAAG,IAAIF,aAAE,CAAC,WAAW,EAAyB,CAAC;UACrD,gBAAW,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC5B,mBAAc,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACvC,oBAAe,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;UACzC,eAAU,GAAiC,IAAI,CAAC;UAChD,aAAQ,GAA4BA,aAAE,CAAC,SAAS,CAAC,eAAe,CAAC,YAAY,EAAE,MAAM,IAAI,qBAAqB,EAAE,CAAC,CAAC;UAClH,gBAAW,GAAG,CAAC,CAAC;UAChB,gBAAW,GAAG,KAAK,CAAC;UAKzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;UAC1B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;;UAIzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC/B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;cAC/B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;WAC5D;UAED,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;UAErB,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;UAC7B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;UAChD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;UAE9C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;UAC1C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;;UAG1C,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,GAAG,CAAC;UAEtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;OAC1B;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAI,CAAC,KAAK,EAAE,CAAC;UAEb,IAAI,IAAI,CAAC,WAAW,EAAE;cACpB,MAAM,WAAW,GAAGA,aAAE,CAAC,GAAG,CAAC,CAAC,EAAE,eAAe,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC;cAEjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;kBACpC,IAAI,CAAC,MAAM,EAAE,CAAC;eACf;WACF;UAED,IAAI,CAAC,KAAK,EAAE,CAAC;UACb,IAAI,CAAC,OAAO,EAAE,CAAC;UAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC/B,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,EAAE;kBAC1B,SAAS;eACV;cAED,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cACtC,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,EAAE;kBAC9C,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;eACzB;mBAAM,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;kBACpC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;eACzB;mBAAM,IAAI,KAAK,CAAC,OAAO,EAAE;kBACxB,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;eACzB;cACDI,WAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;WAC7C;UAED,MAAM,CAAC,GAAG,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACtCI,WAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;UAElDA,WAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAEnF,MAAM,EAAE,GAAG,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACvC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACvCI,WAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;UAC/DA,WAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;UAE/D,IAAI,IAAI,CAAC,UAAU,EAAE;cACnB,MAAM,EAAE,GAAG,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;cAEvC,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACrMI,WAAmB,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;WAC3C;UAED;cACE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;cACvCA,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,yBAAyB,MAAM,EAAE,CAAC,CAAC;cACtF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;WACjD;UAED,EAAE,IAAI,CAAC,WAAW,CAAC;OACpB;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;kBACrC,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,YAAY,EAAE,CAAC;kBACpB,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,SAAS,EAAE,CAAC;kBACjB,MAAM;WACT;OACF;MAEM,aAAa,CAAC,IAAa;UAChC,MAAM,CAAC,GAAG,IAAIL,aAAE,CAAC,IAAI,EAAE,CAAC;UACxB,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;;;UAG1D,IAAI,CAAC,UAAU,CAAC,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;UAC5E,IAAI,CAAC,UAAU,CAAC,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;UAClE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;UACtC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OAC5B;MAEM,QAAQ,CAAC,IAAa;UAC3B,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACxB,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAChC,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;;UAGhC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;UAG3B,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC5G,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;UAClD,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;UACtE,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAEtD,IAAI,CAAC,UAAU,CAAC,OAAO,CAACA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;UAC7D,IAAI,CAAC,UAAU,CAAC,OAAO,CAACA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;OAC9D;MAEM,WAAW;UAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,MAAM,CAAC,GAAG,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC;cAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC/B,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,EAAE;kBAC1B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;kBAC/B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;kBAC3D,OAAO;eACR;WACF;OACF;MAEM,YAAY;UACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,MAAM,CAAC,GAAG,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC;cAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC/B,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,EAAE;kBAC1B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;kBACxC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;kBACrB,OAAO;eACR;WACF;OACF;MAEM,SAAS;UACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,MAAM,CAAC,GAAG,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC;cAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC/B,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,EAAE;kBAC1B,SAAS;eACV;cAED,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;cAC5B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;cAC1B,MAAM,YAAY,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,KAAK,CAAC,SAAS,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC7F,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;cAC/D,OAAO;WACR;OACF;MAEM,KAAK;UACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;UACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC;cAChC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;WAClC;OACF;MAEM,MAAM;UACX,MAAM,MAAM,GAAG,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAEzC,QAAQ,MAAM;cACZ,KAAK,CAAC;kBACJ,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;cAER,KAAK,CAAC;kBACJ,IAAI,CAAC,YAAY,EAAE,CAAC;kBACpB,MAAM;cAER;kBACE,IAAI,CAAC,SAAS,EAAE,CAAC;WACpB;OACF;MAEM,KAAK;UACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAA2C;cAC9E,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;cAC/B,KAAK,CAAC,OAAO,GAAGA,aAAE,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;cACjE,OAAO,IAAI,CAAC;WACb,CAAC,CAAC;UAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,EAAE;kBACrC,SAAS;eACV;;cAGDA,aAAE,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;WAE7D;OACF;MAEM,OAAO;UACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;UAEvB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;UAGhC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,KAAsB,EAAE,OAA2C;cAC7F,MAAM,KAAK,GAA0B,OAAO,CAAC,QAAQ,CAAC;cAEtD,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;cACtC,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;cAE9C,IAAI,GAAG,EAAE;kBACP,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;kBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;kBACxB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;kBAC3C,OAAO,MAAM,CAAC,QAAQ,CAAC;eACxB;cAED,OAAO,KAAK,CAAC,WAAW,CAAC;WAC1B,CAAC,CAAC;UAIH,MAAM,WAAW,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;UAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,EAAE;kBACrC,SAAS;eACV;cAED,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;cACtC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;cACzD,IAAI,GAAG,EAAE;kBACM,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;kBAC9B,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;kBACzB,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC;eACrC;WACF;OAKF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,eAAe,EAAE,CAAC;OAC9B;;EA3RsB,4BAAY,GAAG,GAAG,CAAC;QA8R/B,qBAAqB;MAAlC;UACS,SAAI,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACrB,aAAQ,GAAG,GAAG,CAAC;UACf,YAAO,GAAG,KAAK,CAAC;UAChB,YAAO,GAA8C,IAAI,CAAC;OAClE;GAAA;AAEgCG,cAAoB,CAAC,WAAW,EAAE,cAAc,EAAE,eAAe,CAAC,MAAM;;EC/TzG;QAyBa,kBAAmB,SAAQH,aAAE,CAAC,eAAe;MAA1D;;UACS,cAAS,GAAsB,IAAI,CAAC;UACpC,YAAO,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACxB,aAAQ,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;OAOjC;MANQ,aAAa,CAAC,OAAmB,EAAE,KAAc,EAAE,MAAe,EAAE,QAAgB;UACzF,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;UACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC3B,OAAO,QAAQ,CAAC;OACjB;GACF;QAEY,UAAW,SAAQE,IAAY;MAS1C;UACE,KAAK,EAAE,CAAC;UAPH,gBAAW,GAAG,CAAC,CAAC;UAIhB,YAAO,GAAG,GAAG,CAAC;UAKnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;UACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;UAClD,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;UAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIF,aAAE,CAAC,YAAY,EAAE,CAAC;WAC5C;UACD,IAAI,CAAC,QAAQ,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UAErC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;;UAGnB;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC;cACf,IAAI,EAAE,GAAG,GAAG,GAAGA,aAAE,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC,CAAC;cACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;kBAC3B,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;kBACpB,MAAM,EAAE,GAAG,GAAG,GAAGA,aAAE,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC,CAAC;kBAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;kBACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;kBAC5D,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAEjC,EAAE,GAAG,EAAE,CAAC;kBACR,EAAE,GAAG,EAAE,CAAC;eACT;WACF;UAED;cACE,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;cAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;cAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,MAAM,CAAC,GAAG,GAAG,CAAC;cACd,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,GAAGA,aAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;cACnC,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;cAE3B,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;cAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACxC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC1C,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC3C,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEzC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WACvC;UAED;cACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;WAC9B;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;cAC/C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WACzB;OACF;MAEM,UAAU,CAAC,KAAa;UAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UACjD,IAAI,QAAQ,KAAK,IAAI,EAAE;cACrB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;cACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;WACxC;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAE5B,MAAM,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UACtC,MAAM,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACtB,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,WAAW,CAAC,CAACA,aAAE,CAAC,EAAE,EAAEA,aAAE,CAAC,EAAE,CAAC,CAAC;UACzC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAErC,IAAI,KAAK,KAAK,CAAC,EAAE;cACf,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC;WAC1B;UAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAE/E,IAAI,KAAK,GAAG,CAAC,EAAE;cACb,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;cAClC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC5B;eAAM;cACL,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;cACzB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAElB,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC5B;UAED,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC;OACpE;MAEM,WAAW;UAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;cAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC9B,IAAI,IAAI,KAAK,IAAI,EAAE;kBACjB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;kBAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;kBACxB,OAAO;eACR;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;kBACvD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,UAAU,GAAG,CAAC,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,YAAY,CAAC;UAC9D,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+CAA+C,CAAC,CAAC;UACpG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,MAAM,CAAC,GAAG,IAAI,CAAC;UACf,MAAM,MAAM,GAAG,IAAIL,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UACtC,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAGA,aAAE,CAAC,GAAG,CAACA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UACnF,MAAM,MAAM,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAEvD,MAAM,QAAQ,GAAG,IAAI,kBAAkB,EAAE,CAAC;UAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;UAE/C,IAAI,QAAQ,CAAC,SAAS,EAAE;cACtBI,WAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClFI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cACvF,MAAM,IAAI,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,QAAQ,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACjHI,WAAmB,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WACtF;eAAM;cACLI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WAC9E;UAED,IAAI,UAAU,EAAE;cACd,IAAI,CAAC,OAAO,IAAI,IAAI,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;WACtC;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;;EAxLsB,sBAAW,GAAG,GAAG,CAAC;AA2LVG,cAAoB,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM;;ECjOlG;QAyBa,QAAS,SAAQD,IAAY;MAOxC;UACE,KAAK,EAAE,CAAC;UAPM,cAAS,GAAY,IAAIF,aAAE,CAAC,IAAI,EAAE,CAAC;UACnC,cAAS,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC5C,YAAO,GAAmB,IAAI,CAAC;UAC/B,YAAO,GAAmB,IAAI,CAAC;UAC/B,YAAO,GAAY,KAAK,CAAC;UAK9B,MAAM,QAAQ,GACZ;cACE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;cACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;cACtB,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;cACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;cACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;cACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;cACtB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;cACtB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;cACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;cACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;WACzB,CAAC;UAEJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAE9B;cACE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,GAAG,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAEjE,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,MAAM,MAAM,GAAY,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEpD,MAAM,KAAK,GAAiB,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAE/C,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cACnC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAClC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAClC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAClC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAClC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAClC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAClC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;cACnC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;cACnC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cACnC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,EAAE,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAChE,MAAM,GAAG,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;cAEjE,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,MAAM,MAAM,GAAY,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEpD,MAAM,KAAK,GAAiB,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAE/C,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAC1B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;cAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;cAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;UACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;UACpB,IAAI,CAAC,WAAW,EAAE,CAAC;UACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;OACrB;MAEM,WAAW;UAChB,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;WACrB;UAED,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;WACrB;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;cAErC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACvC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACvC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WACxC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;cAErC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACvC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACvC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WACxC;OACF;MAEM,aAAa;UAClB,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;WACrB;UAED,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;WACrB;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;cAErC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACxC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACvC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WACxC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;cAErC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACxC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;cACvC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WACxC;OACF;MAEM,QAAQ;;;;;;;;;;;;;;;OAkBd;MAEM,IAAI,CAAC,QAA0B;;;;;;;;;;;UAapC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,QAAQ,CAAC,GAAW;;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,MAAA,IAAI,CAAC,OAAO,0CAAE,kBAAkB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBAChE,MAAA,IAAI,CAAC,OAAO,0CAAE,kBAAkB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBAChE,MAAM;cAER,KAAK,GAAG;kBACN,MAAA,IAAI,CAAC,OAAO,0CAAE,kBAAkB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBAC/D,MAAA,IAAI,CAAC,OAAO,0CAAE,kBAAkB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBAC/D,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,aAAa,EAAE,CAAC;kBACrB,MAAM;WACP;OACJ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;GACF;AAEgCG,cAAoB,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM;;EC7S9F;QAyBa,QAAS,SAAQD,IAAY;MACxC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC5B,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC;cAEjB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAE1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAEhB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAE1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC;cAEjB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAElB,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cAE7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;kBAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;kBAC1B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eACxB;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM;;EC/H3F;QAyBa,SAAU,SAAQD,IAAY;MAOzC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACrC,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC;cAEvB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEvB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACrC,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC;cAEvB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC7B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;cACrC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;cAC3C,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAElC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC7B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACtC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;cAC3C,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE9B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC7B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACtC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;cAC3C,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAElC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACtC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;cAC3C,MAAM,MAAM,GAAqB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE/D,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACtC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;cAC3C,MAAM,MAAM,GAAqB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE/D,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;cACpB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;cACpB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;cAChD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAC/B;UAED;cACE,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACrC,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC;cAEvB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACrC,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC;cAEvB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEvB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC7B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACtC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;cAC3C,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAElC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACtC,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC;cACnB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;cACrD,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;cACpD,GAAG,CAAC,cAAc,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;cAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE9C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC7B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACtC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;cAC3C,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAElC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACtC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;cAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE9C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC7B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACtC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;cAC3C,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE9B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;cACvC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,GAAG,CAAC,gBAAgB,GAAG,CAAC,GAAG,CAAC;cAC5B,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC;cAC3B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE9C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;cAC3B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;cAC3B,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;cAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cAE9C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;cAC3B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;cAC3B,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC;cACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAC/C;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;UAGrB,IAAI,KAAa,CAAC;UAAC,IAAI,KAAa,CAAC;UAErC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;UACjC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;;UAE9EI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;UAElH,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;UACjC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;;UAEpFD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;UAEjH,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;GACF;AAEgCF,cAAoB,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,MAAM;;ECtLxF;QAyBa,MAAO,SAAQD,IAAY;MACtC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAEvC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;UACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;UAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;UACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACjC;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,MAAM;;EC1DxF;QAyBa,MAAO,SAAQD,IAAY;MAGtC;UACE,KAAK,EAAE,CAAC;UAHH,YAAO,GAAmB,IAAI,CAAC;UAKpC;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAEvC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;UACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;UAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UACnC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACjC;MAEM,WAAW;UAChB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;cACzB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;WACrB;eAAM;cACL,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;WACzC;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;WACT;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,MAAM;;ECnFxF;QAyBa,cAAe,SAAQD,IAAY;MAG9C;UACE,KAAK,EAAE,CAAC;;UAGR,MAAM,OAAO,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;UACjC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAChC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;UAEhD,MAAM,CAAC,GAAG,GAAG,CAAC;UACd,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;UAE9B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAEA,aAAE,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;UAE3D,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC3C,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;UACxB,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;UACtB,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;UAChC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;OACpC;MAEM,OAAO,CAAC,MAAe,EAAE,WAAoB,EAAE,KAAa,EAAE,MAAc,EAAE,CAAS;UAC5F,MAAM,OAAO,GAAG,IAAI,CAAC;UACrB,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;UAG9B,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UAEvE,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACjC,OAAO,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAC1C,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACzB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;UAE9C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;UAC5B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;UAEnC,IAAI,KAAK,KAAK,cAAc,CAAC,OAAO,EAAE;cACpC,OAAO,IAAI,CAAC;WACb;UAED,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;UAC1D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;UAEnC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;UACnC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;UACpC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;UACjE,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;UAEjE,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC3C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;UACtB,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAE9B,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UAC/B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;UACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAEnC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UAC/B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;UACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAEnC,OAAO,IAAI,CAAC;OACb;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,cAAc,EAAE,CAAC;OAC7B;;EAxEsB,sBAAO,GAAG,CAAC,CAAC;AA2EJG,cAAoB,CAAC,QAAQ,EAAE,iBAAiB,EAAE,cAAc,CAAC,MAAM;;ECrGxG;QAyBa,MAAO,SAAQD,IAAY;MAGtC;UACE,KAAK,EAAE,CAAC;;UAGR,MAAM,OAAO,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;UACjC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAChC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;UAEhD,MAAM,CAAC,GAAG,GAAG,CAAC;UACd,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;UAE9B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAEA,aAAE,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;UAE3D,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC3C,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;UACxB,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;UACtB,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;UAChC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;OACpC;MAEM,OAAO,CAAC,MAAe,EAAE,WAAoB,EAAE,KAAa,EAAE,MAAc,EAAE,CAAS;UAC5F,MAAM,OAAO,GAAG,IAAI,CAAC;UACrB,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;UAG9B,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UAEvE,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACjC,OAAO,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAC1C,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACzB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;UAE9C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;UAC5B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;UAEnC,IAAI,KAAK,KAAK,MAAM,CAAC,OAAO,EAAE;cAC5B,OAAO,IAAI,CAAC;WACb;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;UACnC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;UACpC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;UACjE,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;UAEjE,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC3C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;UACtB,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UAE9B,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UAC/B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;UACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAEnC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UAC/B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;UACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAEnC,OAAO,IAAI,CAAC;OACb;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;;EArEsB,cAAO,GAAG,CAAC,CAAC;AAwEJG,cAAoB,CAAC,QAAQ,EAAE,mBAAmB,EAAE,MAAM,CAAC,MAAM;;EClGlG;EAyBA;EACA;EACA;QACa,UAAW,SAAQD,IAAY;MAK1C;UACE,KAAK,EAAE,CAAC;UAJH,WAAM,GAAG,CAAC,CAAC;UACX,SAAI,GAAG,KAAK,CAAC;UAKlB,IAAI,MAAM,GAAG,IAAI,CAAC;UAElB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cAEjB,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEvB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;cACnC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;cAC7B,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;cACtB,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;cACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAC9C;UAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;UAClB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;OACnB;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;kBACvB,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,OAAO,GAAG,GAAG,EAAE;cACvC,IAAI,CAAC,MAAM,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC;WACvC;UAED,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACnC,YAAY,CAAC,CAAC,GAAG,GAAG,GAAGA,aAAE,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;UACjD,YAAY,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAGA,aAAE,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;UAEvD,MAAM,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;UAExC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;UAC3C,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;UAE7CI,WAAmB,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE9E,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;UACtE,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;AAEgCF,cAAoB,CAAC,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM;;EChHhG;EAyBA;EACA;QACa,OAAQ,SAAQD,IAAY;MAMvC;UACE,KAAK,EAAE,CAAC;UAHH,aAAQ,GAAY,KAAK,CAAC;;UAM/B,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;cAChC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cACtB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cACrB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAErB,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cACjC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACpB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAC/B,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAE7B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAErC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;cACrB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;cACrB,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEjD,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAExB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;cACf,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAC9B,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAE/B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;cAC1B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,EAAE,CAAC,cAAc,GAAG,MAAM,CAAC;cAC3B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cAEtB,EAAE,CAAC,UAAU,GAAG,GAAG,CAAC;cACpB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;cACzB,EAAE,CAAC,KAAK,GAAG,WAAW,CAAC;cACvB,EAAE,CAAC,UAAU,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;cACtC,EAAE,CAAC,UAAU,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;cACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,UAAU,GAAG,GAAG,CAAC;cACpB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;cACzB,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;cACxB,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;cACrC,EAAE,CAAC,UAAU,GAAG,IAAI,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;cACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAClD;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;cAEjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE1C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC/B;UAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;OACvB;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;kBACrB,MAAM;WACT;OACF;MAEM,UAAU,CAAC,GAAW;UAC3B,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;kBACtB,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,IAAI,CAAC,QAAQ,EAAE;cACjB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;cACrC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC;WACxC;eAAM;cACL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC;cACtC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;WACvC;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,mCAAmC,CAAC,CAAC;UACxF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;GACF;AAEgCF,cAAoB,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM;;EChK3F;QAyBa,UAAW,SAAQD,IAAY;MAQ1C;UACE,KAAK,EAAE,CAAC;UARH,aAAQ,GAAG,GAAG,CAAC;UACf,UAAK,GAAG,GAAG,CAAC;UACZ,aAAQ,GAAG,GAAG,CAAC;UACf,YAAO,GAAG,gBAAgB,CAAC,SAAS,CAAC;;UAQ1C;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjD,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;cAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC;WACzB;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;cACpB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;cAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;cAEnD,IAAI,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;cAEhD,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,SAAS,CAAC;WAC3C;OACF;MAEM,QAAQ,CAAC,OAAmB,EAAE,WAAwB;UAC3D,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;UAErC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UAEvC,IAAI,QAAQ,KAAK,IAAI,CAAC,UAAU,IAAI,QAAQ,KAAK,IAAI,CAAC,WAAW,EAAE;cACjE,OAAO;WACR;UAED,IAAI,QAAQ,KAAK,IAAI,CAAC,UAAU,IAAI,QAAQ,KAAK,IAAI,CAAC,WAAW,EAAE;cACjE,OAAO;WACR;UAED,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;UAE1D,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAGA,aAAE,CAAC,UAAU,EAAE;cACjE,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;WAC3B;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,iBAAiB,EAAE,CAAC;UACzDI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,8BAA8B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UACxF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;EAED,IAAY,gBAIX;EAJD,WAAY,gBAAgB;MAC1B,iEAAa,CAAA;MACb,6DAAW,CAAA;MACX,6DAAW,CAAA;EACb,CAAC,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;AAEgCF,cAAoB,CAAC,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,MAAM;;ECtHjG;QAyBa,gBAAiB,SAAQD,IAAY;MAQhD;UACE,KAAK,EAAE,CAAC;UARH,eAAU,GAAG,IAAIF,aAAE,CAAC,YAAY,EAAE,CAAC;UACnC,eAAU,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACnC,iBAAY,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAClC,iBAAY,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAClC,gBAAW,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC5B,aAAQ,GAAG,CAAC,CAAC;UAKlB;cACE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACnC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;WAChE;UAED;cACE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;cAC3C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;cAC1B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;WACrE;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,CAAC;kBAC1B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;kBAC7B,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;kBAC7B,MAAM;WACT;UAED,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;OACrE;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,QAAQ,EAAE,CAAC;UACnCA,aAAE,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;UAErG,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;UAC7C,aAAa,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;UAE7HI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,iBAAiB,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;UAC3F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD;cACE,MAAM,KAAK,GAAG,IAAIL,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1C,MAAM,CAAC,GAAG,EAAE,CAAC;cACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAChD,CAAC,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;eAC5F;cACDI,WAAmB,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;cAEnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAChD,CAAC,CAAC,CAAC,CAAC,GAAGJ,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;eAC5F;cACDI,WAAmB,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;WACpE;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;cAC5CA,WAAmB,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WAC1F;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,gBAAgB,EAAE,CAAC;OAC/B;GACF;AAEgCG,cAAoB,CAAC,UAAU,EAAE,mBAAmB,EAAE,gBAAgB,CAAC,MAAM;;ECnH9G;EAyBA;EACA;EAEA;EACA;EACA;QACa,qBAAsB,SAAQH,aAAE,CAAC,aAAa;MAA3D;;UAGS,aAAQ,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UAChC,gBAAW,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UACjC,YAAO,GAAG,CAAC,CAAC;OAuBpB;;;MAnBQ,aAAa,CAAC,OAAmB;UACtC,IAAI,IAAI,CAAC,OAAO,KAAK,qBAAqB,CAAC,UAAU,EAAE;cACrD,OAAO,KAAK,CAAC;WACd;UAED,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;UAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;UAEjC,MAAM,OAAO,GAAGA,aAAE,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;UAEvG,IAAI,OAAO,EAAE;cACX,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;cAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;cACrCI,WAAmB,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;cAClD,EAAE,IAAI,CAAC,OAAO,CAAC;WAChB;UAED,OAAO,IAAI,CAAC;OACb;;EA1BsB,gCAAU,GAAG,CAAC,CAAC;QA6B3B,aAAc,SAAQF,IAAY;MAQ7C;UACE,KAAK,EAAE,CAAC;UANH,gBAAW,GAAG,CAAC,CAAC;UAChB,aAAQ,GAA0BF,aAAE,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,EAAE,MAAM,IAAI,CAAC,CAAC;UACtF,eAAU,GAAGA,aAAE,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC,CAAC;UAC1D,aAAQ,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;;UAMrC;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;cAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;cAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,MAAM,CAAC,GAAG,GAAG,CAAC;cACd,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,GAAGA,aAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;cACnC,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;cAE3B,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;cAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACxC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC1C,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC3C,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEzC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WACvC;UAED;cACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;WAC9B;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;cAClD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WACzB;OACF;MAEM,UAAU,CAAC,KAAa;UAC7B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;cAC5C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,CAAC;cAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;WACxC;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAErC,MAAM,CAAC,GAAGA,aAAE,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACpC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;UACzB,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,WAAW,CAAC,CAACA,aAAE,CAAC,EAAE,EAAEA,aAAE,CAAC,EAAE,CAAC,CAAC;UAEzC,IAAI,KAAK,KAAK,CAAC,EAAE;cACf,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC;WAC1B;UAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAE9D,IAAI,KAAK,GAAG,CAAC,EAAE;cACb,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;cAClC,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACpD;eAAM;cACL,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;cACzB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAElB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACpD;UAED,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC;OACvE;MAEM,WAAW;UAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;cAClD,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;kBAC7B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC;kBAC5C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;kBACxB,OAAO;eACR;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;kBACvD,MAAM;cAER,KAAK,GAAG;kBACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;sBACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;0BAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,SAAS,EAAE,CAAC;0BAC9C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;uBACxC;mBACF;kBACD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,QAAQ,GAAG,IAAI,qBAAqB,EAAE,CAAC;UAC7C,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;UACjC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACpC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;UAEnC,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC3B,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;UAE7D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;UAEvC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1CI,WAAmB,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;UAEzFA,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,uCAAuC,qBAAqB,CAAC,UAAU,oBAAoB,CAAC,CAAC;UAChJ,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,yCAAyC,CAAC,CAAC;UAC9F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,6BAA6B,CAAC,CAAC;UAClF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,aAAa,EAAE,CAAC;OAC5B;;EArKsB,yBAAW,GAAG,GAAG,CAAC;AAwKVF,cAAoB,CAAC,UAAU,EAAE,gBAAgB,EAAE,aAAa,CAAC,MAAM;;ECtOxG;EAyBA;QACa,SAAU,SAAQD,IAAY;MAGzC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAElB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,EAAE,CAAC,KAAK,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;cACvB,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAE/B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;;cAG1C,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAE9D,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;cACtB,GAAG,CAAC,aAAa,GAAG,OAAO,CAAC;cAC5B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cACvB,GAAG,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC;cAC7B,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;cAC5B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAC9C;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC;kBACzD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC;kBACzD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;kBAC1D,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,yCAAyC,CAAC,CAAC;UAC9F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;UAC3DD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,iBAAiB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UACxF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;GACF;AAEgCF,cAAoB,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC,MAAM;;ECrG7F;QAyBa,WAAY,SAAQD,IAAY;MAG3C;UACE,KAAK,EAAE,CAAC;UAER,MAAM,CAAC,GAAG,IAAI,CAAC;UACf,MAAM,CAAC,GAAG,IAAI,CAAC;UACf,MAAM,CAAC,GAAG,GAAG,CAAC;UACd,MAAM,CAAC,GAAG,GAAG,CAAC;UAEd,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACpC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;cAEtB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;cACjC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;cAElC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;cAChC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;WACnC;UAED;cAEE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;cAGrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC1C,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cACzB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC1C,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEhC,MAAM,SAAS,GAAG,IAAIA,aAAE,CAAC,cAAc,EAAE,CAAC;cAC1C,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC1C,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cACzC,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;cACpD,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;cACnD,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;cAExF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;WACrD;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;UACvC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;UACxFI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UACtG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;GACF;AAEgCF,cAAoB,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,MAAM;;EC5F5F;QAyBa,OAAQ,SAAQD,IAAY;MAGvC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,CAAC,GAAG,GAAG,CAAC;cACd,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAErB,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAClC,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAChC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;cACzC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBACxC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBAEV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;sBACxC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;sBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;sBACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;sBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;sBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;sBAE/B,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;mBACnB;kBAED,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;eACnB;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;;OAOtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;EAtDsB,eAAO,GAAG,EAAE,CAAC;AAyDLG,cAAoB,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM;;ECnF3F;EAyBA;EACA;EACA;EAEA;EACA,MAAM,sBAAuB,SAAQH,aAAE,CAAC,eAAe;MAIrD;UACE,KAAK,EAAE,CAAC;UAJH,UAAK,GAAY,KAAK,CAAC;UACd,YAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACjC,aAAQ,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;OAGjD;MACM,aAAa,CAAC,OAAmB,EAAE,KAAc,EAAE,MAAe,EAAE,QAAgB;UACzF,MAAM,IAAI,GAAY,OAAO,CAAC,OAAO,EAAE,CAAC;UACxC,MAAM,QAAQ,GAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;UACzC,IAAI,QAAQ,EAAE;cACZ,MAAM,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC;cACrC,IAAI,KAAK,KAAK,CAAC,EAAE;;;kBAGf,OAAO,CAAC,CAAC,CAAC;eACX;WACF;UAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;UAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;UAK3B,OAAO,QAAQ,CAAC;OACjB;GACF;EAED;EACA;EACA,MAAM,kBAAmB,SAAQA,aAAE,CAAC,eAAe;MAIjD;UACE,KAAK,EAAE,CAAC;UAJH,UAAK,GAAY,KAAK,CAAC;UACd,YAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACjC,aAAQ,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;OAGjD;MACM,aAAa,CAAC,OAAmB,EAAE,KAAc,EAAE,MAAe,EAAE,QAAgB;UACzF,MAAM,IAAI,GAAY,OAAO,CAAC,OAAO,EAAE,CAAC;UACxC,MAAM,QAAQ,GAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;UACzC,IAAI,QAAQ,EAAE;cACZ,MAAM,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC;cACrC,IAAI,KAAK,KAAK,CAAC,EAAE;;;kBAGf,OAAO,CAAC,CAAC,CAAC;eACX;WACF;UAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;UAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;UAI3B,OAAO,CAAC,CAAC;OACV;GACF;EAED;EACA;EACA;EACA,MAAM,uBAAwB,SAAQA,aAAE,CAAC,eAAe;MAKtD;UACE,KAAK,EAAE,CAAC;UAJH,aAAQ,GAAcA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;UAC5E,cAAS,GAAcA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;UAC7E,YAAO,GAAW,CAAC,CAAC;OAG1B;MACM,aAAa,CAAC,OAAmB,EAAE,KAAc,EAAE,MAAe,EAAE,QAAgB;UACzF,MAAM,IAAI,GAAY,OAAO,CAAC,OAAO,EAAE,CAAC;UACxC,MAAM,QAAQ,GAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;UACzC,IAAI,QAAQ,EAAE;cACZ,MAAM,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC;cACrC,IAAI,KAAK,KAAK,CAAC,EAAE;;;kBAGf,OAAO,CAAC,CAAC,CAAC;eACX;WACF;;UAID,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC1C,EAAE,IAAI,CAAC,OAAO,CAAC;UAEf,IAAI,IAAI,CAAC,OAAO,KAAK,uBAAuB,CAAC,UAAU,EAAE;;;cAGvD,OAAO,CAAC,CAAC;WACV;;UAGD,OAAO,CAAC,CAAC;OACV;;EAjCc,kCAAU,GAAW,CAAC,CAAC;EAoCxC,IAAK,WAIJ;EAJD,WAAK,WAAW;MACd,uDAAS,CAAA;MACT,+CAAK,CAAA;MACL,yDAAU,CAAA;EACZ,CAAC,EAJI,WAAW,KAAX,WAAW,QAIf;QAEY,OAAQ,SAAQE,IAAY;MAavC;UACE,KAAK,EAAE,CAAC;UAXF,gBAAW,GAAW,CAAC,CAAC;UACxB,aAAQ,GAA0B,EAAE,CAAC;UACrC,eAAU,GAAsB,EAAE,CAAC;UACnC,aAAQ,GAAmB,IAAIF,aAAE,CAAC,WAAW,EAAE,CAAC;UAChD,WAAM,GAAiB,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAE1C,YAAO,GAAW,CAAC,CAAC;UAEpB,WAAM,GAAgB,WAAW,CAAC,SAAS,CAAC;UAKlD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;WAC5C;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,QAAQ,GAAc,QAAO,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,MAAM,QAAQ,GAAc,QAAO,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,MAAM,CAAC,GAAG,GAAG,CAAC;cACd,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,GAAGA,aAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;cACnC,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;cAE3B,MAAM,QAAQ,GAAc,QAAO,CAAC;cACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACxC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC1C,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;cAC3C,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEzC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;WACrC;UAED;cACE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;WACvC;UAED;cACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;WAC9B;UAED;cACE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;WAChE;UAED,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;UACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;cAC5C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WACzB;UAED,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;UAEjB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC;OACrC;MAEM,UAAU,CAAC,KAAa;UAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UACjD,IAAI,QAAQ,KAAK,IAAI,EAAE;cACrB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;cACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;WACxC;UAED,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAExC,MAAM,CAAC,GAAWA,aAAE,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UAC9C,MAAM,CAAC,GAAWA,aAAE,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAC5C,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACtB,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,WAAW,CAAC,CAACA,aAAE,CAAC,EAAE,EAAEA,aAAE,CAAC,EAAE,CAAC,CAAC;UAEzC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;UACjB,EAAE,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;UAE1B,IAAI,KAAK,KAAK,CAAC,EAAE;cACf,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC;WAC1B;UAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAE/E,IAAI,KAAK,GAAG,CAAC,EAAE;cACb,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;cAClC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC5B;eAAM,IAAI,KAAK,GAAG,CAAC,EAAE;cACpB,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;cACzB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC5B;eAAM;cACL,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC9C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;cACvB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC5B;UAED,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC;OACjE;MAEM,WAAW;UAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE;cAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC9B,IAAI,IAAI,KAAK,IAAI,EAAE;kBACjB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;kBAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;kBACxB,OAAO;eACR;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;kBACvC,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,SAAS,EAAE;sBACzC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC;mBACjC;uBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,KAAK,EAAE;sBAC5C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,UAAU,CAAC;mBACtC;uBAAM,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,UAAU,EAAE;sBACjD,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC;mBACrC;WACJ;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,UAAU,GAAY,CAAC,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,YAAY,CAAC;UAEvE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+CAA+C,CAAC,CAAC;UACpG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChD,QAAQ,IAAI,CAAC,MAAM;cACjB,KAAK,WAAW,CAAC,SAAS;kBACxBD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,6DAA6D,CAAC,CAAC;kBAClH,MAAM;cAER,KAAK,WAAW,CAAC,KAAK;kBACpBA,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,4CAA4C,CAAC,CAAC;kBACjG,MAAM;cAER,KAAK,WAAW,CAAC,UAAU;kBACzBA,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,oDAAoD,CAAC,CAAC;kBACzG,MAAM;WACT;UAED,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,MAAM,CAAC,GAAG,IAAI,CAAC;UACf,MAAM,MAAM,GAAG,IAAIL,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UACtC,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;UAC1E,MAAM,MAAM,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAEvD,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,SAAS,EAAE;cACzC,MAAM,QAAQ,GAAG,IAAI,sBAAsB,EAAE,CAAC;cAC9C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;cAE/C,IAAI,QAAQ,CAAC,KAAK,EAAE;kBAClBI,WAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBAClFI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBACvF,MAAM,IAAI,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,QAAQ,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;kBACjHI,WAAmB,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;eACtF;mBAAM;kBACLI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;eAC9E;WACF;eAAM,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,KAAK,EAAE;cAC5C,MAAM,QAAQ,GAAG,IAAI,kBAAkB,EAAE,CAAC;cAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;cAE/C,IAAI,QAAQ,CAAC,KAAK,EAAE;kBAClBI,WAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBAClFI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBACvF,MAAM,IAAI,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,QAAQ,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;kBACjHI,WAAmB,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;eACtF;mBAAM;kBACLI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;eAC9E;WACF;eAAM,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC,UAAU,EAAE;cACjD,MAAM,QAAQ,GAAG,IAAI,uBAAuB,EAAE,CAAC;cAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;cAC/CI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAE7E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBACzC,MAAM,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;kBAC/B,MAAM,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;kBAChCI,WAAmB,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBACnEI,WAAmB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBACxE,MAAM,IAAI,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAEA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;kBAClFI,WAAmB,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;eACvE;WACF;UAED,IAAI,UAAU,EAAE;cACd,IAAI,CAAC,OAAO,IAAI,IAAI,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;WACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA2CF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;EAxRc,mBAAW,GAAW,GAAG,CAAC;AA2RVG,cAAoB,CAAC,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM;;ECra7F;EAyBA;EACA;QACa,WAAY,SAAQD,IAAY;MAC3C;UACE,KAAK,EAAE,CAAC;UAER,MAAM,SAAS,GAAW,IAAI,CAAC;UAE/B;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,oBAAoB,GAAG,SAAS,CAAC;cACpC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;kBAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBAEvC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,EAAE,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;kBAChC,EAAE,CAAC,oBAAoB,GAAG,SAAS,CAAC;kBACpC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;eACxB;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,aAAa,EAAE,WAAW,CAAC,MAAM;;EC/EjG;QAyBa,QAAS,SAAQD,IAAY;MAIxC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAElB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;;cAGjB,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAErC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cAEtC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAE/B,MAAM,CAAC,GAAG,KAAK,CAAC;cAChB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;cAC3B,IAAI,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;cAEnD,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACvD,GAAG,CAAC,UAAU,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;cAC7B,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC;cAC7B,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;cACxB,GAAG,CAAC,UAAU,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC;cAC/B,GAAG,CAAC,UAAU,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;cAC7B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cACvB,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;cAE5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAC9C;UAED;cACE,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cAC1C,YAAY,CAAC,QAAQ,GAAG,GAAG,CAAC;cAE5B,MAAM,SAAS,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACnC,SAAS,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAC5C,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAElC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;cACvB,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;cAExB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;cACjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAE9B,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAC5C,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEhE,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACpC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACpC,UAAU,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAC7C,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;cACzB,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;cACzD,YAAY,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;cAE/C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACtC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cAC9D,GAAG,CAAC,UAAU,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC;cAC/B,GAAG,CAAC,UAAU,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;cAC7B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;cACvB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAC/B;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC;kBACzD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC;kBACzD,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,6BAA6B,CAAC,CAAC;UAClF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;;;;;;;OASjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;GACF;AAEgCF,cAAoB,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM;;EC/I3F;EAyBA;QACa,IAAK,SAAQD,IAAY;MAWpC;UACE,KAAK,EAAE,CAAC;UAXM,YAAO,GAAY,IAAIF,aAAE,CAAC,IAAI,EAAE,CAAC;UACjC,YAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACjC,cAAS,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/C,cAAS,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UACxD,kBAAa,GAAW,CAAC,CAAC;UAC1B,kBAAa,GAAW,CAAC,CAAC;UACjB,gBAAW,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACrC,gBAAW,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC9C,YAAO,GAAW,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgNtB,aAAQ,GAAW,GAAG,CAAC;UA5M5B,MAAM,CAAC,GAAW,EAAE,CAAC;UACrB,MAAM,CAAC,GAAW,GAAG,CAAC;;UAEtB,MAAM,QAAQ,GAAcA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;UAEjD,MAAM,MAAM,GAAaA,aAAE,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;UAE/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAClC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;WACjB;UACD,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;UAChB,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;UAEhB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;UAChC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,GAAG,CAAC;UACjC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC;UACnC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAGA,aAAE,CAAC,uBAAuB,CAAC;UACzD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;UAEhC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;UACnC,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,GAAG,CAAC;UACpC,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,GAAG,CAAC;UACtC,IAAI,CAAC,SAAS,CAAC,eAAe,GAAGA,aAAE,CAAC,kBAAkB,CAAC;UAEvD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;UAChC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,GAAG,CAAC;UACjC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC;UACnC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAGA,aAAE,CAAC,qBAAqB,CAAC;UACvD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;UAEhC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;UACnC,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,GAAG,CAAC;UACpC,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,GAAG,CAAC;UACtC,IAAI,CAAC,SAAS,CAAC,eAAe,GAAGA,aAAE,CAAC,kBAAkB,CAAC;UAEvD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UACjC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAEhC,MAAM,GAAG,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;;UAEzC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAc,KAAK,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;UAC/D,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;UACd,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;;UAE5B,MAAM,CAAC,OAAO,CAAC,CAAC,KAAa,KAAK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;UAE1D,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UACpC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;UAEzB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UACpC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;UAEzB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;UACvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;UAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;OACrB;MAmJM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC;kBACrB,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;kBACpB,MAAM;WACT;OACF;MAEM,UAAU,CAAC,GAAW;UAC3B,QAAQ,GAAG;cACT,KAAK,GAAG,CAAC;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;kBACpB,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,EAAE,GAAW,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;UAEvE,IAAI,QAAQ,CAAC,OAAO,KAAK,IAAI,IAAI,QAAQ,CAAC,YAAY,KAAK,KAAK,EAAE;cAChE,EAAE,GAAG,GAAG,CAAC;WACV;;;;;;;;;;;UAcD,IAAI,IAAI,CAAC,QAAQ,EAAE;cACjB,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;cACxD,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;WACzD;UAED,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UACvC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;UAC5D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;UAE5D,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAI,CAAC,OAAO,CAAC,IAAI,CAACI,WAAmB,CAAC,CAAC;UACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAACA,WAAmB,CAAC,CAAC;UAEvCA,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+CAA+C,CAAC,CAAC;;OAErG;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,IAAI,EAAE,CAAC;OACnB;GACF;AAEgCD,cAAoB,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE;EAEtvoBA;EAyBA;QACa,OAAQ,SAAQD,IAAY;MAOvC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;UAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;UAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cACxC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;WACnC;UAED,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAE3C;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;;;;;;;;UAUD;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;cACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1C;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;;kBAExC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;kBACvC,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;kBAEjC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;kBAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAE/C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAC5C;WACF;OACF;MAEM,YAAY,CAAC,OAAmB;UACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UAEvC,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;cAC9B,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;cAClD,IAAI,QAAQ,EAAE;kBACZ,MAAM,QAAQ,GAAG,QAAQ,CAAC;kBAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;eACpB;WACF;UAED,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;cAC9B,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;cAClD,IAAI,QAAQ,EAAE;kBACZ,MAAM,QAAQ,GAAG,QAAQ,CAAC;kBAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;eACpB;WACF;OACF;MAEM,UAAU,CAAC,OAAmB;UACnC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UAEvC,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;cAC9B,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;cAClD,IAAI,QAAQ,EAAE;kBACZ,MAAM,QAAQ,GAAG,QAAQ,CAAC;kBAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;eACrB;WACF;UAED,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;cAC9B,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;cAClD,IAAI,QAAQ,EAAE;kBACZ,MAAM,QAAQ,GAAG,QAAQ,CAAC;kBAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;eACrB;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;UAIrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cACxC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;kBAC1B,SAAS;eACV;cAED,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;cAEvC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAoB,CAAC;cAC1D,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAE/D,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;cAEpC,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzD,IAAI,CAAC,CAAC,aAAa,EAAE,GAAGA,aAAE,CAAC,UAAU,EAAE;kBACrC,SAAS;eACV;cAED,CAAC,CAAC,SAAS,EAAE,CAAC;cACd,MAAM,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACjD,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;WAC9B;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;EAtIsB,eAAO,GAAG,CAAC,CAAC;AAyIJG,cAAoB,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM;;ECpK5F;QAyBa,SAAU,SAAQD,IAAY;MAezC;UACE,KAAK,EAAE,CAAC;UAbM,UAAK,GAAcF,aAAE,CAAC,IAAI,CAAC,SAAS,CAACA,aAAE,CAAC,kBAAkB,CAAC,CAAC;UACrE,aAAQ,GAAG,CAAC,CAAC;UACb,cAAS,GAAG,CAAC,CAAC;UAEL,UAAK,GAAcA,aAAE,CAAC,IAAI,CAAC,SAAS,CAACA,aAAE,CAAC,kBAAkB,CAAC,CAAC;UACrE,aAAQ,GAAG,CAAC,CAAC;UACb,cAAS,GAAG,CAAC,CAAC;UAEL,iBAAY,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAClC,iBAAY,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAClC,mBAAc,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;;UAM7C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC5B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;UAClB,IAAI,CAAC,SAAS,GAAGA,aAAE,CAAC,aAAa,CAAC;UAElC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;UAC9B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;UAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC5B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC7B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;UAClB,IAAI,CAAC,SAAS,GAAGA,aAAE,CAAC,aAAa,CAAC;UAElC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UACnC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;UAClC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACnC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;UAClC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAgCnC;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,cAAc,EAAE,CAAC;UACtC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;UAC1E,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;UAC1E,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UACzC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UACzC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;UAE7C,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,eAAe,EAAE,CAAC;UAExC,MAAM,GAAG,GAAGA,aAAE,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;UAExC,MAAM,WAAW,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UACvC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;UAExC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;UAEtF,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;UAC7C,aAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;UAClF,aAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;UAClF,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UACjD,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UAC3C,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;UAC/B,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAC3C,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;UACvB,MAAM,cAAc,GAAG,IAAIA,aAAE,CAAC,cAAc,EAAE,CAAC;UAE/CA,aAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;UAEzDI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAC/C,SAAS,GAAG,GAAG,MAAM,GAAG,OAAO,aAAa,MAAM,CAAC,UAAU,cAAc,MAAM,CAAC,MAAM,gBAAgB,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAChJ,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhDD,WAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UACrD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;cACvBA,WAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WAC5F;eACI;cACHI,WAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WACzF;UACDI,WAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UAEpDA,WAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UACrD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;cACvBA,WAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WAC5F;eACI;cACHI,WAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WACzF;UACDI,WAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;UAEpDA,WAAmB,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;UAC/C,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;cACvBA,WAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WAC5F;eACI;cACHI,WAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WACzF;UACDI,WAAmB,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;UAE9C,IAAI,GAAG,EAAE;cACP,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC;cACxBA,WAAmB,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;;cAErE,MAAM,EAAE,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC3DI,WAAmB,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WACtE;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;;EA9Ia,uBAAa,GAAG,CAAC,CAAC;AAiJDG,cAAoB,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,MAAM;;EC3KjG;QAyBa,YAAa,SAAQD,IAAY;MAM5C;UACE,KAAK,EAAE,CAAC;UAJH,eAAU,GAAsB,IAAI,CAAC;UACrC,aAAQ,GAAG,KAAK,CAAC;UAKtB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAE1C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UACrD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OAC1D;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;sBAC5B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;sBACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;sBACrB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;sBACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;sBACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;mBAC5B;kBACD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;sBAC5B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;sBAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;sBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;mBAC5B;kBACD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;sBAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;sBAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;mBAC1C;kBACD,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,iDAAiD,CAAC,CAAC;UACtG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAC9F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;GACF;AAEgCF,cAAoB,CAAC,UAAU,EAAE,eAAe,EAAE,YAAY,CAAC,MAAM;;EC/FtG;;;QAOa,KAAM,SAAQD,IAAY;MAKrC;UACE,KAAK,EAAE,CAAC;UAER,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;UAEzC,MAAM,aAAa,GAAG,GAAG,CAAC;;;;;;;;UAS1B,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC;UAC5B,MAAM,aAAa,GAAG,IAAI,CAAC;;;;UAK3B,MAAM,WAAW,GAAG,GAAG,CAAC;UAExB,MAAM,eAAe,GAAG,GAAG,CAAC;;UAG5B,MAAM,aAAa,GAAG,CAAC,aAAa,GAAGF,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;UACrD,MAAM,aAAa,GAAG,aAAa,GAAG,aAAa,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC;;UAGpE,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;;UAGtC,MAAM,EAAE,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;UACrD,MAAM,EAAE,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1C,MAAM,EAAE,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;UAC/G,MAAM,EAAE,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;UAC5H,MAAM,EAAE,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;UAElD,MAAM,QAAQ,GAAc,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;UAEnD,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAClC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;UAC3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;UACjB,EAAE,CAAC,QAAQ,GAAG,eAAe,CAAC;UAE9B,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;UAEzB;;cAEE,MAAM,UAAU,GAAG,GAAG,CAAC;cACvB,MAAM,SAAS,GAAG,GAAG,CAAC;;;;cAKtB,MAAM,YAAY,GAAG,GAAG,CAAC;cAEzB,MAAM,WAAW,GAAG,GAAG,CAAC;cACxB,MAAM,cAAc,GAAG,IAAI,CAAC;cAE5B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAErC,MAAM,SAAS,GAAG,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC;cAChD,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;cAEvD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE1C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAClC,MAAM,KAAK,GAAc,EAAE,CAAC;cAC5B,KAAK,CAAC,IAAI,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,YAAY,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;cACxE,KAAK,CAAC,IAAI,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;cACxE,KAAK,CAAC,IAAI,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;cACvE,KAAK,CAAC,IAAI,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,YAAY,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;cACvE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;cAEf,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cAEjB,EAAE,CAAC,QAAQ,GAAG,WAAW,CAAC;cAC1B,EAAE,CAAC,WAAW,GAAG,cAAc,CAAC;cAEhC,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;cACf,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAExB,KAAK,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAE/C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;WACtB;UAEDM,QAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;UAChEA,QAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;UAChEA,QAAgB,CAAC,MAAM,GAAG,GAAG,CAAC;UAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;OAC5B;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACX,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;kBAC3C,IAAI,IAAI,CAAC,cAAc,EAAE;sBACvBA,QAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;mBACjE;kBACD,MAAM;WACP;OACF;MAEM,IAAI,CAAC,QAA0B;UACpCF,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,iCAAiC,CAAC,CAAC;UACtF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;cACxBC,QAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;WAC5D;UACD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,KAAK,EAAE,CAAC;OACpB;GACF;AAEgCH,cAAoB,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,MAAM;;ECxInF;QAyBa,YAAa,SAAQD,IAAY;MAC5C;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;WACtC;UAED;cACE,IAAI,QAAQ,GAAG,MAAM,CAAC;;cAGtB;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;kBAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAE/B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;kBACtC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;kBACzD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;kBAE9B,QAAQ,GAAG,IAAI,CAAC;eACjB;;cAGD;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;kBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAE/B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;kBACtC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;kBACxD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;kBAE9B,QAAQ,GAAG,IAAI,CAAC;eACjB;;cAGD;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;kBACxB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;kBAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAE/B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;kBACtC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;kBACxD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;kBAE9B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;kBACvC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBAC7E,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;eAC/B;WACF;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;GACF;AAEgCG,cAAoB,CAAC,UAAU,EAAE,gBAAgB,EAAE,YAAY,CAAC,MAAM;;ECvGvG;EAyBA;QAEa,YAAa,SAAQD,IAAY;MAM5C;UACE,KAAK,EAAE,CAAC;UAER,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,IAAI,QAAQ,GAAG,MAAM,CAAC;;cAGtB;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAE/B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;kBACtC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBACtD,GAAG,CAAC,UAAU,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;kBAC7B,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC;kBAC7B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;kBACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;kBAE9C,QAAQ,GAAG,IAAI,CAAC;eACjB;;cAGD;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;kBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAE/B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;kBACtC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBACtD,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;kBACxB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;kBAE9B,QAAQ,GAAG,IAAI,CAAC;eACjB;;cAGD;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;kBACxB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;kBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAE/B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;kBACtC,GAAG,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;kBACvD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;kBAE9B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;kBACvC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;kBAE5E,GAAG,CAAC,aAAa,GAAG,MAAM,CAAC;kBAC3B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;kBAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;eAC/C;;cAGD;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;kBAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;kBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAChC;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;kBAC3D,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;kBACxC,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;kBAC3D,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;kBACxC,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,6CAA6C,CAAC,CAAC;UAClG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChD,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;UAC9DD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;;EA7HsB,oBAAO,GAAG,EAAE,CAAC;AAgILF,cAAoB,CAAC,UAAU,EAAE,gBAAgB,EAAE,YAAY,CAAC,MAAM;;EC5JvG;QA4Ba,UAAW,SAAQD,IAAY;MAQ1C;UACE,KAAK,EAAE,CAAC;UARH,aAAQ,GAAG,IAAIF,aAAE,CAAC,IAAI,EAAE,CAAC;UAIzB,cAAS,GAAG,KAAK,CAAC;UAClB,iBAAY,GAAG,CAAC,CAAC;UAKtB,IAAI,CAAC,SAAS,EAAE,CAAC;OAClB;MAEM,SAAS,CAAC,CAAS,EAAE,WAAoB;UAC9C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;UACtC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;UACtC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;UACtC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UACrC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UACrC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UAErC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAChC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAChC,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;UAC3B,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;UAC3B,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC;UAClB,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC;UAElB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAEpC,IAAI,CAAC,GAAG,GAAG,EAAE;cACX,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;cAE7B,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cACjB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cACjB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cACjB,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;cAEpB,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC;cAC3B,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACnD,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACnD,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;WACrB;eAAM;cACL,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;cAE7B,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cACjB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cACjB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;cACjB,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;cAEpB,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC;cAC3B,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACnD,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACnD,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;WACrB;UAED,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;UAClB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;UAElB,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC7B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC7B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACtC,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACtC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACjC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAACA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;UAEnE,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC;UAC1B,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC;UAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAE3C,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;UACzB,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;UAEzB;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;;;;cAKrC,MAAM,YAAY,GAAW,GAAG,CAAC;cACjC,MAAM,WAAW,GAAW,IAAI,CAAC;cAEjC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC9HA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAE7B,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC9HA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAE7B,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC9IA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAE7B,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC9IA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC9B;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cAErC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cACtF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC9B;OACF;MAEM,SAAS;UACd,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC5B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;UACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;UACtB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;UAGpC;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACrE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;cAC3B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;cAEtB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;;UAGD;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;cAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC7C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;cAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAChG,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;cAC5B,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;cAClC,EAAE,CAAC,cAAc,GAAG,KAAK,CAAC;cAC1B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;cAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAClD;UAED,MAAM,WAAW,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAEhF,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;UAClC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;UAEjC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,KAAK,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;UAChF,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;UAClC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;UAEjC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;UACjF,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;UAClC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;OAClC;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;kBACpD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;kBACrC,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;kBACnD,MAAM;cAER,KAAK,GAAG;kBACN,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC;kBACnE,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpCI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,wDAAwD,CAAC,CAAC;UAC7G,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;AAEgCF,cAAoB,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM;;ECrQlG;EAyBA;EACA;QACa,KAAM,SAAQD,IAAY;MAMrC;UACE,KAAK,EAAE,CAAC;UAJH,mBAAc,GAAG,CAAC,CAAC;UACnB,iBAAY,GAAG,GAAG,CAAC;UAKxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;UACxB,MAAM,KAAK,GAAG,IAAIF,aAAE,CAAC,KAAK,EAAE,CAAC;UAE7B;cACE,MAAM,CAAC,GAAG,GAAG,CAAC;cACd,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;cACnB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C;kBACE,MAAM,CAAC,GAAG,GAAG,CAAC;kBACd,MAAM,CAAC,GAAG,EAAE,CAAC;kBACb,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;kBAC/B,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;kBACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;sBAC1B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;sBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;0BAC1B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;0BACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;0BACpC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;0BACjC,EAAE,IAAI,CAAC,cAAc,CAAC;0BACtB,QAAQ,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;uBACvB;sBACD,QAAQ,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;mBACvB;eACF;;;;;;;;;;;;;;;;;;;;WAoBF;UAED;cACE,MAAM,CAAC,GAAG,GAAG,CAAC;cACd,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAErB,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAClC,MAAM,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;cACxB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;cACzC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBACtC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBAEV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;sBACtC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;sBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;sBACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;;;;sBAWpB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;sBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;sBAC/B,EAAE,IAAI,CAAC,cAAc,CAAC;sBACtB,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;mBACnB;kBAED,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;eACnB;WACF;UAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;OAC7C;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;UAC5C,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;UAC/C,MAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;UAClD,MAAM,gBAAgB,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;UAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;UAC5EI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,yBAAyB,MAAM,WAAW,aAAa,EAAE,CAAC,CAAC;UAC9G,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErBD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,iBAAiB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;UAC/I,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;;;;;;OAQjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,KAAK,EAAE,CAAC;OACpB;;EAvHsB,aAAO,GAAG,EAAE,CAAC;AA0HLF,cAAoB,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,MAAM;;ECtJxF;QAyBa,YAAa,SAAQD,IAAY;MAI5C;UACE,KAAK,EAAE,CAAC;UAJH,aAAQ,GAAoB,IAAIF,aAAE,CAAC,YAAY,EAAE,CAAC;UAClD,aAAQ,GAAoB,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAKvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;UAClC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OAClC;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC;UAC9B,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;UAC7D,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC;UACjB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;UACzB,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;UACrB,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;UAE7B,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC;UAC9B,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UAC1B,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC;UAChB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;UACzB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;UACf,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;;;UAK7B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,QAAQ,EAAE,CAAC;UAChC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UACxC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UACxC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC1B,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC1B,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;UAEjB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAElCA,aAAE,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;UAE/BI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UACnF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,mBAAmBJ,aAAE,CAAC,WAAW,sBAAsBA,aAAE,CAAC,eAAe,EAAE,CAAC,CAAC;UAChI,IAAI,CAAC,UAAU,IAAIK,oBAA4B,CAAC;UAEhD,MAAM,QAAQ,GAAG,EAAE,CAAC;UAEpB,MAAM,UAAU,GAAG,IAAIL,aAAE,CAAC,SAAS,EAAE,CAAC;UACtC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;UACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cAC9C,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;WAC1F;UACDI,WAAmB,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAE9F,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UACtC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;;UAIrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cAC9C,QAAQ,CAAC,CAAC,CAAC,GAAGA,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;WAC1F;UACDI,WAAmB,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAC9FI,WAAmB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAE3F,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;UAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cAC9C,QAAQ,CAAC,CAAC,CAAC,GAAGJ,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;WAC1F;UACDI,WAAmB,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAC9FI,WAAmB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAE9F,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;UACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;cAC9C,QAAQ,CAAC,CAAC,CAAC,GAAGJ,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;WAC1F;UACDI,WAAmB,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAC9FI,WAAmB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;UAG3F,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE;cACnC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;cACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;kBAC9C,QAAQ,CAAC,CAAC,CAAC,GAAGJ,aAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;eAC1F;cACDI,WAAmB,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAIJ,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAC9FI,WAAmB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;WACxF;;OAEF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;GACF;AAEgCD,cAAoB,CAAC,WAAW,EAAE,gBAAgB,EAAE,YAAY,CAAC,MAAM;;EC5HxG;QAyBa,OAAQ,SAAQD,IAAY;MAMvC;UACE,KAAK,EAAE,CAAC;UAHH,YAAO,GAAG,CAAC,CAAC;UAKjB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC,CAAC;UAEzD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACxD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;cACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;cACxD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAE/B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC/B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;cACxB,EAAE,CAAC,UAAU,GAAG,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC;cAC7B,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;cACxB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC7C;UAED,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;OAClB;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE;cAClC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;cAC7B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAE/B,EAAE,IAAI,CAAC,OAAO,CAAC;WAChB;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;EA7DsB,eAAO,GAAG,GAAG,CAAC;AAgENG,cAAoB,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM;;EC1F5F;EAyBA;QACa,GAAI,SAAQD,IAAY;MAGnC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;UAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;UAE7B,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAEzB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cAErC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC7D,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC7D,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC7D,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC7D,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAEhC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;cAEd,MAAM,WAAW,GAAW,GAAG,CAAC;cAChC,MAAM,YAAY,GAAW,GAAG,CAAC;cAEjC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAChC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAChC,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC/B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC/B,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAChC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACjC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC/B,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC/B,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC/B,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC/B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;cAEhD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjBA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;cACtE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC/B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC5D,CAAC,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACzC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;cACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WACjD;OACF;MAEM,cAAc,CAAC,KAAe;UACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;kBAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;kBACxB,MAAM;eACP;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;sBAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;sBAC9B,IAAI,IAAI,EAAE;0BACR,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;0BAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;0BACxB,MAAM;uBACP;mBACF;kBACD,MAAM;cAER,KAAK,GAAG;kBACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;sBAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;sBAC/B,IAAI,KAAK,EAAE;0BACT,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;0BACjC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;0BACxB,MAAM;uBACP;mBACF;kBACD,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,oDAAoD,CAAC,CAAC;UACzG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,GAAG,EAAE,CAAC;OAClB;GACF;AAEgCF,cAAoB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,MAAM;;EClNnF;EAyBA;QACa,UAAW,SAAQD,IAAY;MAK1C;UACE,KAAK,EAAE,CAAC;UALH,kBAAa,GAAG,KAAK,CAAC;UACtB,kBAAa,GAAG,KAAK,CAAC;UACtB,iBAAY,GAAG,GAAG,CAAC;UAKxB,IAAI,MAAM,GAAmB,IAAI,CAAC;UAClC;cACE,MAAM,EAAE,GAAe,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAiB,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cAC/C,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;UAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;UAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;UAEzB;cACE,MAAM,KAAK,GAAmB,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnD,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cAErB,MAAM,EAAE,GAAe,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACxC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,WAAW,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,MAAM,IAAI,GAAY,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAClD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAE/B,MAAM,EAAE,GAAqB,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;;cAGpD,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,QAAQ,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAEhE,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;cAClC,EAAE,CAAC,cAAc,GAAG,OAAO,CAAC;cAC5B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;cACpC,EAAE,CAAC,gBAAgB,GAAG,CAAC,GAAG,CAAC;cAC3B,EAAE,CAAC,gBAAgB,GAAG,GAAG,CAAC;cAC1B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;cAEpC,MAAM,KAAK,GAAW,GAAG,CAAC;cAC1B,MAAM,YAAY,GAAW,GAAG,CAAC;cACjCA,aAAE,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;cAE1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC7C;OACF;MAKM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,MAAM,GAAW,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;UAErEI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAC1F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAEhD,MAAM,CAAC,GAAY,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;;UAExFD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;UAC9G,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;;EAjBc,mBAAQ,GAAY,IAAIL,aAAE,CAAC,IAAI,EAAE,CAAC;AAoBlBG,cAAoB,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC,MAAM;;ECrG1F;EAyBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;QACa,YAAa,SAAQD,IAAY;MAI5C;UACE,KAAK,EAAE,CAAC;UAJH,uBAAkB,GAAG,IAAIF,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC/C,oBAAe,GAA4B,IAAI,CAAC;UAKrD,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAErC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;cAE3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC;cAChC,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC;cAEtC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;cAE5B,MAAM,CAAC,GAAG,EAAE,CAAC;cACb,MAAM,CAAC,GAAG,IAAI,CAAC;cACf,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;cAEjD,IAAI,QAAQ,GAAG,MAAM,CAAC;cACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;kBAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;kBAClC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;sBACf,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;sBAC5B,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;mBACzB;kBAED,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;sBACf,MAAM,WAAW,GAAmB,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;sBACzD,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC;sBAC3B,MAAM,GAAG,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;sBAC/C,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC;sBACxB,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;sBACpB,GAAG,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC;sBACjC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;mBACzB;uBACI;sBACH,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;mBACxB;kBAED,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;kBACjC,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;kBACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;kBAE7B,QAAQ,GAAG,IAAI,CAAC;eACjB;cAED,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;cAE/C,MAAM,WAAW,GAAG,IAAI,CAAC;cACzB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,GAAG,CAAC;cACxC,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC;cAC1D,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,QAAQ,CAAC;WAC1C;UAED;cACE,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,MAAM,CAAC;cACvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;WAC1E;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,eAAe,EAAE;sBACxB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;sBAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;mBAC7B;uBAAM;sBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;mBAC1E;kBACD,MAAM;WACT;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,yCAAyC,CAAC,CAAC;UAC9F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChD,IAAI,IAAI,CAAC,eAAe,EAAE;cACxBD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;WACzE;eAAM;cACLA,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;WAC1E;UACD,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;GACF;AAEgCF,cAAoB,CAAC,UAAU,EAAE,eAAe,EAAE,YAAY,CAAC,MAAM;;EChJtG;;;;;;;;;;;;;;;;;QAqBa,QAAS,SAAQD,IAAY;MACxC;UACE,KAAK,EAAE,CAAC;UAER,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC,CAAC;UAEzD;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACrE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED;cACE,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAElC,MAAM,EAAE,GAAG,GAAG,CAAC;cACf,MAAM,EAAE,GAAG,IAAI,CAAC;cAChB,MAAM,EAAE,GAAG,GAAG,CAAC;cACf,MAAM,EAAE,GAAG,GAAG,CAAC;cACf,MAAM,OAAO,GAAG,EAAE,CAAC;cACnB,MAAM,UAAU,GAAG,GAAG,CAAC;cACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;kBAChC,MAAM,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC;kBAC5C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;;kBAE5B,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;kBAExB,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;kBACpC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;kBACpC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;kBACtB,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;kBACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;kBAC1C,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;kBACjB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;eACnB;cAED,MAAM,WAAW,GAAW,IAAI,CAAC;cACjC,MAAM,YAAY,GAAW,GAAG,CAAC;cACjCA,aAAE,CAAC,eAAe,CAAC,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;cACzE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;WAC/B;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM;;QC/E/E,WAAY,SAAQD,IAAY;MAC3C;UACE,KAAK,EAAE,CAAC;UAER,MAAM,YAAY,GAAG,EAAE,CAAC;UACxB,MAAM,eAAe,GAAG,GAAG,CAAC;UAC5B,MAAM,aAAa,GAAG,GAAG,CAAC;UAC1B,MAAM,UAAU,GAAG,EAAE,CAAC;;;;;UAMtB,IAAI,aAAqB,CAAC;UAE1B,SAAS,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,UAAmB;cAC3D,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,YAAY,EAAE,CAAC;cACjC,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,YAAY,EAAE,GAAG,GAAG,aAAa,CAAC,CAAC;cACrD,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;cACd,EAAE,CAAC,OAAO,GAAG,aAAa,CAAC;cAC3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,GAAG,eAAe,CAAC;cAC9B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACtB,EAAE,CAAC,KAAK,GAAG,UAAU,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;cAC5C,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACpC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC1B;UAED,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;UAEpC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;UAC3B,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;UAG1B;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACjC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cAEpB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;cACxB,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAClC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;WAC3B;UAED;cACE,aAAa,GAAG,EAAE,CAAC;;cAEnB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACjC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cACpB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;cACd,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;cACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAC5B,IAAI,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC7B,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cACpB,CAAC,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;cAC/C,CAAC,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;cAE1B,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;cAClB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cAC7B,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzB,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cACpB,CAAC,CAAC,iBAAiB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;cAC9C,CAAC,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC;WAC5B;UAED;cAEE,IAAI,KAAK,CAAC;;cAEV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;kBACnC,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,aAAa,IAAI,GAAG,GAAG,aAAa,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC;kBACzE,UAAU,CAAC,KAAK,EAAE,aAAa,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;kBAC9C,UAAU,CAAC,KAAK,EAAE,aAAa,GAAG,YAAY,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;eAC7D;cACD,KAAK,GAAG,UAAU,GAAG,GAAG,GAAG,aAAa,IAAI,GAAG,GAAG,aAAa,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC;;cAGlF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;kBACnC,IAAI,CAAC,GAAG,CAAC,EAAE;sBAAE,aAAa,IAAI,EAAE,CAAC;mBAAE;;kBAGnC,MAAM,KAAK,GAAG,aAAa,GAAG,GAAG,GAAG,CAAC,aAAa,GAAG,CAAC,GAAG,YAAY,IAAI,GAAG,GAAG,CAAC,CAAC;kBAEjF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;sBACvC,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,aAAa,IAAI,GAAG,GAAG,aAAa,IAAI,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;sBAC/E,aAAa,IAAI,GAAG,CAAC;sBACrB,IAAI,CAAC,KAAK,CAAC,EAAE;0BACX,UAAU,CAAC,KAAK,IAAI,IAAI,GAAG,aAAa,CAAC,GAAG,EAAE,GAAG,YAAY,EAAE,KAAK,GAAG,YAAY,EAAE,KAAK,CAAC,CAAC;uBAC7F;sBACD,IAAI,CAAC,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,EAAE;0BAC5B,UAAU,CAAC,KAAK,IAAI,IAAI,GAAG,aAAa,CAAC,GAAG,EAAE,GAAG,YAAY,EAAE,KAAK,GAAG,YAAY,EAAE,KAAK,CAAC,CAAC;uBAC7F;sBAED,aAAa,IAAI,GAAG,CAAC;sBACrB,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;sBAChC,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,YAAY,GAAG,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;sBACrE,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,YAAY,GAAG,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;mBACtE;eACF;WACF;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,cAAc,EAAE,WAAW,CAAC,MAAM;;QCpHrF,aAAc,SAAQD,IAAY;MAC7C;UACE,KAAK,EAAE,CAAC;UAER,MAAM,KAAK,GAAG,CAAC,CAAC;UAChB,MAAM,MAAM,GAAG,EAAE,CAAC;UAElB,MAAM,UAAU,GAAG,CAAC,KAAe,EAAE,GAAY,EAAE,OAAgB;cACjE,MAAM,IAAI,GAAG,CAAC,CAAC;cAEf,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;cACtB,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAElC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,IAAI,OAAO,EAAE;kBACX,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;eAC3C;mBAAM;kBACL,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC;eAC3C;cAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,OAAO,GAAG,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC;cACrC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB,CAAC;UAEF,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;;;;;;UAO3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAClC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;UACnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;UAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;UACrB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;UAGvB,MAAM,CAAC,GAAG,EAAE,CAAC;UACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;kBAChC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,EAAE,CAAC,CAAC,GAAG,GAAG,KAAK,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;kBACnH,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;kBACjC,UAAU,CAAC,KAAK,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;kBAEpG,IAAI,CAAC,KAAK,CAAC,EAAE;sBACX,UAAU,CAAC,KAAK,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;mBACrH;kBAED,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;sBACnB,UAAU,CAAC,KAAK,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;mBACrH;uBAAM;sBACL,UAAU,CAAC,KAAK,EAAEA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,IAAI,MAAM,GAAG,KAAK,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;mBACrH;eACF;WACF;OACF;MAEM,kBAAkB;UACvB,OAAO,IAAI,CAAC;OACb;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,aAAa,EAAE,CAAC;OAC5B;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,gBAAgB,EAAE,aAAa,CAAC,MAAM;;EChFtG;;;;;;;;;;;;;;;;;QAqBa,OAAQ,SAAQD,IAAY;MACvC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,QAAQ,GAAG,EAAE,CAAC;cACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACtC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;UAExC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;;UAE/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;UACjB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;;UAGrB;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;cACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,SAAS,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACxC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC9B,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEvB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACtC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;cAC3D,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;cACnB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEvB,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACvC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;cAC5D,EAAE,CAAC,KAAK,GAAG,QAAQ,CAAC;cACpB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;;UAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;cAC3D,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;cACd,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;cACrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;cACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC;cAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WACxB;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM;;EChG1F;;;;;;;;;;;;;;;;;QAqBa,WAAY,SAAQD,IAAY;MAC3C;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,QAAQ,GAAG,EAAE,CAAC;cACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACtC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;;UAGrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;cAC1B,MAAM,MAAM,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;cACtD,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;;;cAI1C,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;cAGrC,EAAE,CAAC,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;cACpC,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;cACrB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;cAChC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;;cAGvB,IAAI,CAAC,kBAAkB,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,GAAG,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,GAAG,KAAK,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;;;cAI5H,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;cACrB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,EAAE,CAAC;cACxC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAEzB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,EAAE,CAAC;cACxC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAEzB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,EAAE,CAAC;cACxC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAGzB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;;cAErB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC1B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC;cAChD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAE5B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC1B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC;cAChD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAG5B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;;cAErB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC;cAChD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAE5B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC;cAChD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAG5B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;;cAErB,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC1B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC;cAChD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAE5B,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cAC1B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC;cAChD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAG5B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;cAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;;cAErB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;cACjD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAE5B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;cACjD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC9C,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;cAG5B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;;cAGtB,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;cAClC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cACjE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;;cAI7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cAC9E,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;cAE7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;cACpC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;cAClC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cAC9E,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;;cAI7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;cACpC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;cAClC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cACjF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;cAE7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cACjF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;cAG7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;cAClC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cACnE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;cAE7B,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cACnE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;;cAI7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;cAClC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cAC9E,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;cAE7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;cAClC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;cAC9E,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;;cAI7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;cACnC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC,CAAC;cAClF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;cAE7B,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;cACpC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;cAClC,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC,CAAC;cAClF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC9B;;UAGD,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;UACpC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;UACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;UAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;;UAGrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE;cAC5B,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;cAC/B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;cACpD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC/C;;UAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE;cAC5B,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;cAC/B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;cACpD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACzB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;OAC/C;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,MAAM;;ECzP7F;;;;;;;;;;;;;;;;;QAqBa,SAAU,SAAQD,IAAY;MACzC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,QAAQ,GAAG,EAAE,CAAC;cACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;cACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;cACtC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAC/B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;UAErC,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACtC,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;UACnB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;UACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;UAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;UACrB,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;UAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;cAC3B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;cACrE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC/C;UACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;cAC3B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;cACtE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC/C;UACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;cAC3B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;cACtE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;WAC/C;;UAED,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;UACpC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,MAAM,GAAG,GAAG;cACV,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;cACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;cACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;WACzB,CAAC;UACF,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;UAC7B,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC;UACf,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;UAG9C,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UAC7B,EAAE,CAAC,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;UACnC,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC;UACf,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;UACrB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;UAClB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;OAC/C;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,CAAC,MAAM;;EC9F9F;;;;;;;;;;;;;;;;;;;EAuBA,MAAM,QAAQ,GAAG,qBAAqB,CAAC;EACvC;EAEA,MAAM,QAAQ,GAAG,GAAG,CAAC;EACrB,MAAM,SAAS,GAAG,GAAG,CAAC;EACtB,MAAM,MAAM,GAAG,GAAG,CAAC;EACnB,MAAM,QAAQ,GAAG,GAAG,CAAC;EAErB;;;EAGA,MAAM,YAAY,GAAG,CAAC,CAAC;EACvB,MAAM,eAAe,GAAG,CAAC,CAAC;EAE1B;;;QAGa,eAAe;MAG1B,YAAY,IAAY;UACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;OACpB;MAEM,OAAO;UACZ,OAAO,IAAI,CAAC,MAAM,CAAC;OACpB;GACF;EAED;;;QAGa,UAAW,SAAQ,eAAe;MAC7C;UACE,KAAK,CAAC,YAAY,CAAC,CAAC;OACrB;GACF;EAED;EACA;EACA;QACa,aAAc,SAAQ,eAAe;MAGhD,YAAY,EAAU,EAAE,GAAY;UAClC,KAAK,CAAC,eAAe,CAAC,CAAC;UACvB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;UAC3B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;OACxB;GACF;QAEY,MAAM;MASjB,YAAY,KAAe;UARpB,kBAAa,GAAoB,EAAE,CAAC;UAEpC,sBAAiB,GAAW,CAAC,CAAC;UAC9B,sBAAiB,GAAW,CAAC,CAAC;UAC9B,uBAAkB,GAAW,CAAC,CAAC;UAC/B,oBAAe,GAAW,CAAC,CAAC;UAC5B,wBAAmB,GAAW,CAAC,CAAC;UAGrC,MAAM,OAAO,GAAG,IAAIH,aAAE,CAAC,OAAO,EAAE,CAAC;UACjC,OAAO,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAC1C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;UAExC,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAC3C,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UACjC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;UAC3D,OAAO,CAAC,WAAW,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;UAEtC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;OAC/B;MAEM,kBAAkB,CAAC,eAAuB,EAAE,gBAAwB,EAAE,aAAqB,EAAE,iBAAyB;UAC3H,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC;UACzC,IAAI,CAAC,kBAAkB,GAAG,gBAAgB,CAAC;UAC3C,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;UACrC,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC;OAC9C;MAEM,aAAa,CAAC,EAAiB;UACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;OACvB;MAEM,gBAAgB,CAAC,EAAiB;UACvC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;UAC1D,IAAI,CAAC,cAAc,EAAE,CAAC;OACvB;MAEM,cAAc;UACnB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;cACnC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;WAC5B;eAAM;;cAEL,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE;kBAC5B,IAAI,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,EAAE;sBAChD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,gBAAgB,CAAC;mBAC9C;eACF,CAAC,CAAC;WACJ;OACF;MAEM,kBAAkB;UACvB,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UACxF,OAAO,kBAAkB,CAAC,OAAO,CAACA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;OACvG;MAEM,kBAAkB;UACvB,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC1F,OAAO,oBAAoB,CAAC,OAAO,CAACA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;OAC3G;MAEM,cAAc;;UAEnB,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;UAChF,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE;cAC/C,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;WAC9D;UACD,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;;UAGtG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC;;UAG7H,MAAM,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;UACvD,MAAM,mBAAmB,GAAG,oBAAoB,CAAC,SAAS,EAAE,CAAC;UAC7D,MAAM,kBAAkB,GAAG,CAAC,CAAC,GAAG,mBAAmB,CAAC;UACpD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;OACjI;MAEM,WAAW,CAAC,YAAoB;;UAGrC,IAAI,YAAY,GAAG,CAAC,CAAC;UACrB,QAAQ,YAAY,IAAI,MAAM,GAAG,QAAQ,CAAC;cACxC,KAAK,MAAM;kBACT,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC;kBACtC,MAAM;cACR,KAAK,QAAQ;kBACX,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;kBACvC,MAAM;cACR;kBACE,OAAO;WACV;;UAGD,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC1F,MAAM,YAAY,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,oBAAoB,CAAC,CAAC;;UAGpF,IAAI,KAAK,GAAG,CAAC,CAAC;UACd,IAAI,YAAY,GAAG,YAAY,EAAE;cAC/B,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;WAC9B;eAAM,IAAI,YAAY,GAAG,YAAY,EAAE;cACtC,KAAK,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;WAC/B;eAAM;cACL,OAAO;WACR;UACD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;OACpH;MAEM,UAAU,CAAC,YAAoB;UACpC,IAAI,aAAa,GAAG,CAAC,CAAC;UACtB,QAAQ,YAAY,IAAI,QAAQ,GAAG,SAAS,CAAC;cAC3C,KAAK,QAAQ;kBACX,aAAa,GAAG,EAAE,CAAC;kBACnB,MAAM;cACR,KAAK,SAAS;kBACZ,aAAa,GAAG,CAAC,EAAE,CAAC;kBACpB,MAAM;;WAGT;UACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;OACxC;GACF;QAEY,KAAK;MAMhB,YAAY,KAAe;UACzB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;;UAGlB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UACjC,OAAO,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UAC1C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;UACxC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;UAEjC,MAAM,QAAQ,GAAG,EAAE,CAAC;UACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;UAClC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;UAClC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAClC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACrC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;UACnC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;UACnC,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAC3C,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UAC9B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;;UAG7C,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC3C,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;UAC7B,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;UAC5B,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;UACxB,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;UACxB,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;UAEhC,MAAM,eAAe,GAAG,GAAG,CAAC;UAC5B,MAAM,gBAAgB,GAAG,CAAC,EAAE,CAAC;UAC7B,MAAM,qBAAqB,GAAG,GAAG,CAAC;UAClC,MAAM,sBAAsB,GAAG,GAAG,CAAC;UACnC,MAAM,yBAAyB,GAAG,GAAG,CAAC;UACtC,MAAM,0BAA0B,GAAG,GAAG,CAAC;;UAGvC,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;UAC7B,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,yBAAyB,CAAC,CAAC;UAC7G,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;UAC7B,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;UACpC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;UAGxB,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;UACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,yBAAyB,CAAC,CAAC;UAC7G,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;UAC7B,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;UACnC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;UAGxB,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;UACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,0BAA0B,CAAC,CAAC;UAC/G,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;UAC7B,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;UACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;UAGxB,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;UACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,0BAA0B,CAAC,CAAC;UAC/G,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;UAC7B,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;UAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;UAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACzB;MAEM,MAAM,CAAC,YAAoB;UAChC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI;cACxB,IAAI,CAAC,cAAc,EAAE,CAAC;WACvB,CAAC,CAAC;UACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI;cACxB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;WAChC,CAAC,CAAC;;UAGH,MAAM,SAAS,GAAG,EAAE,GAAG,QAAQ,CAAC;UAChC,MAAM,eAAe,GAAG,GAAG,GAAG,QAAQ,CAAC;UACvC,MAAM,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC;UAC/C,IAAI,YAAY,GAAG,CAAC,CAAC;UACrB,QAAQ,YAAY,IAAI,QAAQ,GAAG,SAAS,CAAC;cAC3C,KAAK,QAAQ;kBACX,YAAY,GAAG,SAAS,CAAC;kBACzB,MAAM;cACR,KAAK,SAAS;kBACZ,YAAY,GAAG,CAAC,SAAS,CAAC;kBAC1B,MAAM;;WAGT;UACD,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;UAC9C,IAAI,WAAW,GAAG,YAAY,GAAG,QAAQ,CAAC;UAC1C,WAAW,GAAGA,aAAE,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;UACvE,MAAM,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC;UACxC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;UAC3C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;OAC5C;GACF;QAiBY,UAAW,SAAQE,IAAY;MAI1C;UACE,KAAK,EAAE,CAAC;;UAIR,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIF,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;UAC/C,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;;UAGhE;cACE,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;cAErD,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAC3C,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cACvC,UAAU,CAAC,KAAK,GAAG,YAAY,CAAC;cAChC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;cAE3B,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,CAAC;cACjE,IAAI,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;cACpE,iBAAiB,CAAC,WAAW,CAAC,IAAI,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;cAE7D,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;cAChE,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;cAChE,iBAAiB,CAAC,WAAW,CAAC,IAAI,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;WAC9D;;;UAKD,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UAErC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;OACzB;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,QAAQ,CAAC;kBAChC,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,SAAS,CAAC;kBACjC,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,MAAM,CAAC;kBAC9B,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,QAAQ,CAAC;kBAChC,MAAM;cACR;kBACE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;WACvB;OACF;MAEM,UAAU,CAAC,GAAW;UAC3B,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,CAAC,QAAQ,CAAC;kBACjC,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC;kBAClC,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC;kBAC/B,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,cAAc,IAAI,CAAC,QAAQ,CAAC;kBACjC,MAAM;cACR;kBACE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;WACzB;OACF;MAEM,OAAO,aAAa,CAAC,OAAmB,EAAE,KAAc;UAC7D,MAAM,CAAC,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UAChC,MAAM,CAAC,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;UAChC,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;UAC7B,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;UAE7B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;cAClB,OAAO;WACR;UAED,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,eAAe,EAAE;cACzE,UAAU,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;WAC5C;eAAM,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,eAAe,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,YAAY,EAAE;cAChF,UAAU,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;WAC5C;OACF;MAEM,YAAY,CAAC,OAAmB;UACrC,UAAU,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;OACzC;MAEM,UAAU,CAAC,OAAmB;UACnC,UAAU,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;OAC1C;MAEM,OAAO,kBAAkB,CAAC,WAAuB,EAAE,iBAA6B,EAAE,KAAc;UACrG,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;UACjD,MAAM,KAAK,GAAG,iBAAiB,CAAC,WAAW,EAAE,CAAC;UAC9C,IAAI,KAAK,EAAE;cACT,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;WAC3B;eAAM;cACL,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;WAC9B;OACF;MAEM,IAAI,CAAC,QAA0B;;;;UAKpC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;UAEvC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;UAGrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,kCAAkC,CAAC,CAAC;UACvF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;;;OAIjD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;AAEgCF,cAAoB,CAAC,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM;;EC3chG;;;;;;;;;;;;;;;;;QAqBa,MAAO,SAAQD,IAAY;MAatC;UACE,KAAK,EAAE,CAAC;UAXH,mBAAc,GAAW,EAAE,CAAC;UAC5B,2BAAsB,GAAW,CAAC,CAAC;UACnC,WAAM,GAAW,CAAC,CAAC;UACV,oBAAe,GAAkB,IAAI,aAAa,EAAE,CAAC;UACrD,uBAAkB,GAAkB,IAAI,aAAa,EAAE,CAAC;UAStE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;UAE1C,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC;UAClC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC;UAC/B,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC;UAEjC,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,GAAG,CAAC;UACpC,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,CAAC,CAAC;UAClC,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,GAAG,CAAC;UAEpC,MAAM,EAAE,GAAe,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;UACxC,MAAM,EAAE,GAAkB,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;;;;;;;UAQ9C,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UAClB,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC;UACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAChD,MAAM,aAAa,GAAoB,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAC7D,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;UAC1D,EAAE,CAAC,KAAK,GAAG,aAAa,CAAC;UACzB,EAAE,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;;UAE9C,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;;;;;;UAQpC,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UAClB,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC7C,MAAM,UAAU,GAAmB,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACxD,UAAU,CAAC,QAAQ,GAAG,GAAG,CAAC;UAC1B,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC;UACtB,EAAE,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;;UAEvC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;UACjB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;;;;;;;;;;UAYjC,MAAM,EAAE,GAAwB,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC1D,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UACjE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC1B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;UACtD,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;UAC5B,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;UACtB,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC;UACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;;;;;;;UAS/C,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;UACpC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UAClB,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC9C,MAAM,WAAW,GAAiB,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UACrD,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC7D,EAAE,CAAC,KAAK,GAAG,WAAW,CAAC;UACvB,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;UACjB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;OACnC;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,EAAE,GAAW,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;UAEvE,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;cAC9C,EAAE,GAAG,GAAG,CAAC;WACV;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAI,CAAC,sBAAsB,IAAI,EAAE,CAAC;UAClC,IAAI,IAAI,CAAC,sBAAsB,IAAI,CAAC,EAAE;cACpC,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;cAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;WAC7D;UAED,IAAI,WAAW,GAAW,CAAC,CAAC;UAChB;cACV,MAAM,KAAK,GAAW,GAAG,CAAC;;cAE1B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;cACpF,IAAI,CAAC,kBAAkB,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;;cAEzE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;cACjC,IAAI,cAAc,GAAW,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;;cAE5D,cAAc,GAAGA,aAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;cAEnD,WAAW,GAAG,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;;cAE3D,WAAW,GAAGA,aAAE,CAAC,KAAK,CAAC,WAAW,EAAEA,aAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEA,aAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;WACxE;;UAED,IAAI,YAAY,GAAW,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;UACxD,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;UAC5C,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,WAAW,GAAG,YAAY,CAAC;;UAE/D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UAC9B,IAAI,WAAW,GAAW,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;;UAEtD,IAAK,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,EAAG;cAClC,WAAW,GAAG,CAAC,CAAC;WACjB;;;UAGD,MAAM,qBAAqB,GAAW,WAAW,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;;UAExE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;OACtD;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;;EAvJa,sBAAe,GAAW,EAAE,CAAC;EA0J7C;;;;EAIA,MAAM,aAAa;MAAnB;UACS,UAAK,GAAW,CAAC,CAAC;UAClB,UAAK,GAAW,CAAC,CAAC;UAClB,UAAK,GAAW,CAAC,CAAC;UAClB,iBAAY,GAAW,CAAC,CAAC;UACzB,kBAAa,GAAW,CAAC,CAAC;UAC1B,aAAQ,GAAW,CAAC,CAAC;UACrB,WAAM,GAAW,CAAC,CAAC;OAQ3B;MANQ,IAAI,CAAC,EAAU;UACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;UACzD,MAAM,UAAU,GAAW,CAAC,CAAC,GAAG,EAAE,KAAK,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;UAC/E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;UACpG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;OACxcAAc,CAAC,KAAa;MACjC,OAAO,KAAK,GAAGA,aAAE,CAAC,QAAQ,CAAE,GAAG,CAAC,EAAE;UAAE,KAAK,IAAIA,aAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;OAAE;MAChE,OAAO,KAAK,GAAGA,aAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;UAAE,KAAK,IAAIA,aAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;OAAE;MAChE,OAAO,KAAK,CAAC;EACjB,CAAC;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM;;ECjTvF;;;;;;;;;;;;;;;;;QAqBa,YAAa,SAAQD,IAAY;MAI5C;UACE,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;UAE5B,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,kBAAkB,EAAE,CAAC;UACvC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;UAEvB,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UACxB,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;UACjB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;UACjB,EAAE,CAAC,UAAU,GAAG,GAAG,CAAC;UACpB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;UAErB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC,CAAC;UAEzD;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACrE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;cACnE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;kBAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;kBAErC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;kBACzE,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;kBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;;kBAEjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;kBAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;kBACrB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACtC,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;kBACnB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;kBACvE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;eAC1B;WACF;UAED;cACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;kBAC1B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;kBAErC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;kBACzE,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;kBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;;kBAEjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;kBAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;kBACrB,EAAE,CAAC,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;kBACzD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;eAC1B;WACF;UAED;cACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;kBAC3B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;kBAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;;kBAErC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;kBACzE,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;kBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;kBAEzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;kBAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;kBACjB,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAC;kBAClB,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC;kBACrB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACtC,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;kBACnB,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE;sBACxB,OAAO,CAAC,GAAG,CAAC;0BACV,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;0BAClE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;0BACnE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;0BAClE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;uBAClE,CAAC,CAAC;mBACJ;uBAAM,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE;sBAC9B,MAAM,KAAK,GAAG,EAAE,CAAC;sBACjB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;sBACvD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;sBAC/E,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;sBAC9E,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;sBAC7E,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;sBAC1C,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;sBAC7E,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;sBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;mBACpB;uBAAM;sBACL,OAAO,CAAC,GAAG,CAAC;0BACV,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;0BAC3C,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;0BACnE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;uBACnE,CAAC,CAAC;mBACJ;kBACD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;kBAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;eAC1B;WACF;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC;cACb,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACtC,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;cACnB,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;WAC1B;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;cAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAC/B,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;cACvC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cACvB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cACvB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cACvB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC1B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEvB,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC;cACjB,MAAM,OAAO,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACtC,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;cACnB,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cACvB,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC3B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;cAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;WAC1B;;;;;;;UAQD,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE;cAC5D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;WAClD;;;;;UAKD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;OAC/C;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,YAAY,EAAE,CAAC;OAC3B;GACF;AAEgCG,cAAoB,CAAC,QAAQ,EAAE,eAAe,EAAE,YAAY,CAAC,MAAM;;ECtNpG;;;;;;;;;;;;;;;;;EAuBA;;;;QAKa,UAAW,SAAQD,IAAY;MAG1C;UACE,KAAK,EAAE,CAAC;UAHH,wBAAmB,GAAG,GAAG,CAAC;UAK/B;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;;;;cAM3C,MAAM,IAAI,GAAG,GAAG,CAAC;cAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE;kBACvC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC;sBAC5B,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;mBACvB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cACD,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE;kBACvC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC;sBAC5B,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;mBACvB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;kBAEjC,MAAM,SAAS,GAAG;sBAChB,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC;sBAC3B,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;mBACvB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;kBACxB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;;UAGD,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;UAE/B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;UAC1C,MAAM,YAAY,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAC9D,IAAI,YAAY,KAAKF,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE;cACrD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;WACvC;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAI,IAAI,CAAC,mBAAmB,IAAI,CAAC,EAAE;cACjC,OAAO;WACR;UAED,EAAE,IAAI,CAAC,mBAAmB,CAAC;UAE3B,MAAM,KAAK,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UACvD,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,WAAW,EAAE,CAAC;UAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAC3B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;UAC3B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UAEjB,IAAI,KAAK,IAAIA,aAAE,CAAC,YAAY,CAAC,iBAAiB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE;cACpF,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;cACvD,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC9C,EAAE,CAAC,KAAK,IAAIA,aAAE,CAAC,YAAY,CAAC,mBAAmB,CAAC;WACjD;UAED,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;OAC1C;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC,MAAM,EAAE;EAEpG;;ECpHA;;;;;;;;;;;;;;;;;QAuBa,UAAW,SAAQD,IAAY;MAC1C;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;;;;;cAO3C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;sBACxB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;sBACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;sBACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;mBACzB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;kBACpB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED,MAAM,MAAM,GAAG,IAAI,EACjB,KAAK,GAAG,MAAM,GAAG,IAAI,EACrB,MAAM,GAAG,IAAI,EACb,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;cAEvB;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;sBACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;sBACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;mBACvB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;kBACpB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,KAAK,EAAE;kBAC5C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;sBACvB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC;mBAC7B,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;kBACpB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,KAAK,EAAE;kBACxC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC;sBAC5B,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;mBACxB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;kBACpB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WAEF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;UACrC,MAAM,YAAY,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAE9D;cACE,MAAM,KAAK,GAAG,IAAIF,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;cACrB,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;cACpB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;cACxB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;OACF;MACM,OAAO,MAAM;UAClB,OAAO,IAAI,UAAU,EAAE,CAAC;OACzB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,aAAa,EAAE,UAAU,CAAC,MAAM,EAAE;EAErG;;EC/GA;;;;;;;;;;;;;;;;;QAuBa,QAAS,SAAQD,IAAY;MACxC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,MAAM,QAAQ,GAAG;kBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;kBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;kBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;kBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;eACnB,CAAC;cACF,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAElC;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAC3C,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAEtC;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;cACrD,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;cACpD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGF,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,EAAE;EAEjG;;ECtEA;;;;;;;;;;;;;;;;;QAuBa,gBAAiB,SAAQD,IAAY;MAoChD;UACE,KAAK,EAAE,CAAC;UAtBH,cAAS,GAAG,IAAI,CAAC;UACjB,oBAAe,GAAG,CAAC,CAAC;UACpB,iBAAY,GAAG,CAAC,CAAC;UACjB,iBAAY,GAAG,CAAC,CAAC;UAqBtB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;mBAClB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;UACtB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;UAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;UACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;UAGtBE,IAAY,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,UAAU,EAAE,gBAAgB,CAAC,eAAe,CAAC,CAAC;UAClGA,IAAY,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;UAExD,IAAI,CAAC,eAAe,GAAGA,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAChE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;OACvB;;;MAIM,0BAA0B;UAC/B,IAAI,IAAI,CAAC,SAAS,EAAE;cAClB,IAAI,IAAI,CAAC,YAAY,MAAMF,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,EAAE;kBACnH,OAAO,gBAAgB,CAAC,UAAU,CAAC,gBAAgB,CAAC;eACrD;cACD,IAAI,IAAI,CAAC,YAAY,KAAKA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,IAAI,IAAI,CAAC,eAAe,KAAKA,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAE;kBACnI,OAAO,gBAAgB,CAAC,UAAU,CAAC,uBAAuB,CAAC;eAC5D;cACD,IAAI,IAAI,CAAC,eAAe,MAAMA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE;kBACtG,OAAO,gBAAgB,CAAC,UAAU,CAAC,yBAAyB,CAAC;eAC9D;cACD,IAAI,IAAI,CAAC,eAAe,MAAMA,aAAE,CAAC,YAAY,CAAC,iBAAiB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE;kBACrG,OAAO,gBAAgB,CAAC,UAAU,CAAC,wBAAwB,CAAC;eAC7D;cACD,IAAI,IAAI,CAAC,eAAe,MAAMA,aAAE,CAAC,YAAY,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE;kBACrG,OAAO,gBAAgB,CAAC,UAAU,CAAC,oBAAoB,CAAC;eACzD;cACD,OAAO,IAAI,CAAC,eAAe,CAAC;WAC7B;UACD,OAAO,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC;OACpD;MAEM,QAAQ,CAAC,GAAW;UACzB,IAAI,CAAC,SAAS,GAAG,GAAG,KAAK,GAAG,CAAC;UAC7B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;UACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;UACtB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC1D,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;kBAC/D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;kBACzD,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;kBAC5G,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;kBACzD,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;kBAC/D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC1D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC1D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,eAAe,CAAC;kBACvD,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;kBAC/D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,eAAe,CAAC;kBAC5F,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC1D,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;kBAC/D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC/F,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;kBAC/D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;kBAC9F,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;kBAC/D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,oBAAoB,CAAC;kBAC9F,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;kBAC9D,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;kBACzD,MAAM;WAGT;UACDE,IAAY,CAAC,yBAAyB,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC;OAC3E;MAEM,SAAS,CAAC,CAAU;UACzB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;UACnB,IAAI,IAAI,CAAC,SAAS,EAAE;cAClB,MAAM,KAAK,GAAG,IAAIF,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;cAClB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;;;cAGrB,MAAM,EAAE,GAAGA,aAAE,CAAC,SAAS,CAAC,QAAQ,CAAC;cAEjC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;cAEzD,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;cAC7F,IAAI,CAAC,SAAS,EAAE;kBACd,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAIE,IAAY,CAAC,qBAAqB,CAAC;eAClF;cACD,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;cAChC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAIA,aAAE,CAAC,YAAY,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;mBACnI,IAAI,CAAC,eAAe,MAAMA,aAAE,CAAC,YAAY,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,EAAE;kBACnG,EAAE,CAAC,KAAK,IAAIA,aAAE,CAAC,YAAY,CAAC,mBAAmB,CAAC;eACjD;cACD,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;cAClC,EAAE,CAAC,KAAK,CAAC,IAAI,CAACE,IAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;cAChE,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;cAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cACjE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;WAC7B;OACF;MAEM,OAAO,CAAC,CAAU;UACvB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;OACzB;MAEM,sBAAsB,CAAC,KAAuB;UACnD,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;UACpC,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW,EAAE;cAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;WACzB;OACF;MAEM,mBAAmB;UACxB,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE;cAC7F,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW;mBAC3B,KAAK,CAAC,aAAa,EAAE,GAAGF,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;mBACnE,KAAK,CAAC,mBAAmB,EAAE,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE;;;kBAGnE,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;eACjD;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,cAAc,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAChE,IAAI,CAAC,SAAS,GAAG,CAAC,cAAc,GAAG,gBAAgB,CAAC,UAAU,CAAC,eAAe,MAAM,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC;UAChI,IAAI,IAAI,CAAC,SAAS,EAAE;cAClB,QAAQ,cAAc;kBACpB,KAAKF,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBACxC,KAAKA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;kBACvC,KAAKA,aAAE,CAAC,YAAY,CAAC,eAAe;sBAClC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;sBACtC,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;sBAC/D,MAAM;kBACR,KAAK,gBAAgB,CAAC,UAAU,CAAC,gBAAgB;;;sBAG/C,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC;sBACxD,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;sBAC5G,MAAM;kBACR,KAAK,gBAAgB,CAAC,UAAU,CAAC,uBAAuB;sBACtD,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;sBAC1D,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;sBAC/D,MAAM;kBACR,KAAK,gBAAgB,CAAC,UAAU,CAAC,yBAAyB;sBACxD,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;sBAC/F,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;sBACtB,MAAM;kBACR,KAAK,gBAAgB,CAAC,UAAU,CAAC,wBAAwB;sBACvD,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;sBAC9F,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;sBACtB,MAAM;kBACR,KAAK,gBAAgB,CAAC,UAAU,CAAC,oBAAoB;sBACnD,IAAI,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,oBAAoB,GAAGA,aAAE,CAAC,YAAY,CAAC,eAAe,CAAC;sBAC9F,IAAI,CAAC,YAAY,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;sBAC/D,MAAM;kBACR;sBACE,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;sBACtC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;sBACtB,MAAM;eACT;WACF;UAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAE;cACnF,IAAI,CAAC,mBAAmB,EAAE,CAAC;WAC5B;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrBI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,2CAA2C,CAAC,CAAC;UAChG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,+CAA+C,CAAC,CAAC;UACpG,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,sCAAsC,CAAC,CAAC;UAC3F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,4DAA4D,CAAC,CAAC;UACjH,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,uCAAuC,CAAC,CAAC;UAC5F,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,gBAAgB,EAAE,CAAC;OAC/B;;EAjTD;;;EAGuB,2BAAU,GAAG;MAClC,gBAAgB,GAAG,CAAC,IAAI,EAAE,CAAC;MAC3B,eAAe,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;MACrC,gBAAgB,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;MACtC,uBAAuB,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;MAC7C,yBAAyB,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;MAC/C,wBAAwB,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;MAC9C,oBAAoB,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;GAC3C,CAAC;EAQqB,8BAAa,GAAG;MACrC,IAAIE,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,OAAO,CAAC;MAC1H,IAAID,sBAA8B,CAAC,gBAAgB,CAAC,UAAU,CAAC,eAAe,EAAEC,iBAAyB,CAAC,gBAAgB,EAAE,MAAM,CAAC;MACnI,IAAID,sBAA8B,CAAC,gBAAgB,CAAC,UAAU,CAAC,gBAAgB,EAAEC,iBAAyB,CAAC,gBAAgB,EAAE,OAAO,CAAC;MACrI,IAAID,sBAA8B,CAAC,gBAAgB,CAAC,UAAU,CAAC,uBAAuB,EAAEC,iBAAyB,CAAC,gBAAgB,EAAE,eAAe,CAAC;MACpJ,IAAID,sBAA8B,CAAC,gBAAgB,CAAC,UAAU,CAAC,yBAAyB,EAAEC,iBAAyB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;MACxJ,IAAID,sBAA8B,CAAC,gBAAgB,CAAC,UAAU,CAAC,wBAAwB,EAAEC,iBAAyB,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;MACtJ,IAAID,sBAA8B,CAAC,gBAAgB,CAAC,UAAU,CAAC,oBAAoB,EAAEC,iBAAyB,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;GACnJ,CAAC;EAEqB,2BAAU,GAAG;MAClC,IAAIC,2BAAmC,CAACD,iBAAyB,CAAC,eAAe,CAAC;MAClF,IAAIC,2BAAmC,CAAC,gBAAgB,CAAC,aAAa,CAAC;GACxE,CAAC;EACqB,gCAAe,GAAG,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC;AAmR7CN,cAAoB,CAAC,WAAW,EAAE,mBAAmB,EAAE,gBAAgB,CAAC,MAAM,EAAE;EAEjH;;EC9UA;;;;;;;;;;;;;;;;;QAuBa,gBAAiB,SAAQD,IAAY;MAChD;UACE,KAAK,EAAE,CAAC;UACR;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;mBAClB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAE3C;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;cAC7C,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;cAC3D,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACzB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACrB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;cAC9C,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;cAC3D,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACzB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;cACvB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;cAC9C,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;cAC3D,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACtB,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC;cAChB,EAAE,CAAC,eAAe,GAAG,GAAG,CAAC;cACzB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACzB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;OACF;MACM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MACM,OAAO,MAAM;UAClB,OAAO,IAAI,gBAAgB,EAAE,CAAC;OAC/B;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,mBAAmB,EAAE,gBAAgB,CAAC,MAAM,EAAE;EAEjH;;EC/HA;QAKa,QAAS,SAAQD,IAAY;MAIxC;UACE,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UACtC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;UACzC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;UAC3C,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAEtC,MAAM,GAAG,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;UAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAE5C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC;UACpC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;UACtB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;UAC/B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UACxD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;UAC/B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;UACjE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;UAC/B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;UAClE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;UAE/B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC3C,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UACrD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;UAEvC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UACrC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;UAClB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;UACxB,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC9B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAC9B,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;UACxB,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;UAClB,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;UACxB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;UACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;UAE5C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC;UAE5C,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACrC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;UAEtD,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;UAClB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;OAC/C;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;UAClC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;UAExD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,QAAQ,EAAE,CAAC;OACvB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,CAAC,MAAM,EAAE;EAEjG;;EC7EA;;;;;;;;;;;;;;;;;QAuBa,0BAA2B,SAAQO,uBAA+B;MAG7E,YAAY,WAAmB,EAAE,WAAmB;UAClD,KAAK,EAAE,CAAC;UAHH,kBAAa,GAAG,GAAG,CAAC;UACpB,kBAAa,GAAG,GAAG,CAAC;UAGzB,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;UACjC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;OAClC;;;;MAIM,eAAe,CAAC,MAAyB,EAAE,aAAqB;UACrE,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;OAC3H;GACF;EAED;;;;;QAKa,MAAO,SAAQR,IAAY;MA4FtC;UACE,KAAK,EAAE,CAAC;;;;UAzFH,0BAAqB,GAAG,GAAG,CAAC;UA2FjC,IAAI,CAAC,SAAS,GAAG,IAAIS,aAAqB,EAAE,CAAC;UAC7C,IAAI,CAAC,oBAAoB,GAAG,IAAI,0BAA0B,CAAC,MAAM,CAAC,qBAAqB,EAAE,MAAM,CAAC,qBAAqB,CAAC,CAAC;;UAGvH,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;UACvC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;UACrE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;UAEhD,IAAI,MAAe,CAAC;UACpB;cACE,MAAM,EAAE,GAAG,IAAIX,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;WACtC;;UAGD;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,MAAM,MAAM,GAAG,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC;cACtE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,oBAAoB,EAClE,MAAM,CAAC,oBAAoB,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAC3D,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,oBAAoB,EAAE,MAAM,EAChD,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC;cACxE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,oBAAoB,EAAE,MAAM,EAChD,IAAIA,aAAE,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC;cACvE,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,GAAG,GAAG,EAAE,MAAM,CAAC,oBAAoB,EACvE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,oBAAoB,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAC7D,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,MAAM,gBAAgB,GACpB,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,GAAG,CAAC;cAC1C,MAAM,YAAY,GAAG,MAAM,CAAC,cAAc,GAAG,gBAAgB,CAAC;;cAE9D,MAAM,MAAM,GAAG,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC;cACnD,MAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,aAAa;kBAC1D,MAAM,CAAC,YAAY,CAAC;;cAEtB,MAAM,MAAM,GAAG,CAAC,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,cAAc;mBAC7D,MAAM,GAAG,GAAG,CAAC,CAAC;cAEjB,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,MAAM,EACrC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;cACpC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,MAAM,EACrC,IAAIA,aAAE,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;cACnC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cACjC,KAAK,CAAC,QAAQ,CAAC,KAAK,GAAG,gBAAgB,EAAE,gBAAgB,EACvD,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM;kBAC9B,gBAAgB,CAAC,EAAE,GAAG,CAAC,CAAC;cAC5B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC;cACrF,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;cACxD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;cACtD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CACpC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,aAAa,EAC9C,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,cAAc,IAAI,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;cAC5E,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;cACvD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAIA,aAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cAClD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;cAClC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAACE,IAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC;WAC3E;;UAGDA,IAAY,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;;UAExDA,IAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC;OAC/E;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,EAAE,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;UAE/D,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;cAC9C,EAAE,GAAG,GAAG,CAAC;WACV;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrB,IAAI,CAAC,qBAAqB,IAAI,EAAE,CAAC;;UAEjC,IAAI,IAAI,CAAC,qBAAqB,IAAIA,IAAY,CAAC,qBAAqB,EAAE;cACpE,IAAI,CAAC,qBAAqB,IAAIA,IAAY,CAAC,qBAAqB,CAAC;WAClE;;UAGD,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAACA,IAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC;;;UAI1E,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,GAAGF,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;;cAE9E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAACE,IAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAGA,IAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;WACrI;eAAM;cACL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAIF,aAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;WACnD;;UAGD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;UAExB,MAAM,MAAM,GAAG;cACb,6BAA6B;cAC7B,gCAAgC;cAChC,6CAA6C;cAC7C,4CAA4C;WAC7C,CAAC;UACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;cACtCI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9D,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;WACjD;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,IAAI,SAAS,GAAG,CAAC,CAAC;UAClB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,SAAS,GAAGL,aAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC;kBAC7C,MAAM;cACR,KAAK,GAAG;kBACN,SAAS,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;kBAC9C,MAAM;cACR,KAAK,GAAG;kBACN,SAAS,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC/C,MAAM;cACR,KAAK,GAAG;kBACN,SAAS,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC/C,MAAM;cACR,KAAK,GAAG;kBACN,SAAS,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;kBACnD,MAAM;cACR,KAAK,GAAG;kBACN,SAAS,GAAGA,aAAE,CAAC,YAAY,CAAC,yBAAyB,CAAC;kBACtD,MAAM;cACR,KAAK,GAAG;;kBAEN;sBACE,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;sBAC5C,QAAQ,IAAI,MAAM,CAAC,sBAAsB,CAAC;sBAC1C,QAAQ,GAAGA,aAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;sBAClD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;mBACtC;kBACD,MAAM;cACR,KAAK,GAAG;;kBAEN;sBACE,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;sBAC5C,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC,sBAAsB,CAAC;sBAChD,QAAQ,GAAGA,aAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;sBAClD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;mBACtC;kBACD,MAAM;cACR;;kBAEE,OAAO;WACV;UACDE,IAAY,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;OACnD;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;;;;MAKM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;;EArQD;;;EAGuB,4BAAqB,GAAG,IAAI,CAAC;EACpD;;;EAGuB,4BAAqB,GAAG,IAAI,CAAC;EACpD;;;EAGuB,wBAAiB,GAAG,GAAG,CAAC;EAC/C;;;EAGuB,uBAAgB,GAAG,GAAG,CAAC;EAC9C;;;EAGuB,2BAAoB,GAAG,IAAI,CAAC;EACnD;;;EAGuB,oBAAa,GAAG,GAAG,CAAC;EAC3C;;;;EAIuB,qBAAc,GAAG,IAAI,CAAC;EAC7C;;;EAGuB,qBAAc,GAAG,GAAG,CAAC;EAC5C;;;;EAIuB,oBAAa,GAAG,GAAG,CAAC;EAC3C;;;;EAIuB,mBAAY,GAAG,GAAG,CAAC;EAC1C;;;EAGuB,yBAAkB,GAAG,IAAI,CAAC;EACjD;;;;EAIuB,6BAAsB,GAAG,IAAI,CAAC;EACrD;;;EAGuB,oBAAa,GAAG,GAAG,CAAC;EAC3C;;;EAGuB,oBAAa,GAAG,KAAK,CAAC;EAE7C;;;EAGuB,oBAAa,GAAqC;MACvE,IAAIK,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,OAAO,CAAC;MACzH,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAEQ,iBAAyB,CAAC,gBAAgB,GAAGI,gCAAgC,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;MAC1L,IAAIL,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC7H,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;MAC3H,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC7H,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,cAAc,CAAC;MACtI,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,yBAAyB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;GAC7I,CAAC;EACqB,iBAAU,GAA0C;MACzE,IAAIC,2BAAmC,CAAC,MAAM,CAAC,aAAa,CAAC;GAC9D,CAAC;EACqB,sBAAe,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;AA4LnCN,cAAoB,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE;EAE5F;;ECpUA;;;;;;;;;;;;;;;;;EAuBA;;;;QAIa,cAAc;MAA3B;UACS,sBAAiB,GAAgE,EAAE,CAAC;OAuD5F;;;;MAlDQ,QAAQ;;UAEb,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;cAEzD,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;WAC/C;OACF;;;;;;MAOM,GAAG,CAAC,OAA8B,EAAE,QAAgB;;UAEzD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;OACpD;;;;MAKM,IAAI,CAAC,EAAU;;UAEpB,MAAM,iBAAiB,GAA4B,EAAE,CAAC;;UAEtD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;cAEzD,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;;cAEnD,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;cAC1D,IAAI,QAAQ,IAAI,GAAG,EAAE;kBACnB,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;eACjC;;cAED,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;cAE/C,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;WAClB;;UAED,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;cAEpD,MAAM,OAAO,GAAG,iBAAiB,CAAC,EAAE,CAAC,CAAC;;cAEtC,OAAO,CAAC,QAAQ,EAAE,CAAC;;cAEnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,KAAK;kBAC3D,OAAO,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC;eAClC,CAAC,CAAC;WACJ;OACF;GACF;EAED;;;;QAIa,oBAAqB,SAAQH,aAAE,CAAC,mBAAmB;MAAhE;;UACS,qBAAgB,GAAuB,EAAE,CAAC;OA0BlD;;;;MArBQ,uBAAuB,CAAC,KAAuB;UACpD,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;OACjC;;;;MAKM,gBAAgB,CAAC,KAAuB;UAC7C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OACnC;;;;MAKM,mBAAmB,CAAC,KAAuB;UAChD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;OACvE;MAEM,iBAAiB;UACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC;OAC9B;GACF;QAEY,eAAe;;EAC1B;;;EAGuB,iCAAiB,GAAG,EAAE,CAAC;EACvB,kCAAkB,GAAG,EAAE,CAAC;EAC/C;;;EAGuB,4BAAY,GAAG,eAAe,CAAC,iBAAiB,GAAG,eAAe,CAAC,kBAAkB,CAAC;EAC7G;;;EAGuB,8BAAc,GAAG,GAAG,CAAC;EACrB,8BAAc,GAAG,GAAG,CAAC;EAC5C;;;EAGuB,2BAAW,GAAG,GAAG,CAAC;EAClB,4BAAY,GAAG,GAAG,CAAC;EAC1C;;;EAGuB,+BAAe,GAAG,eAAe,CAAC,WAAW,GAAG,GAAG,CAAC;EACpD,gCAAgB,GAAG,eAAe,CAAC,YAAY,GAAG,GAAG,CAAC;EAC7E;;;EAGuB,gCAAgB,GAAG,CAAC,eAAe,CAAC,iBAAiB,GAAG,eAAe,CAAC,WAAW,IAAI,GAAG,CAAC;EAC3F,iCAAiB,GAAG,CAAC,eAAe,CAAC,kBAAkB,GAAG,eAAe,CAAC,YAAY,IAAI,GAAG,CAAC;EAErH;;;EAGuB,6BAAa,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC5C,kCAAkB,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACjD,2BAAW,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC1C,0BAAU,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACzC,4BAAY,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC3C,oCAAoB,GAAG,IAAIA,aAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAE1E;;;EAGuB,yBAAS,GAAG,GAAG,CAAC;EAEvC;;;EAGuB,gCAAgB,GAAG,CAAC,CAAC,eAAe,CAAC,WAAW,GAAG,eAAe,CAAC,YAAY,IAAI,GAAG,IAAI,GAAG,CAAC;EAErH;;;;EAIuB,iCAAiB,GAAG,EAAE,CAAC;EACvB,kCAAkB,GAAG,EAAE,CAAC;EACxB,gCAAgB,GAAG,CAAC,CAAC;EACrB,kCAAkB,GAAG,CAAC,CAAC;EAE9C;;;EAGuB,8CAA8B,GAAG,GAAG,CAAC;EAE5D;;;EAGuB,qCAAqB,GAAG,eAAe,CAAC,YAAY,GAAG,GAAG,CAAC;EAClF;;;EAGuB,sCAAsB,GAAG,eAAe,CAAC,WAAW,GAAG,GAAG,CAAC;EAElF;;;;EAIuB,yCAAyB,GAAG,GAAG,CAAC;EAEvD;;;EAGuB,qCAAqB,GAAG,CAAC,CAAC;EAC1B,uCAAuB,GAAG,CAAC,CAAC,CAAC;EAC7B,0CAA0B,GAAG,CAAC,CAAC;EAC/B,4CAA4B,GAAG,CAAC,EAAE,CAAC;EAG5D;;;;;;;;QAQa,OAAQ,SAAQE,IAAY;MAevC;UACE,KAAK,EAAE,CAAC;UAdH,YAAO,GAAG,eAAe,CAAC,iBAAiB,IAAI,eAAe,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;UACtF,cAAS,GAAG,eAAe,CAAC,kBAAkB,GAAG,CAAC,CAAC;UACnD,iBAAY,GAAG,eAAe,CAAC,kBAAkB,GAAG,CAAC,CAAC;UACtD,cAAS,GAAmB,IAAI,cAAc,EAAE,CAAC;UACjD,iBAAY,GAAG,KAAK,CAAC;UACrB,8BAAyB,GAAG,CAAC,GAAG,CAAC;UACjC,eAAU,GAAuB,EAAE,CAAC;UACpC,aAAQ,GAA0B,EAAE,CAAC;;;;UAIrC,eAAU,GAAgC,IAAI,2BAA2B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UAK7F,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;UAClE,IAAI,CAAC,gBAAgB,EAAE,CAAC;;UAExB,IAAI,CAAC,YAAY,EAAE,CAAC;;UAEpB,IAAI,CAAC,UAAU,EAAE,CAAC;;UAElB,IAAI,CAAC,SAAS,EAAE,CAAC;;UAEjB,IAAI,CAAC,YAAY,EAAE,CAAC;OACrB;MAEM,QAAQ;UACb,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;OAC5B;;;;;MAMM,gBAAgB;UACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;cACrD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,KAAK,CAAC;cAC5C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WACzB;OACF;;;;MAKM,WAAW,CAAC,CAAS,EAAE,CAAS;;UAErC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;OACzD;;;;MAKM,WAAW,CAAC,CAAS,EAAE,CAAS,EAAE,QAA0B;;UAEjE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;OAC7D;;;;MAKM,OAAO,CAAC,CAAS,EAAE,CAAS;;UAEjC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;OACvD;;;;MAKM,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,IAAoB;;UAEvD,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACnE,IAAI,WAAW,EAAE;cACf,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;WACvC;UACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;OACvD;;;;MAKM,YAAY;UACjB,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC;UACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC5C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,eAAe,EAC5C,eAAe,CAAC,gBAAgB,EAChC,IAAIA,aAAE,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EACzC,eAAe,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;UAC1C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC;UAC9D,IAAI,CAAC,QAAQ,CAAC,eAAe,CAC3B,OAAO,CAAC,WAAW,CACjB,eAAe,CAAC,iBAAiB,GAAG,CAAC,EACrC,eAAe,CAAC,kBAAkB,GAAG,CAAC,CAAC,EACzC,CAAC,CAAC,CAAC;OACN;;;;MAKM,SAAS;;;;;UAKd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAE;cAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE;kBAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,gBAAgB,CAAC,KAAK,EAAE;sBACrD,SAAS;mBACV;;kBAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC;;kBAErC,IAAI,MAAM,GAAG,eAAe,CAAC,iBAAiB,IAAI,CAAC,KAAK,CAAC,EAAE;sBACzD,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;mBAC5B;uBAAM,IAAI,MAAM,GAAG,eAAe,CAAC,iBAAiB;sBACnD,eAAe,CAAC,kBAAkB,EAAE;sBACpC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;mBAChD;uBAAM,IAAI,MAAM,GAAG,eAAe,CAAC,iBAAiB;sBACnD,eAAe,CAAC,kBAAkB;sBAClC,eAAe,CAAC,gBAAgB,EAAE;sBAClC,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC;mBACvD;uBAAM;sBACL,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;mBACzD;eACF;WACF;OACF;;;;MAKM,YAAY;UACjB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;UAClC,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,EAC9B,QAAQ,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAC3B,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;UACzC,MAAM,QAAQ,GAAG;cACf,IAAIA,aAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;cACvC,IAAIA,aAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;cACrC,IAAIA,aAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;cACnC,IAAIA,aAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;WACtC,CAAC;UACF,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;UAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;OAClC;;;;MAKM,eAAe,CAAC,CAAS,EAAE,CAAS;UACzC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC3C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,eAAe,EAC5C,eAAe,CAAC,gBAAgB,EAChC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;UACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC;UACrD,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;UACzB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;OAC/C;;;;MAKM,oBAAoB,CAAC,CAAS,EAAE,CAAS,EAAE,QAA0B;UAC1E,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;UACjC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,eAAe,EAC5C,eAAe,CAAC,gBAAgB,EAChC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;UACzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC;UACpI,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UACjB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,KAAK,gBAAgB,CAAC,GAAG;cAC7C,eAAe,CAAC,UAAU,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC;UAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;UAC5D,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;;UAGxC,MAAM,aAAa,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;;UAE/C,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;UACjE,MAAM,KAAK,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;UACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,EAAE,CAAC,EAAE;;cAEtC,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;WAC9E;;UAED,IAAI,QAAQ,KAAK,gBAAgB,CAAC,GAAG,EAAE;cACrC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;WACvC;OACF;;;;;MAMM,UAAU;UACf,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;cACxD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;WAC1D;OACF;;;;MAKM,0BAA0B,CAAC,QAAiB;UACjD,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;UAClE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;UACxC,MAAM,OAAO,GAAG,IAAIW,aAAqB,EAAE,CAAC;UAC5C,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;UACxB,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;UACjD,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;UACxD,OAAO,CAAC,WAAW,CAAC,IAAIX,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC;UACzE,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;UACxD,OAAO,CAAC,OAAO,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EACzD,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC;UACrC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;UAC1B,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;UACvD,OAAO,CAAC,gBAAgB,CAACA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;UAClG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAC,8BAA8B,CAAC,CAAC;UAC5E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAC;OACxE;;;;MAKM,iBAAiB,CAAC,OAAe,EAAE,OAAe;UACvD,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;UACtD,MAAM,cAAc,GAAa,CAAC,CAAC,CAAC,CAAC;UACrC,MAAM,cAAc,GAAa,CAAC,CAAC,CAAC,CAAC;UACrC,OAAO,CAAC,WAAW,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;UAEpE,OAAO,GAAGA,aAAE,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,eAAe,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;UACtE,OAAO,GAAGA,aAAE,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,eAAe,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;;;UAIvE,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,gBAAgB,CAAC,IAAI;eAC7D,cAAc,CAAC,CAAC,CAAC,KAAK,OAAO;kBAC5B,cAAc,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,EAAE;;cAElC,IAAI,CAAC,mBAAmB,EAAE,CAAC;;cAE3B,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;WACzE;OACF;;;;;MAMM,mBAAmB;UACxB,IAAI,QAAQ,GAAG,KAAK,CAAC;UACrB,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;UACtD,IAAI,IAAI,CAAC,yBAAyB,GAAG,eAAe,CAAC,yBAAyB,EAAE;cAC9E,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,CAAC;cAChD,QAAQ,GAAG,IAAI,CAAC;WACjB;UACD,IAAI,CAAC,yBAAyB,GAAG,CAAC,GAAG,CAAC;UACtC,OAAO,QAAQ,CAAC;OACjB;;;;;MAMM,uBAAuB,CAAC,MAAc,EAAE,MAAc,EAAE,IAAY,EAAE,IAAY;UACvF,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,MAAM,KAAK,GAAG,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;UAChC,MAAM,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;UACjC,MAAM,OAAO,GAAG,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;UACnC,MAAM,OAAO,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;UACpC,KAAK,CAAC,QAAQ,CACZ,eAAe,CAAC,eAAe,GAAG,KAAK,EACvC,eAAe,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC;UAC7C,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UACxC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAClG,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;OACpE;MAEM,cAAc,CAAC,KAAe;UACnC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;OAC7B;MAEM,sBAAsB,CAAC,KAAuB;UACnD,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;OACrC;MAEM,YAAY,CAAC,OAAmB;UACrC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;OAC7B;MAEM,UAAU,CAAC,OAAmB;UACnC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;OAC3B;MAEM,QAAQ,CAAC,OAAmB,EAAE,WAAwB;UAC3D,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;OACtC;MAEM,SAAS,CAAC,OAAmB,EAAE,OAA0B;UAC9D,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;OACnC;;;;;MAMM,QAAQ,CAAC,GAAW;;UAEzB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;cACtB,OAAO;WACR;UAED,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;UACtD,MAAM,OAAO,GAAa,CAAC,CAAC,CAAC,CAAC;UAC9B,MAAM,OAAO,GAAa,CAAC,CAAC,CAAC,CAAC;UAC9B,OAAO,CAAC,WAAW,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;UACtD,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;kBACN,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;kBACN,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;kBACN,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;;kBAEN,IAAI,IAAI,CAAC,yBAAyB,GAAG,GAAG,EAAE;sBACxC,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;mBACtC;uBAAM;;;;;;sBAML,IAAI,CAAC,mBAAmB,EAAE,CAAC;mBAC5B;kBACD,MAAM;cACR;kBACE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;kBACpB,MAAM;WACT;UACD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;OAC3B;MAEM,UAAU,CAAC,GAAW;UAC3B,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;OACvB;MAEM,SAAS,CAAC,CAAU;UACzB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;UACnB,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;OACtC;;;;MAKM,OAAO,CAAC,CAAU;UACvB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UACjB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;cACtB,OAAO;WACR;;UAGD,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;cAC/B,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;cACtD,MAAM,OAAO,GAAa,CAAC,CAAC,CAAC,CAAC;cAC9B,MAAM,OAAO,GAAa,CAAC,CAAC,CAAC,CAAC;cAC9B,OAAO,CAAC,WAAW,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;;;cAGtD,MAAM,QAAQ,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC3F,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;cACtC,IAAI,QAAQ,GAAG,QAAQ;kBACrB,QAAQ,IAAI,eAAe,CAAC,eAAe,EAAE;kBAC7C,OAAO,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;eACzC;mBAAM,IAAI,QAAQ,IAAI,eAAe,CAAC,eAAe,EAAE;kBACtD,OAAO,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;eACzC;cACD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;WAChD;UACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;OAC3B;MAEM,SAAS,CAAC,CAAU;UACzB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;OACpB;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,EAAE,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;UAC/D,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;cAC9C,EAAE,GAAG,GAAG,CAAC;WACV;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;UAExB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;UAEzB,IAAI,IAAI,CAAC,yBAAyB,IAAI,GAAG,EAAE;cACzC,IAAI,CAAC,yBAAyB,IAAI,EAAE,CAAC;WACtC;UAED,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;UACtD,MAAM,OAAO,GAAa,CAAC,CAAC,CAAC,CAAC;UAC9B,MAAM,OAAO,GAAa,CAAC,CAAC,CAAC,CAAC;UAC9B,OAAO,CAAC,WAAW,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;;UAEtD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAAC,IAAI,EAAE;cACtE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;cACjE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;WAC5C;;UAGD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;;;UAIzF,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;;UAE3D,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;cAEjD,MAAM,aAAa,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,aAAa,CAAC,cAAc,EAAE,CAAC;;cAE7C,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;;cAEjE,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;cACjE,MAAM,aAAa,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC;cACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,EAAE,CAAC,EAAE;;;kBAGtC,MAAM,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;kBACnG,MAAM,gBAAgB,GAAG,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;;kBAGnD,MAAM,QAAQ,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;;kBAEzE,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;kBACtC,IAAI,QAAQ,GAAG,eAAe,CAAC,WAAW;;sBAExC,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,WAAW,GAAG,CAAC,GAAG;sBAC/C,QAAQ,CAAC,CAAC,GAAG,GAAG,EAAE;;;sBAGlB,MAAM,QAAQ,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,gBAAgB,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;sBACzE,QAAQ,CAAC,SAAS,EAAE,CAAC;;sBAErB,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC;mBAC1F;uBAAM,IAAI,QAAQ,IAAI,eAAe,CAAC,eAAe,IAAI,QAAQ,CAAC,CAAC,GAAG,GAAG,EAAE;;;sBAG1E,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,eAAe,CAAC,eAAe,IAAI,QAAQ,CAAC,CAAC,CAAC;sBAC/E,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC;sBACpE,QAAQ,CAAC,SAAS,EAAE,CAAC;;sBAErB,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC,CAAC;mBACzF;eACF;WACF;;UAGD,IAAI,CAAC,UAAU,EAAE,CAAC;UAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;UAChB,IAAI,CAAC,SAAS,EAAE,CAAC;OAClB;;;;MAKM,QAAQ;UACb,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE;cACxD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,eAAe,CAAC,WAAW,CAAC,CAAC;WAClF;OACF;;;;MAKM,UAAU;UACf,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,EAC9B,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,aAAa,EAC7C,eAAe,CAAC,kBAAkB,EAClCA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB;cACnC,eAAe,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC,EACpD,IAAI,CAAC,CAAC;OACT;;;;MAKM,SAAS;;;;;;;;;;UAUdI,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,mBAAmB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;UACtI,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,mCAAmC,CAAC,CAAC;UACxF,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;;;;;MAMM,QAAQ,CAAC,QAAiB,EAAE,KAAe,EAAE,OAAgB,KAAK;;UAEvE,MAAM,KAAK,GAAGL,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;UACnC,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,WAAW,CAAC;UACtD,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,YAAY,CAAC;UACvD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;UAC/B,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;UACrC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/B,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;UACzB,IAAI,IAAI,EAAE;cACRI,WAAmB,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;WAClD;eAAM;cACLA,WAAmB,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;WACvD;OACF;;;;;;;;;;;;MAeM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;;;MAKM,OAAO,aAAa,CAAC,UAAmB;UAC7C,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,cAAc;cAC3C,eAAe,CAAC,gBAAgB,EAChC,eAAe,CAAC,cAAc;cAC9B,eAAe,CAAC,iBAAiB,CAAC,CAAC;OACtC;;;;MAKM,OAAO,UAAU,CAAC,UAAmB,EAAE,QAAiB;UAC7D,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;UAClC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,cAAc;cACzC,eAAe,CAAC,gBAAgB,EAChC,eAAe,CAAC,cAAc;cAC9B,eAAe,CAAC,iBAAiB,CAAC,CAAC;OACtC;;MAGM,OAAO,WAAW,CAAC,QAAiB,EAAE,CAAW,EAAE,CAAW;;;UAGnE,MAAM,UAAU,GAAG,IAAIJ,aAAE,CAAC,IAAI,EAAE,CAAC;UACjC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;UAClC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;cACzC,eAAe,CAAC,WAAW;cAC7B,eAAe,CAAC,eAAe,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;cACzC,eAAe,CAAC,YAAY;cAC9B,eAAe,CAAC,gBAAgB,CAAC,CAAC;OACrC;;;;MAKM,OAAO,WAAW,CAAC,CAAS,EAAE,CAAS,EAAE,MAAe,IAAIA,aAAE,CAAC,IAAI,EAAE;;;UAG1E,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UACjC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;UAClC,OAAO,GAAG,CAAC,GAAG,CACZ,CAAC,CAAC,GAAG,eAAe,CAAC,WAAW,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,eAAe,CAAC,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;OACxG;;;;;MAMM,OAAO,iBAAiB,CAAC,CAAS,EAAE,CAAS;;;;;UAKlD,OAAO,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,iBAAiB,CAAC,CAAC;OACpD;;;;MAKM,OAAO,gBAAgB,CAAC,QAAiB,EAAE,MAAe,IAAIA,aAAE,CAAC,IAAI,EAAE;UAC5E,OAAO,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,eAAe,EACzD,QAAQ,CAAC,CAAC,GAAG,eAAe,CAAC,gBAAgB,CAAC,CAAC;OAClD;;;;MAKM,OAAO,SAAS,CAAC,CAAW,EAAE,CAAW,EAAE,CAAS;UACzD,OAAO,IAAIA,aAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACzB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;OAC9B;;;;MAKM,OAAO,IAAI,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;UAChD,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;OAC9B;GACF;EAED;;;EAGA,IAAY,gBAQX;EARD,WAAY,gBAAgB;MAC1B,yDAAS,CAAA;MACT,uDAAQ,CAAA;MACR,uDAAQ,CAAA;MACR,qDAAO,CAAA;MACP,yDAAS,CAAA;MACT,uDAAQ,CAAA;MACR,uDAAQ,CAAA;EACV,CAAC,EARW,gBAAgB,KAAhB,gBAAgB,QAQ3B;EAED;;;;QAIa,2BAA4B,SAAQ,oBAAoB;;;;;MAenE,YAAY,KAAe;UACzB,KAAK,EAAE,CAAC;UAfH,YAAO,GAAG,CAAC,CAAC;UACZ,UAAK,GAAG,CAAC,CAAC;UAEV,uBAAkB,GAAkC,IAAI,CAAC;;UAc9D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;UACrB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,qBAAqB,CAAC;UACtD,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;OAC3C;;;;MAZM,QAAQ,MAAK;MAcb,QAAQ;UACb,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;WAC9D;OACF;;;;MAKM,QAAQ,CAAC,KAAa;UAC3B,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;OACvB;;;;MAKM,QAAQ;UACb,OAAO,IAAI,CAAC,OAAO,CAAC;OACrB;;;;MAKM,MAAM,CAAC,GAAW;UACvB,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC;OACnB;;;;MAKM,MAAM;UACX,OAAO,IAAI,CAAC,KAAK,CAAC;OACnB;;;;MAKM,kBAAkB,CAAC,cAAiC,EAAE,KAAa;;;UAGxE,MAAM,QAAQ,GAAG,cAAc,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,CAAC;UAC3D,IAAI,QAAQ,EAAE;;cAEZ,MAAM,QAAQ,GAAG,QAAQ,CAAC;cAC1B,QAAQ,QAAQ;kBACd,KAAK,gBAAgB,CAAC,GAAG;sBACvB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC;sBACrD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;sBAChB,MAAM;kBACR,KAAK,gBAAgB,CAAC,KAAK;sBACzB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC;sBACvD,MAAM;eAGT;WACF;OACF;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE;EAE9F;;ECz8BA;;;;;;;;;;;;;;;;;QAuBa,OAAQ,SAAQD,IAAY;MAQvC;UACE,KAAK,EAAE,CAAC;UAHH,uBAAkB,GAAG,KAAK,CAAC;;UAMhC;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,GAAG,GAAG;kBACV,IAAIA,aAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC;kBACjD,IAAIA,aAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,UAAU,CAAC;kBAClD,IAAIA,aAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC;kBAC/C,IAAIA,aAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC;eAC/C,CAAC;cACF,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;cACtB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAC3C,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;;UAGtC;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;cACpD,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;cACpD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGF,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;OACF;MAEM,OAAO,CAAC,CAAU;UACvB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;UAGjB,MAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,SAAS;cACrE,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC;UACtD,IAAI,WAAW,EAAE;cACf,MAAM,UAAU,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,EACzE,GAAG,IAAI,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;cAChD,MAAM,SAAS,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC9D,SAAS,CAAC,SAAS,EAAE,CAAC;cACtB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;WACrC;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;UAEpB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;kBAC/B,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;kBAChC,MAAM;WACT;OACF;MAEM,mBAAmB,CAAC,SAAkB;UAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;UAC5D,IAAI,CAAC,cAAc,EAAE;cAAE,MAAM,IAAI,KAAK,EAAE,CAAC;WAAE;UAC3C,MAAM,aAAa,GAAG,cAAc,CAAC,oBAAoB,EAAE,CAAC;UAC5D,IAAI,CAAC,aAAa,EAAE;cAAE,MAAM,IAAI,KAAK,EAAE,CAAC;WAAE;UAC1C,MAAM,YAAY,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC;UAEtD,IAAI,IAAI,CAAC,kBAAkB,EAAE;cAC3B,MAAM,iBAAiB,GAAG,KAAK,CAAC;;cAEhC,MAAM,OAAO,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,YAAY,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC1F,aAAa,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;WAC3C;eAAM;cACL,MAAM,eAAe,GAAG,GAAG,CAAC;;cAE5B,MAAM,KAAK,GAAGA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,YAAY,EAAE,SAAS,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACtF,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;WACjC;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;EAjGsB,gBAAQ,GAAG,CAAC,CAAC,CAAC;EACd,iBAAS,GAAG,CAAC,CAAC;EACd,kBAAU,GAAG,CAAC,CAAC;EACf,eAAO,GAAG,CAAC,CAAC;AAiGJG,cAAoB,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE;EAE9F;;EC9HA;;;;;;;;;;;;;;;;;QAuBa,WAAY,SAAQD,IAAY;MAU3C;UACE,KAAK,EAAE,CAAC;;UAGRA,IAAY,CAAC,qBAAqB,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,eAAe,CAAC,CAAC;UAExF;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,MAAM,QAAQ,GAAG;kBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;kBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;kBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;kBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;eACnB,CAAC;cACF,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3B,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAElC;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;UAAC;cACtC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cAC/C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;cACpD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGF,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAChE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;cAC/D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;cAC/D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cACjE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;cAChE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;cAChE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;cAC9D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;cAC9D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;;EAlIsB,yBAAa,GAAG;MACrC,IAAIO,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;GAC7K,CAAC;EACqB,sBAAU,GAAG;MAClC,IAAIC,2BAAmC,CAAC,WAAW,CAAC,aAAa,CAAC;MAClE,IAAIA,2BAAmC,CAACD,iBAAyB,CAAC,eAAe,CAAC;GACnF,CAAC;EACqB,2BAAe,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;AA8HxCL,cAAoB,CAAC,WAAW,EAAE,cAAc,EAAE,WAAW,CAAC,MAAM,EAAE;EAEvG;;EC/JA;;;;;;;;;;;;;;;;;EAuBA;;;;;;;;;;;QAYa,OAAQ,SAAQD,IAAY;MAsBvC;UACE,KAAK,EAAE,CAAC;UAtBH,cAAS,GAAG,OAAO,CAAC,gBAAgB,CAAC;UACrC,eAAU,GAAG,OAAO,CAAC,qBAAqB,CAAC;UAC3C,kBAAa,GAAG,OAAO,CAAC,oBAAoB,CAAC;UAC7C,kBAAa,GAAmB,IAAI,CAAC;UACrC,oBAAe,GAA4B,IAAI,CAAC;UAoBrD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIF,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;UAG3C;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,MAAM,QAAQ,GAAG;kBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,CAAC;kBAC7C,IAAIA,aAAE,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,CAAC;kBAC5C,IAAIA,aAAE,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,iBAAiB,CAAC;kBACpE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,iBAAiB,CAAC;eACtE,CAAC;cACF,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAChC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;cAChB,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;cACtB,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;WAC3B;;UAGD,IAAI,CAAC,aAAa,EAAE,CAAC;;UAErB,IAAI,CAAC,cAAc,EAAE,CAAC;OACvB;;;;MAKM,cAAc;UACnB,IAAI,IAAI,CAAC,aAAa,EAAE;cACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;cAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;WAC3B;OACF;;;;MAKM,aAAa;UAClB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;cACvB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACjD,MAAM,YAAY,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cAC3C,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,eAAe,EACzE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;cACtC,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAChC,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC;cACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;cAChB,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;cACtB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;WACvC;OACF;;;;MAKM,aAAa;UAClB,IAAI,IAAI,CAAC,aAAa,EAAE;cACtB,IAAI,CAAC,cAAc,EAAE,CAAC;WACvB;eAAM;cACL,IAAI,CAAC,aAAa,EAAE,CAAC;WACtB;OACF;;;;MAKM,cAAc;UACnB,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;cACjC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;cAC7C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;WAC7B;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,CAAC;UAAC;cACpE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,oBAAoB,EAC1D,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,qBAAqB,EAC9C,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;cACpD,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;cAC7C,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;;;;cAIrE,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;cAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;cAEpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,EAAE,EAAE,CAAC,EAAE;;kBAEhE,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;kBAChC,CAAC,CAAC,GAAG,CAACa,WAAmB,EAAE,GAAG,GAAG,EAAEA,WAAmB,EAAE,GAAG,GAAG,CAAC,CAAC;kBAChE,CAAC,CAAC,SAAS,EAAE,CAAC;;kBAEd,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;eAC/B;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;;kBAEN,IAAI,CAAC,aAAa,EAAE,CAAC;kBACrB,MAAM;cACR,KAAK,GAAG;;kBAEN,IAAI,CAAC,SAAS,GAAGb,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;kBACtF,IAAI,CAAC,KAAK,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;;kBAEN,IAAI,CAAC,SAAS,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;kBACtF,IAAI,CAAC,KAAK,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;;kBAEN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;kBACvE,MAAM;cACR,KAAK,GAAG;;kBAEN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;kBACvE,MAAM;cACR,KAAK,GAAG;;kBAEN,IAAI,CAAC,aAAa,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,iBAAiB,EACxE,OAAO,CAAC,gBAAgB,CAAC,CAAC;kBAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;;kBAEN,IAAI,CAAC,aAAa,GAAGA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,iBAAiB,EACxE,OAAO,CAAC,gBAAgB,CAAC,CAAC;kBAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;kBACb,MAAM;cACR;kBACE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;kBACpB,MAAM;WACT;OACF;;;;MAKM,WAAW,CAAC,CAAU;UAC3B,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,oBAAoB;cAChF,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,qBAAqB,GAAG,GAAG,CAAC;OAC5D;MAEM,SAAS,CAAC,CAAU;UACzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;cACxB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;WACpB;OACF;MAEM,OAAO,CAAC,CAAU;;UAEvB,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;;cAEvB,IAAI,CAAC,aAAa,EAAE,CAAC;WACtB;eAAM;;cAEL,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAEtB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;WAClB;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;UAGrB,IAAI,GAAG,GAAG,CAAC,CAAC;UACZ,IAAI,MAAM,GAAG,CAAC,CAAC;UAEf,IAAI,IAAI,CAAC,eAAe,EAAE;cACxB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;;cAEpD,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;;cAE7D,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;cAE5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;;;kBAGhE,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;kBAChC,CAAC,CAAC,SAAS,EAAE,CAAC;;kBAEd,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;;;kBAK9B,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;kBAC/B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE;sBACzB,GAAG,EAAE,CAAC;mBACP;uBAAM;sBACL,MAAM,EAAE,CAAC;mBACV;eACF;WACF;;;UAID,MAAM,WAAW,GAAG,GAAG,IAAI,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;UACxE,MAAM,WAAW,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;UAC7CI,WAAmB,CAAC,UAAU,CAC5B,EAAE,EAAE,EAAE,EAAE,UAAU,WAAW,GAAG,GAAG,GAAG,WAAW,GAAG,WAAW,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;OAClF;;;;MAKM,KAAK;UACV,IAAI,CAAC,cAAc,EAAE,CAAC;UACtB,IAAI,CAAC,cAAc,EAAE,CAAC;UACtB,IAAI,CAAC,aAAa,EAAE,CAAC;OACtB;;;;MAKM,WAAW,CAAC,WAAmB;UACpC,IAAI,CAAC,UAAU,GAAGJ,aAAE,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,0BAA0B,EACxE,OAAO,CAAC,iBAAiB,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;UAClE,IAAI,CAAC,KAAK,EAAE,CAAC;OACd;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;EA9PsB,wBAAgB,GAAG,GAAG,CAAC;EACvB,yBAAiB,GAAG,GAAG,CAAC;EACxB,4BAAoB,GAAG,OAAO,CAAC,gBAAgB,GAAG,GAAG,CAAC;EACtD,6BAAqB,GAAG,OAAO,CAAC,iBAAiB,GAAG,GAAG,CAAC;EACxD,uBAAe,GAAG,OAAO,CAAC,qBAAqB,GAAG,KAAK,CAAC;EACxD,kCAA0B,GAAG,OAAO,CAAC,qBAAqB,GAAG,GAAG,CAAC;EACjE,qBAAa,GAAG,IAAI,CAAC;EACrB,oBAAY,GAAG,IAAI,CAAC;EACpB,oBAAY,GAAG,GAAG,CAAC;EACnB,wBAAgB,GAAG,IAAI,CAAC;EACxB,yBAAiB,GAAG,GAAG,CAAC;EACxB,wBAAgB,GAAG,GAAG,CAAC;EACvB,wBAAgB,GAAG,IAAI,CAAC;EACxB,4BAAoB,GAAG,GAAG,CAAC;AAoPnBG,cAAoB,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE;EAE9F;;EC7SA;;;;;;;;;;;;;;;;;QAuBa,uBAAwB,SAAQD,IAAY;MA4CvD;UACE,KAAK,EAAE,CAAC;UAER,IAAI,CAAC,UAAU,GAAG;cAChB,IAAIS,aAAqB,EAAE;cAC3B,IAAIA,aAAqB,EAAE;WAC5B,CAAC;;UAGF,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;UACtC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;UACtF,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;;UAGhD,MAAM,iBAAiB,GAAG,IAAIX,aAAE,CAAC,iBAAiB,EAAE,CAAC;UACrD,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;UAC7D,iBAAiB,CAAC,YAAY,GAAG,IAAI,CAAC;UACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;UAC9E,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;;UAGvFE,IAAY,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;;UAGxD;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACzB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAClC;;UAGD;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,KAAK,CAAC,QAAQ,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC,EAAE,uBAAuB,CAAC,gBAAgB,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;cACpH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;cAE/B,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,QAAQ,EAAE,CAAC;cACnC,QAAQ,CAAC,IAAI,GAAG,uBAAuB,CAAC,SAAS,CAAC;cAClD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;cAC7B,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;cACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WAC5B;;UAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;cAC/C,MAAM,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;cACxC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;cACnC,OAAO,CAAC,WAAW,CACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC,GAAG,YAAY,EACpE,uBAAuB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;cAClD,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;cACvD,OAAO,CAAC,WAAW,CACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC,GAAG,YAAY,EACpE,uBAAuB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;cAClD,OAAO,CAAC,WAAW,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;cACxD,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,uBAAuB,CAAC,mBAAmB,GAAG,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;cACnH,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;WACnF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,IAAI,EAAE,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;UAC/D,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;cAC9C,EAAE,GAAG,GAAG,CAAC;WACV;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;cAC/C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;WAC7B;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,uBAAuB,EAAE,CAAC;OACtC;;EA7HD;;;EAGuB,0CAAkB,GAAG,GAAG,CAAC;EAChD;;;EAGuB,wCAAgB,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChE;;;EAGuB,iCAAS,GAAG,GAAG,CAAC;EACvC;;;EAGuB,kCAAU,GAAG,KAAK,CAAC;EAC1C;;;;EAIuB,yCAAiB,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAClE;;;;;EAKuB,yCAAiB,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;EAClE;;;EAGuB,qCAAa,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC7D;;;EAGuB,0CAAkB,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EAC/F;;;EAGuB,2CAAmB,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AA0FjEG,cAAoB,CAAC,WAAW,EAAE,kBAAkB,EAAE,uBAAuB,CAAC,MAAM,EAAE;EAEvH;;EC7JA;;;;;;;;;;;;;;;;;EAuBA;QACa,uBAAwB,SAAQH,aAAE,CAAC,aAAa;MAA7D;;UACS,sCAAiC,GAAG,IAAI,CAAC;UACzC,uCAAkC,GAAG,IAAI,CAAC;OAWlD;;MARQ,4BAA4B;UACjC,OAAO,IAAI,CAAC,iCAAiC,CAAC;OAC/C;;MAGM,6BAA6B;UAClC,OAAO,IAAI,CAAC,kCAAkC,CAAC;OAChD;GACF;QAEY,uBAAwB,SAAQE,IAAY;MACvD;UACE,KAAK,EAAE,CAAC;UA4HH,sBAAiB,GAA4B,IAAI,uBAAuB,EAAE,CAAC;;;UAxHhF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;UAEtD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIF,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;UAG3C;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAC3C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAClC,MAAM,QAAQ,GAAc;kBAC1B,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC,uBAAuB,CAAC,QAAQ,GAAG,uBAAuB,CAAC,OAAO,CAAC;kBACnH,IAAIA,aAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC,uBAAuB,CAAC,QAAQ,GAAG,uBAAuB,CAAC,OAAO,CAAC;kBAClH,IAAIA,aAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,uBAAuB,CAAC,QAAQ,GAAG,uBAAuB,CAAC,OAAO,CAAC;kBACjH,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,uBAAuB,CAAC,QAAQ,EAAE,uBAAuB,CAAC,QAAQ,GAAG,uBAAuB,CAAC,OAAO,CAAC;eACnH,CAAC;cACF,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3B,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,UAAU,EAAE,CAAC;cAChC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;cAClB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;cAChB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;cAChB,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC;cACtB,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;WAC3B;;UAGD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;UACrC;;cAEE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;;cAEpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,uBAAuB,CAAC,YAAY,GAAG,uBAAuB,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;;cAEzJ,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;;cAErC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;;;;cAIjB,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB;oBACxCA,aAAE,CAAC,YAAY,CAAC,gCAAgC;oBAChDA,aAAE,CAAC,YAAY,CAAC,+BAA+B,CAAC;;;cAGpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;;;;cAKrE,MAAM,UAAU,GAAc,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;cACxE,MAAM,KAAK,GAAW,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;;;;;;;cAO5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,EAAE,EAAE,CAAC,EAAE;kBAChE,MAAM,CAAC,GAAY,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;kBACzC,CAAC,CAAC,GAAG,CAACa,WAAmB,EAAE,EAAEA,WAAmB,EAAE,CAAC,CAAC;kBACpD,CAAC,CAAC,aAAa,EAAE,CAAC;kBAClB,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;eAC7C;WACF;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;UAGrB,MAAM,KAAK,GAAW,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;;;UAG5D,MAAM,UAAU,GAAc,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;;;;;;;UAOxE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,EAAE,EAAE,CAAC,EAAE;cAChE,MAAM,CAAC,GAAY,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;cACzC,CAAC,CAAC,aAAa,EAAE,CAAC;cAClB,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;WAC7C;;UAGD;cACE,MAAM,MAAM,GAAa;kBACvB,qCAAqC;kBACrC,sCAAsC;eACvC,CAAC;cACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;kBACtCT,WAAmB,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC9D,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;eACjD;WACF;OACF;MAEM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,uBAAuB,EAAE,CAAC;kBAC/B,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,wBAAwB,EAAE,CAAC;kBAChC,MAAM;cACR;kBACE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;kBACpB,MAAM;WACT;OACF;MAEM,uBAAuB;UAC5B,IAAI,CAAC,iBAAiB,CAAC,iCAAiC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,iCAAiC,CAAC;OACtH;MAEM,wBAAwB;UAC7B,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,CAAC;OACxH;MAWM,OAAO,MAAM;UAClB,OAAO,IAAI,uBAAuB,EAAE,CAAC;OACtC;;EARsB,gCAAQ,GAAG,IAAI,CAAC;EAChB,oCAAY,GAAG,uBAAuB,CAAC,QAAQ,GAAG,CAAC,CAAC;EACpD,+BAAO,GAAG,IAAI,CAAC;EACf,+CAAuB,GAAG,uBAAuB,CAAC,OAAO,GAAG,GAAG,CAAC;EAChE,gCAAQ,GAAG,GAAG,CAAC;AAOPF,cAAoB,CAAC,WAAW,EAAE,kBAAkB,EAAE,uBAAuB,CAAC,MAAM,EAAE;EAEvH;;ECrLA;;;;;;;;;;;;;;;;;QAuBa,uBAAwB,SAAQD,IAAY;MACvD;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;mBAClB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAE3C;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;cACvF,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACzB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACrB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;cACvF,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACzB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,MAAM,QAAQ,GAAG;kBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;kBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;kBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;kBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;eACpB,CAAC;cACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;cACvB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC;cACvF,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;cACzB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,uBAAuB,EAAE,CAAC;OACtC;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,iBAAiB,EAAE,uBAAuB,CAAC,MAAM,EAAE;EAEtH;;EClIA;;;;;;;;;;;;;;;;;QAuBa,SAAU,SAAQD,IAAY;MACzC;UACE,KAAK,EAAE,CAAC;UACR;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;mBAClB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAC3C,MAAM,YAAY,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAC9D,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAEtC;cACE,MAAM,KAAK,GAAG,IAAIF,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;cACnB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;cACxB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,SAAS,EAAE,CAAC;OACxB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC,MAAM,EAAE;EAElG;;EC1GA;;;;;;;;;;;;;;;;;EAuBA;;;;QAKa,MAAO,SAAQD,IAAY;MAItC;UACE,KAAK,EAAE,CAAC;UAJH,qBAAgB,GAAG,IAAIF,aAAE,CAAC,YAAY,EAAE,CAAC;UACzC,yBAAoB,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAK/C;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;;;cAK3C,MAAM,KAAK,GAAG,GAAG,CAAC;cAClB,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE;kBACxC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;sBAC7B,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;mBACvB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;UAC1C,MAAM,YAAY,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAC9D,IAAI,YAAY,KAAKF,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE;cACrD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;WACvC;;UAGD,IAAI,CAAC,gBAAgB,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAC9C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;UAG1C,IAAI,CAAC,oBAAoB,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAC/C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAChC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;OACpD;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,MAAM,KAAK,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UACvD,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,WAAW,EAAE,CAAC;UAEhC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAC3B,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;UAC3B,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;UAEjB,IAAI,KAAK,IAAIA,aAAE,CAAC,YAAY,CAAC,iBAAiB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE;cACpF,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;cACvD,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;cAC9C,EAAE,CAAC,KAAK,IAAIA,aAAE,CAAC,YAAY,CAAC,mBAAmB,CAAC;WACjD;UAED,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;;UAGzC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;OACjG;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE;EAE5F;;ECpGA;;;;;;;;;;;;;;;;;QAuBa,IAAK,SAAQD,IAAY;MACpC;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;;;cAK3C,MAAM,KAAK,GAAG,GAAG,EAAE,KAAK,GAAG,GAAG,CAAC;cAE/B,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,KAAK,EAAE;kBACtC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC;sBAC7B,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;mBACvB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE;kBACxC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,EAAE,GAAG,CAAC;sBAC3B,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;mBACvB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;UACtC,MAAM,YAAY,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAC9D,IAAI,YAAY,KAAKF,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE;cACrD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;WACvC;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;cACvB,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;cACnB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;cACxB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,IAAI,EAAE,CAAC;OACnB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;EAExF;;ECtFA;;;;;;;;;;;;;;;;;QAuBa,cAAe,SAAQD,IAAY;MAC9C;UACE,KAAK,EAAE,CAAC;UAER;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;mBAClB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAE3C;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;cACxG,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;cACrC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACrB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;cACxG,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;cACrC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;;;;;;;;cAQpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;cACvB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,UAAU,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,GAAGA,aAAE,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;cACxG,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACtB,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC;cAChB,EAAE,CAAC,eAAe,GAAG,GAAG,CAAC;cACzB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cACrC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;WAC/C;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACpB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;WAChC;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,cAAc,EAAE,CAAC;OAC7B;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,iBAAiB,EAAE,cAAc,CAAC,MAAM,EAAE;EAE7G;;ECtIA;;;;;;;;;;;;;;;;;EAuBA;EACA;EACA;EACA;EACA;EACA;QACa,aAAa;;EACxB;;;EAGuB,wBAAU,GAAW,CAAC,CAAC;EAC9C;;;EAGuB,2BAAa,GAAW,CAAC,CAAC;EACjD;;;;EAIuB,wBAAU,GAAW,CAAC,CAAC;EAC9C;;;EAGuB,0BAAY,GAAW,CAAC,CAAC;EAChD;;;EAGuB,4BAAc,GAAW,CAAC,CAAC;EAClD;;;EAGuB,0BAAY,GAAW,GAAG,GAAG,IAAI,CAAC;EAElC,iCAAmB,GAAW,CAAC,EAAE,CAAC;EAClC,kCAAoB,GAAW,EAAE,CAAC;EAClC,mCAAqB,GAAW,EAAE,CAAC;EAE1D;;;EAGuB,yBAAW,GAAW,EAAE,CAAC;EACzB,0BAAY,GAAW,EAAE,CAAC;EAEjD;;;EAGuB,kCAAoB,GAAW,EAAE,CAAC;EACzD;;;EAGuB,kCAAoB,GAAW,CAAC,CAAC;EACxD;;;EAGuB,kCAAoB,GAAW,CAAC,GAAG,CAAC;EAC3D;;;EAGuB,yBAAW,GAAW,GAAG,CAAC;EAEjD;;;EAGuB,wCAA0B,GAAW,GAAG,CAAC;EAGlE;;;;QAIa,sBAAuB,SAAQH,aAAE,CAAC,mBAAmB;;;;;MA6BhE,YAAY,KAAe,EAAE,MAAyB;UACpD,KAAK,EAAE,CAAC;;;;UA1BH,gBAAW,GAAwB,EAAE,CAAC;;;;UAetC,2BAAsB,GAAG,GAAG,CAAC;;;;UAI7B,6BAAwB,GAAG,GAAG,CAAC;;;UAUpC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;UACrB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;UAC/B,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;OAC3C;MAEM,QAAQ;UACb,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;OAC3C;;;;;MAMM,GAAG,CAAC,eAAyB,EAAE,iBAAyB;;UAE7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,aAAa,CAAC,0BAA0B,EAAE,EAAE,CAAC,EAAE;cAChH,MAAM,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;cACzC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,aAAa,CAAC,GAAGA,aAAE,CAAC,YAAY,CAAC,8BAA8B,CAAC,CAAC;cAC9J,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC,CAAC;WACxF;OACF;;;;MAKM,IAAI,CAAC,EAAU;UACpB,SAAS,IAAI,CAAC,CAAS,EAAE,CAAS;cAChC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;WACtC;;UAED,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,sBAAsB,GAAG,EAAE,EACjE,IAAI,CAAC,wBAAwB,CAAC,CAAC;UACjC,MAAM,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAC/B,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,wBAAwB,IAAI,GAAG,CAAC,CAAC;UACvE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CACtC,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,EAClC,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,EAC1C,GAAG,IAAI,KAAK,GAAG,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC;;UAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;cAChD,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WACpF;OACF;MAEM,eAAe,CAAC,KAAe,KAAU;MAEzC,iBAAiB,CAAC,OAAmB,KAAU;MAE/C,uBAAuB,CAAC,KAAuB,KAAU;;;;;MAMzD,kBAAkB,CAAC,cAAiC,EAAE,KAAa;UACxE,IAAI,cAAc,KAAK,IAAI,CAAC,gBAAgB,EAAE;cAC5C,OAAO;WACR;;;;UAKD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK;cAC/C,OAAO,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,CAAC;WACnC,CAAC,CAAC;;OAEJ;GACF;EAED;;;;;;QAOa,OAAQ,SAAQE,IAAY;MA6DvC;UACE,KAAK,EAAE,CAAC;;;;UA1DH,yBAAoB,GAAG,CAAC,CAAC;;;;UAIzB,gBAAW,GAAG,CAAC,CAAC;;;;UAKhB,gBAAW,GAAG,GAAG,CAAC;;;;UAIlB,oBAAe,GAAG,CAAC,CAAC;;;;UAKX,gBAAW,GAAY,IAAIF,aAAE,CAAC,IAAI,EAAE,CAAC;;;;UAcrC,YAAO,GAA0B,EAAE,CAAC;UACpC,eAAU,GAAwC,EAAE,CAAC;;UA4BnE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;;UAG3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE;cACpD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WAC3B;UAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;cACjD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WACxB;UAED,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;UAG/C;cACE;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;mBACpB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;sBACvD,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;sBAClD,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,CAAC;sBAClD,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,GAAG,EAAE,EAAE,EAAE,CAAC;mBACxD,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;sBACnD,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;sBACxD,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,EAAE,EAAE,EAAE,CAAC;sBACxD,IAAIA,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,EAAE,CAAC;mBACpD,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;UAEtC,IAAI,CAAC,gBAAgB,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;UAExF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;UAErB,IAAI,CAAC,SAAS,EAAE,CAAC;;UAGjB,IAAI,CAAC,gBAAgB,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAC9C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAoB,GAAG,aAAa,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;;UAG1G,IAAI,CAAC,oBAAoB,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAC/C,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAChC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;UAGnDE,IAAY,CAAC,qBAAqB,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;UAChF,IAAI,CAAC,eAAe,GAAGA,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAChEA,IAAY,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;OACzD;MAEM,QAAQ;;UAEb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC,EAAE,EAAE;;cAElD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WAC3B;OACF;;;;;;;;;;;;;;MAeM,SAAS;UACd,MAAM,IAAI,GACR,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY;cACZ,YAAY,CAAC;;UAIf,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;UAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;;UAGrB,MAAM,QAAQ,GAAG,IAAIF,aAAE,CAAC,YAAY,EAAE,CAAC;UACvC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;;UAG1E,MAAM,QAAQ,GAAGA,aAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;UACtC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;UAC1E,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;UACxE,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;UACzE,MAAM,kBAAkB,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACjD,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;UAEpC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,YAAY,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;UACzE,MAAM,iBAAiB,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UAChD,iBAAiB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;UAGnC,MAAM,WAAW,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACzC,WAAW,CAAC,QAAQ,GAAG,aAAa,CAAC,YAAY,GAAG,GAAG,CAAC;UAExD,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UAC3D,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UAC7D,MAAM,IAAI,GAAG,IAAIA,aAAE,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UAE5D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;UAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;cAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;kBACnD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;;kBAGrD,MAAM,MAAM,GAAG,IAAIA,aAAE,CAAC,IAAI,CACxB,aAAa,CAAC,mBAAmB,GAAG,aAAa,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,YAAY,EACnG,aAAa,CAAC,qBAAqB,GAAG,aAAa,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC;sBACxE,aAAa,CAAC,YAAY,CAAC,CAAC;;kBAG9B,QAAQ,IAAI;sBACV,KAAK,GAAG;;0BAEN,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAEA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;0BAC7D,MAAM;sBACR,KAAK,GAAG;;0BAEN,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,iBAAiB,EAAEA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;0BACtE,MAAM;sBACR,KAAK,GAAG;;0BAEN,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,kBAAkB,EAAEA,aAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;0BACvE,MAAM;sBACR,KAAK,GAAG;;0BAEN,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,EAAEA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;0BACjE,MAAM;sBACR,KAAK,GAAG;0BACN,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;0BACrB,MAAM;sBACR,KAAK,GAAG;;0BAEN,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;0BACpC,MAAM;sBACR,KAAK,GAAG;;0BAEN,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;0BACnC,MAAM;sBACR,KAAK,GAAG;;0BAEN,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;0BACrC,MAAM;mBAIT;eACF;WACF;OACF;MAEM,UAAU,CAAC,MAAe,EAAE,KAAe,EAAE,IAAiB;UACnE,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC1B,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;UAChB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;OACjC;;MAGM,OAAO,CAAC,MAAe;;;UAI5B,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;UACpC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;UAEvE,MAAM,GAAG,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC1B,GAAG,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACtC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;UACd,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAC1C,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;;UAI/B,MAAM,iBAAiB,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;UACrD,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;UAC5C,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC;UAC/B,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;UAC3C,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACvC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAE5C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;UAE5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;UACtC,IAAI,CAAC,WAAW,EAAE,CAAC;OACpB;;MAGM,gBAAgB,CAAC,MAAe,EAAE,KAAe;;;UAItD,MAAM,gBAAgB,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,aAAa,CAAC,oBAAoB,CAAC,CAAC;UAE5E,MAAM,OAAO,GAAG,IAAIW,aAAqB,EAAE,CAAC;UAC5C,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;UACjD,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;UAC5B,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;UACtC,OAAO,CAAC,OAAO,CAAC,IAAIX,aAAE,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC;UACtE,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;UACxD,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;UACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,OAAO,CAAC;UACrD,IAAI,CAAC,oBAAoB,EAAE,CAAC;OAC7B;MAEM,cAAc,CAAC,KAAe;UACnC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;OAC7B;MAEM,sBAAsB,CAAC,KAAuB;UACnD,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;OACrC;MAEM,YAAY,CAAC,OAAmB;UACrC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;OAC7B;MAEM,UAAU,CAAC,OAAmB;UACnC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;OAC3B;MAEM,QAAQ,CAAC,OAAmB,EAAE,WAAwB;UAC3D,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;OACtC;MAEM,SAAS,CAAC,OAAmB,EAAE,OAA0B;UAC9D,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;OACnC;;;;MAKM,QAAQ,CAAC,GAAW;UACzB,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;UACpB,IAAI,MAAM,GAAG,CAAC,CAAC;UACf,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;kBACzB,MAAM;cACR,KAAK,GAAG;kBACN,MAAM,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;kBAC3C,MAAM;cACR,KAAK,GAAG;kBACN,MAAM,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC5C,MAAM;cACR,KAAK,GAAG;kBACN,MAAM,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC;kBAC5C,MAAM;cACR,KAAK,GAAG;kBACN,MAAM,GAAGA,aAAE,CAAC,YAAY,CAAC,eAAe,CAAC;kBACzC,MAAM;WACT;UACD,IAAI,MAAM,EAAE;cACV,IAAI,IAAI,CAAC,eAAe,GAAG,MAAM,EAAE;kBACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,CAAC,MAAM,CAAC;eACvD;mBAAM;kBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;eACtD;WACF;UACDE,IAAY,CAAC,yBAAyB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;OAC9D;MAEM,UAAU,CAAC,GAAW;UAC3B,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;OACvB;MAEM,SAAS,CAAC,CAAU;UACzB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;OACpB;MAEM,OAAO,CAAC,CAAU;UACvB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OAClB;MAEM,SAAS,CAAC,CAAU;UACzB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;OACpB;;;;MAKM,IAAI,CAAC,QAA0B;UACpC,IAAI,EAAE,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;UAC/D,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;cAC9C,EAAE,GAAG,GAAG,CAAC;WACV;UACD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UAErB,IAAI,CAAC,eAAe,GAAGA,IAAY,CAAC,yBAAyB,EAAE,CAAC;;UAGhE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC,EAAE,EAAE;cAClD,MAAM,eAAe,GAAa,EAAE,CAAC;cACrC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;cACnC,IAAI,OAAO,EAAE;kBACX,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;kBAC/C,MAAM,gBAAgB,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,eAAe,EAAE,aAAa,CAAC,0BAA0B,CAAC,CAAC;kBACrG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;eAC9D;WACF;;UAGD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;UAG/B,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;;UAGhG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;cACzC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;cAC7B,IAAI,IAAI,EAAE;;;;kBAIR,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;eACjD;cAED,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;;cAGvB,IAAI,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,UAAU,EAAE;kBAC/C,IAAI,CAAC,WAAW,IAAI,aAAa,CAAC,UAAU,CAAC;kBAC7C,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;eAC1B;WACF;UAEDE,WAAmB,CAAC,UAAU,CAC5B,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,wCAAwC,CAAC,CAAC;UAChE,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;UAChDD,WAAmB,CAAC,UAAU,CAC5B,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,gCAAgC,CAAC,CAAC;UACxD,IAAI,CAAC,UAAU,IAAIC,oBAA4B,CAAC;OACjD;MAEM,kBAAkB;UACvB,OAAO,KAAK,CAAC,kBAAkB,EAAE,CAAC;OACnC;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,OAAO,EAAE,CAAC;OACtB;;EArZsB,qBAAa,GAAG;MACrC,IAAIE,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,OAAO,CAAC;MACzH,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,gBAAgB,EAAEQ,iBAAyB,CAAC,gBAAgB,GAAGI,gCAAgC,CAAC,oBAAoB,EAAE,gBAAgB,CAAC;MAC1L,IAAIL,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,QAAQ,CAAC;MAC3H,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC7H,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,SAAS,CAAC;MAC7H,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;MACxK,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;MACxK,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,iBAAiB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,wBAAwB,CAAC;MACrN,IAAID,sBAA8B,CAACP,aAAE,CAAC,YAAY,CAAC,kBAAkB,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,EAAEQ,iBAAyB,CAAC,gBAAgB,EAAE,uBAAuB,CAAC;GACjL,CAAC;EAEqB,kBAAU,GAAG;MAClC,IAAIC,2BAAmC,CAAC,OAAO,CAAC,aAAa,CAAC;GAC/D,CAAC;EACqB,uBAAe,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;AAyYpCN,cAAoB,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE;EAE9F;;EChpBA;;;;;;;;;;;;;;;;;QAuBa,IAAK,SAAQD,IAAY;MAGpC;UACE,KAAK,EAAE,CAAC;;UAGR,IAAI,CAAC,4BAA4B,CAACF,aAAE,CAAC,YAAY,CAAC,eAAe,GAAGA,aAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;UAExG;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE5C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eACzC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;mBACnB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eACzC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBACjB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;mBAClB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eACzC;WACF;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAC3C;cACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAC3C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,EAAE,CAAC,KAAK,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;cACpD,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGF,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;cACtB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;cACrB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;WAC3E;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cAClD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;WAC3E;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACnD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;WAC3E;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAC5D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;;cAE7B,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,QAAQ,EAAE,CAAC;cACnC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;cACpB,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;cAChE,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;cAChE,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;cACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WAC5B;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAChE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;;cAE7B,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,QAAQ,EAAE,CAAC;cACnC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;cACpB,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;cAChE,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;cAChE,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;cACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WAC5B;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;cACjC,KAAK,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;cAClE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;;cAE7B,MAAM,QAAQ,GAAG,IAAIA,aAAE,CAAC,QAAQ,EAAE,CAAC;cACnC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;cACpB,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;cAChE,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;cAChE,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;cACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;WAC5B;OACF;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,IAAI,EAAE,CAAC;OACnB;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;EAExF;;ECjLA;;;;;;;;;;;;;;;;;QAwBa,WAAY,SAAQ,IAAI;MAKnC;UACE,KAAK,EAAE,CAAC;UAJH,YAAO,GAAoB,IAAI,CAAC;UAChC,wBAAmB,GAAG,GAAG,CAAC;UAK/B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;;UAGtC,MAAM,KAAK,GAAG,IAAIH,aAAE,CAAC,WAAW,EAAE,CAAC;UACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;UACtB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;;UAGrB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;UAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;UACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;UAC7C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;UAGzC,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,SAAS,EAAE,CAAC;UAC9B,EAAE,CAAC,WAAW,EAAE,CAAC;UACjB,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;;UAGzD,IAAI,CAAC,WAAW,EAAE,CAAC;OACpB;MAEM,WAAW;;;;;UAKhB,MAAM,iBAAiB,GAAG,IAAIA,aAAE,CAAC,iBAAiB,EAAE,CAAC;UACrD,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;UAC5C,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;UACzC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;UAC1C,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACvC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;UAClE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;OAC5D;;;;;MAMM,WAAW;UAChB,IAAI,IAAI,CAAC,OAAO,EAAE;cAChB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;WACrB;eAAM;cACL,IAAI,CAAC,WAAW,EAAE,CAAC;WACpB;OACF;;;;;MAMM,QAAQ,CAAC,GAAW;UACzB,QAAQ,GAAG;cACT,KAAK,GAAG;kBACN,IAAI,CAAC,WAAW,EAAE,CAAC;kBACnB,MAAM;cACR;kBACE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;kBACpB,MAAM;WACT;OACF;;;;;MAMM,OAAO,CAAC,CAAU;UACvB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;UACjB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;cAClB,IAAI,CAAC,WAAW,EAAE,CAAC;WACpB;OACF;;;;MAKM,MAAM,CAAC,GAAY;;;UAGxB,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;OACnE;;;;MAKM,IAAI,CAAC,QAA0B;;UAEpC,MAAM,gBAAgB,GAAG,IAAI,CAAC;;UAE9B,MAAM,2BAA2B,GAAG,GAAG,CAAC;UACxC,MAAM,wBAAwB,GAAG,GAAG,GAAG,2BAA2B,CAAC;;UAEnE,MAAM,UAAU,GAAG,GAAG,CAAC;UAEvB,IAAI,CAAC,mBAAmB,KAAK,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;UACrD,IAAI,IAAI,CAAC,mBAAmB,GAAG,wBAAwB,EAAE;cACvD,IAAI,CAAC,mBAAmB,IAAI,wBAAwB,CAAC;WACtD;;UAGD,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,GAAG,2BAA2B,GAAG,GAAG,GAAGA,aAAE,CAAC,EAAE,CAAC;UACxF,MAAM,WAAW,GAAG,IAAIA,aAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;;UAGtG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;cAC3C,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,GAAG,UAAU,EAAE;cAC1D,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;WACtD;UACD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACtB;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,cAAc,EAAE,WAAW,CAAC,MAAM,EAAE;EAEvG;;ECxJA;;;;;;;;;;;;;;;;;EAuBA,MAAM,WAAW;MAOf,YAAY,cAAiC,EAAE,MAAe,EAAE,IAAY,EAAE,KAAa,EAAE,QAAgB,EAAE,aAA8B;UANrI,sBAAiB,GAAG,GAAG,CAAC;UACxB,wBAAmB,GAAG,GAAG,CAAC;UAC1B,mBAAc,GAAG,GAAG,CAAC;UAGrB,gBAAW,GAAa,IAAIH,aAAE,CAAC,KAAK,EAAE,CAAC;;UAG7C,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;UACnC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UACvB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;;UAGtB,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;UACrC,EAAE,CAAC,KAAK,GAAG,aAAa,CAAC;UACzB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;;UAMjB,SAAS,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;cAC9C,IAAI,CAAC,GAAG,CAAC,EAAE;kBAAE,CAAC,IAAI,CAAC,CAAC;eAAE;cACtB,IAAI,CAAC,GAAG,CAAC,EAAE;kBAAE,CAAC,IAAI,CAAC,CAAC;eAAE;cACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;kBAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;eAAE;cAC9C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;kBAAE,OAAO,CAAC,CAAC;eAAE;cAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;kBAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;eAAE;cACxD,OAAO,CAAC,CAAC;WACV;UACD,SAAS,QAAQ,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAY,CAAC;cAC9D,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;cACZ,IAAI,CAAC,KAAK,CAAC,EAAE;kBACX,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;eACf;mBAAM;kBACL,MAAM,CAAC,GAAW,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;kBACxD,MAAM,CAAC,GAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;kBAC5B,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;kBAC7B,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;kBACrB,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;eAC9B;cACD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;WACvB;UACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;UACvD,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;UAChC,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC;;UAGvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;UAE1D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;UAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;;;UAInD,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;UAC/C,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;UACtD,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;UACtD,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;;cAE7EA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;cAEtCA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WACtC;OACF;MACM,IAAI;UACT,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;;OAEnC;MACM,UAAU;UACf,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,cAAc,EAAE;cACnD,OAAO,GAAG,CAAC;WACZ;UACD,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;OACvF;MACM,IAAI,CAAC,EAAU;UACpB,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,mBAAmB,GAAG,GAAG,EAAE;cAC5C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;cACxE,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;cAEhC,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;cACtD,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;;cAG/C,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;kBAC7E,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;;;kBAIpB,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;eACd;WACF;OACF;MACM,MAAM;UACX,OAAO,IAAI,CAAC,mBAAmB,IAAI,GAAG,CAAC;OACxC;GACF;QAEY,MAAO,SAAQE,IAAY;MAStC;UACE,KAAK,EAAE,CAAC;UALF,eAAU,GAAW,CAAC,CAAC;UACvB,UAAK,GAA8B,EAAE,CAAC;UACtC,cAAS,GAAY,KAAK,CAAC;UAC3B,mBAAc,GAAY,IAAIF,aAAE,CAAC,IAAI,EAAE,CAAC;;UAK9C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;UAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;cACxC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;WACtB;UAED,IAAI,CAAC,WAAW,EAAE,CAAC;UACnB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;;UAG1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;cAC5C,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cACzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,WAAW,EAAE,CAAC;cACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAGa,WAAmB,EAAE,EACvC,MAAM,CAAC,mBAAmB,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;cACxD,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;cACnB,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;cAEzC,CAAC,CAAC,WAAW,CAAC;kBACZ,KAAK,EAAE,IAAI;eACZ,CAAC,CAAC;WACJ;UAEDX,IAAY,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;UACxDA,IAAY,CAAC,yBAAyB,CAACF,aAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;OAC3E;MAEM,YAAY,CAAC,OAAmB;UACrC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;;UAE5B,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;UAClD,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;UAClD,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK;eACtB,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;cACxB,MAAM,aAAa,GAAG,IAAIA,aAAE,CAAC,aAAa,EAAE,CAAC;cAC7C,OAAO,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;;;;;cAMxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;cAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;WACvB;OACF;MAEM,IAAI,CAAC,QAA0B;UACpC,MAAM,aAAa,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAC/D,IAAI,EAAE,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;UAC/D,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;cAC9C,EAAE,GAAG,GAAG,CAAC;WACV;UAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;UAGrB,IAAI,IAAI,CAAC,SAAS,EAAE;;cAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;cAChD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;WACxB;;UAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;cACxC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;cAC1B,IAAI,GAAG,KAAK,IAAI,EAAE;kBAChB,SAAS;eACV;cACD,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;cACb,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE;;kBAEhB,GAAG,CAAC,IAAI,EAAE,CAAC;kBACX,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;eACtB;WACF;OACF;MAEM,MAAM,CAAC,CAAU,EAAE,aAA8B;UACtD,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;UACxC,IAAI,GAAG,KAAK,IAAI,EAAE;;cAEhB,GAAG,CAAC,IAAI,EAAE,CAAC;cACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;WACpC;UACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,WAAW,CAC3C,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAEW,WAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEA,WAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,EACxFA,WAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,aAAa,CAAC,CAAC;UAChD,IAAI,EAAE,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE;cACxC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;WACrB;OACF;MAEM,WAAW;;UAEhB;cACE,MAAM,EAAE,GAAG,IAAIb,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAE3C;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;sBAClB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;mBACpB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;mBACrB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACrB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;mBACrB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;cAED;kBACE,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;kBACpC,MAAM,QAAQ,GAAG;sBACf,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;sBACpB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;sBACnB,IAAIA,aAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;mBACpB,CAAC;kBACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;kBACvB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;eAClC;WACF;OACF;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,MAAM,EAAE,CAAC;OACrB;;EApKc,mBAAY,GAAG,CAAC,CAAC;EACjB,eAAQ,GAAG,EAAE,CAAC;EACd,0BAAmB,GAAG,CAAC,CAAC;EACxB,mBAAY,GAAG,GAAG,CAAC;AAoKHG,cAAoB,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE;EAE5F;;ECnSA;;;;;;;;;;;;;;;;;QAuBa,WAAY,SAAQD,IAAY;MAI3C;UACE,KAAK,EAAE,CAAC;UAHH,WAAM,GAAG,CAAC,CAAC;UAKhB,IAAI,MAAM,GAAG,IAAI,CAAC;UAClB;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;WACtC;UAED;cACE,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,OAAO,EAAE,CAAC;cAC5B,EAAE,CAAC,IAAI,GAAGA,aAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;cACrC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;cACtB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;cAEzC,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACtD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACtD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAC/B,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;cAE/B,MAAM,EAAE,GAAG,IAAIA,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;cAClB,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;cAChB,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;cAC9B,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;cACxB,EAAE,CAAC,UAAU,GAAG,IAAI,GAAGA,aAAE,CAAC,EAAE,CAAC;cAC7B,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC;cACxB,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;cACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;WAC7C;UAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;UAC3C,MAAM,YAAY,GAAGE,IAAY,CAAC,yBAAyB,EAAE,CAAC;UAC9D,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;UAEtC;cACE,MAAM,EAAE,GAAG,IAAIF,aAAE,CAAC,gBAAgB,EAAE,CAAC;cACrC,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;cAExB,MAAM,KAAK,GAAG,IAAIA,aAAE,CAAC,YAAY,EAAE,CAAC;cACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;cAErD,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;cACjB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;cAC5D,IAAI,EAAE,CAAC,KAAK,GAAGA,aAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE;kBACrD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;eACnC;WACF;UAED,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;OACjB;MAEM,IAAI,CAAC,QAA0B;UACpC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACrB,IAAI,QAAQ,CAAC,OAAO,GAAG,CAAC,EAAE;cACxB,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC;WACrC;UACD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAGA,aAAE,CAAC,EAAE,CAAC,CAAC;OAClE;MAEM,kBAAkB;UACvB,OAAO,GAAG,CAAC;OACZ;MAEM,OAAO,MAAM;UAClB,OAAO,IAAI,WAAW,EAAE,CAAC;OAC1B;GACF;AAEgCG,cAAoB,CAAC,WAAW,EAAE,cAAc,EAAE,WAAW,CAAC,MAAM,EAAE;EAEvG;;ECzGA;QA2Ba,IAAI;MAyBf,YAAY,IAAY;UAxBjB,gBAAW,GAAW,CAAC,CAAC;UACxB,eAAU,GAAW,CAAC,CAAC;UACvB,iBAAY,GAAW,CAAC,CAAC;UACzB,UAAK,GAAW,CAAC,CAAC;UAGT,eAAU,GAAa,IAAI,QAAQ,EAAE,CAAC;UAI/C,YAAO,GAAY,KAAK,CAAC;UACzB,WAAM,GAAY,KAAK,CAAC;UACxB,iBAAY,GAAY,KAAK,CAAC;UAC9B,iBAAY,GAAY,KAAK,CAAC;UACrB,kBAAa,GAAY,IAAIH,aAAE,CAAC,IAAI,EAAE,CAAC;UACvC,kBAAa,GAAY,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UAChD,gBAAW,GAAY,KAAK,CAAC;UAC7B,gBAAW,GAAW,CAAC,CAAC;UACxB,oBAAe,GAAW,IAAI,GAAG,EAAE,CAAC;UAGpC,UAAK,GAAoC,IAAI,CAAC;UA8O7C,YAAO,GAAG,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC;UA1O9B,MAAM,OAAO,GAAmB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UAC1G,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;UACpC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;UAC3B,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;UAC7B,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,oBAAoB,CAAC;UACrD,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;UAC9B,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC;UACxC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;UAC7B,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;UAE1B,MAAM,SAAS,GAAmB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UAC9G,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;UACtC,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;UAC7B,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;UAC/B,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,oBAAoB,CAAC;UACvD,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;UAChC,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC;UAC1C,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;UAC/B,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;UAEzB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,uBAAuB,CAAC;UAE9D,MAAM,QAAQ,GAAmB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UAC1F,QAAQ,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;UACrC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;UAC5B,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;UAE3B,SAAS,eAAe;;cAEtB,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;cAChD,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;WACnD;UACD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAU,OAAa,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC;UAChF,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,CAAQ,OAAa,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC;UACzF,eAAe,EAAE,CAAC;UAElB,MAAM,SAAS,GAAmB,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UACtF,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;UACrC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;UAC/B,SAAS,CAAC,SAAS,GAAG,wBAAwB,GAAGA,aAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;UAEvE,MAAM,QAAQ,GAAmB,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UAErF,MAAM,UAAU,GAAmB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UAC3G,UAAU,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;UACvC,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;UAC9B,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;UAC/B,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;UAC7B,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;UAEhC,MAAM,SAAS,GAAsB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;UAEjH,SAAS,aAAa;;cAEpB,IAAI,SAAS,CAAC,KAAK,KAAK,UAAU,CAAC,WAAW,EAAE;kBAC9C,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC;eAC7D;cACD,IAAI,SAAS,CAAC,MAAM,KAAK,UAAU,CAAC,YAAY,EAAE;kBAChD,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,YAAY,CAAC;eAChE;WACF;UACD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAU,OAAa,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;UAC9E,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,CAAQ,OAAa,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;UACvF,aAAa,EAAE,CAAC;UAEhB,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;UAEnE,MAAM,YAAY,GAAmB,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UACzF,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;UACzC,YAAY,CAAC,KAAK,CAAC,eAAe,GAAG,uBAAuB,CAAC;UAC7D,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;UACnC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;UACjC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;UAC/B,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;UAClC,YAAY,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;;UAGxC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;UAC3D,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;UACvD,MAAM,WAAW,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;UACxE,MAAM,YAAY,GAAwB,EAAE,CAAC;UAC7C,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;cACrD,MAAM,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;cACnE,MAAM,CAAC,IAAI,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;cACtE,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;cAC5B,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;WAC3B;UACD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAoB,EAAE,CAAoB,KAAK,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;UAChG,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;cACpD,MAAM,MAAM,GAAsB,YAAY,CAAC,CAAC,CAAC,CAAC;cAClD,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;WACzB;UACD,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,EAAE,CAAC;UAC7D,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAQ;cAC9C,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC;cACxD,IAAI,CAAC,QAAQ,EAAE,CAAC;WACjB,CAAC,CAAC;UACH,YAAY,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;UACtC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;UACjC,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;UACnC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;UAEvD,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;;UAGvD,SAAS,oBAAoB,CAAC,MAAY,EAAE,KAAa,EAAE,IAAY,EAAE,MAA+B,EAAE,GAAW,EAAE,GAAW,EAAE,IAAY;cAC9I,MAAM,eAAe,GAAwB,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;cAC9F,MAAM,gBAAgB,GAA6B,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;cAC7G,gBAAgB,CAAC,KAAK,GAAG,OAAO,CAAC;cACjC,gBAAgB,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;cAC7D,MAAM,gBAAgB,GAA6B,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;cAC7G,MAAM,YAAY,GAAqB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;cACvE,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC;cACtB,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;cAClC,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;cAClC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;cACpC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;cACrC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAQ;kBAC/C,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;eAC1C,CAAC,CAAC;cACH,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;cAC3C,OAAO,YAAY,CAAC;WACrB;UAED,MAAM,kBAAkB,GAAqB,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;UACvG,oBAAoB,CAAC,kBAAkB,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,KAAa,OAAa,IAAI,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;UAClL,oBAAoB,CAAC,kBAAkB,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,KAAa,OAAa,IAAI,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;UAElL,oBAAoB,CAAC,kBAAkB,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,KAAa,OAAa,IAAI,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;;UAEnL,oBAAoB,CAAC,kBAAkB,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,KAAa,OAAa,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;;UAGtJ,SAAS,sBAAsB,CAAC,MAAY,EAAE,KAAa,EAAE,IAAa,EAAE,MAAgC;cAC1G,MAAM,cAAc,GAAqB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;cACzE,cAAc,CAAC,IAAI,GAAG,UAAU,CAAC;cACjC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;cAC9B,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAa;kBACrD,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;eAChC,CAAC,CAAC;cACH,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;cACnC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;cACnD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;cACjD,OAAO,cAAc,CAAC;WACvB;UAED,sBAAsB,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UACnJ,sBAAsB,CAAC,YAAY,EAAE,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UACzK,sBAAsB,CAAC,YAAY,EAAE,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UACtK,sBAAsB,CAAC,YAAY,EAAE,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,mBAAmB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;;UAEtK,sBAAsB,CAAC,YAAY,EAAE,+BAA+B,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;;;UAIjL,MAAM,aAAa,GAAwB,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;UACxG,MAAM,WAAW,GAAsB,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;UACnG,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;UACzD,sBAAsB,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;;UAEnJ,sBAAsB,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;;UAE5J,sBAAsB,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UACnJ,sBAAsB,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UAChJ,sBAAsB,CAAC,aAAa,EAAE,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,mBAAmB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UACzK,sBAAsB,CAAC,aAAa,EAAE,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UAC5K,sBAAsB,CAAC,aAAa,EAAE,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UAC7K,sBAAsB,CAAC,aAAa,EAAE,mBAAmB,EAAE,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,qBAAqB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UAChL,sBAAsB,CAAC,aAAa,EAAE,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UACzJ,sBAAsB,CAAC,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;UACrJ,sBAAsB,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,KAAc,OAAa,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;;UAGtJ,SAAS,oBAAoB,CAAC,MAAY,EAAE,KAAa,EAAE,QAAiC;cAC1F,MAAM,YAAY,GAAqB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;cACvE,YAAY,CAAC,IAAI,GAAG,QAAQ,CAAC;cAC7B,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;cACjC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;cAC3B,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;cACjD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;cACjC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;cACjD,OAAO,YAAY,CAAC;WACrB;UAED,MAAM,UAAU,GAAmB,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;UAC3F,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC;UAC5B,oBAAoB,CAAC,UAAU,EAAE,WAAW,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;UAC1F,oBAAoB,CAAC,UAAU,EAAE,iBAAiB,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;UACrG,oBAAoB,CAAC,UAAU,EAAE,aAAa,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;UAC/F,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC,UAAU,EAAE,MAAM,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;;UAG/G,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAa,OAAa,CAAC,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;UAE/F,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAChG,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAChG,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAC5F,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAExF,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAChG,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAClG,UAAU,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAa,OAAa,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAE9F,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAgB,OAAa,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAC3F,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAgB,OAAa,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UAEvF,IAAI,CAAC,QAAQ,EAAE,CAAC;UAEhB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;OACzB;MAEM,UAAU;UACf,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,GAAG,CAAC,CAAC;UAC7E,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;;OAEhD;MAEM,UAAU,CAAC,IAAa;UAC7B,MAAM,QAAQ,GAAY,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;;UAEpD,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;UACvB,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAClC;;;;;MAOM,UAAU,CAAC,IAAY;UAC5B,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC;UACxB,QAAQ,CAAC,MAAM,GAAGA,aAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;OACvD;MAIM,eAAe,CAAC,CAAa;UAClC,MAAM,OAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;UAC3D,MAAM,KAAK,GAAY,QAAQ,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAE7E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;UAE3B,IAAI,IAAI,CAAC,YAAY,EAAE;cACrB,IAAI,IAAI,CAAC,MAAM,EAAE;kBAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;eAAE;WACnD;UAED,IAAI,IAAI,CAAC,YAAY,EAAE;;cAErB,MAAM,UAAU,GAAY,QAAQ,CAAC,0BAA0B,CAAC,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACxF,MAAM,IAAI,GAAYA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cACnF,MAAM,MAAM,GAAYA,aAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;cAC/E,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;WAChC;OACF;MAEM,eAAe,CAAC,CAAa;UAClC,MAAM,OAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;UAC3D,MAAM,KAAK,GAAY,QAAQ,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAE7E,QAAQ,CAAC,CAAC,MAAM;cAChB,KAAK,CAAC;kBACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;kBACzB,IAAI,IAAI,CAAC,OAAO,EAAE;sBAChB,IAAI,IAAI,CAAC,MAAM,EAAE;0BAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;uBAAE;mBACxD;uBAAM;sBACL,IAAI,IAAI,CAAC,MAAM,EAAE;0BAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;uBAAE;mBACnD;kBACD,MAAM;cACR,KAAK,CAAC;kBACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;kBACzB,MAAM,UAAU,GAAY,QAAQ,CAAC,0BAA0B,CAAC,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;kBACxF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;kBACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;kBAC3C,MAAM;WACP;OACF;MAEM,aAAa,CAAC,CAAa;UAChC,MAAM,OAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;UAC3D,MAAM,KAAK,GAAY,QAAQ,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAE7E,QAAQ,CAAC,CAAC,MAAM;cAChB,KAAK,CAAC;kBACJ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;kBAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;sBAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;mBAAE;kBAChD,MAAM;cACR,KAAK,CAAC;kBACJ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;kBAC1B,MAAM;WACP;OACF;MAEM,eAAe,CAAC,CAAa;UAClC,MAAM,OAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;UACjF,MAAM,KAAK,GAAY,QAAQ,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC7E,IAAI,IAAI,CAAC,MAAM,EAAE;cAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;WAAE;UAClD,CAAC,CAAC,cAAc,EAAE,CAAC;OACpB;MAEM,gBAAgB,CAAC,CAAa;UACnC,MAAM,OAAO,GAAY,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;UACjF,MAAM,KAAK,GAAY,QAAQ,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAIA,aAAE,CAAC,IAAI,EAAE,CAAC,CAAC;UAC7E,IAAI,IAAI,CAAC,MAAM,EAAE;cAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;WAAE;UAClD,CAAC,CAAC,cAAc,EAAE,CAAC;OACpB;MAEM,cAAc,CAAC,CAAa;UACjC,IAAI,IAAI,CAAC,MAAM,EAAE;cAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;WAAE;UACnE,CAAC,CAAC,cAAc,EAAE,CAAC;OACpB;MAEM,WAAW,CAAC,CAAa;UAC9B,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;cAChB,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;WAC1B;eAAM,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;cACvB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;WACtB;UACD,CAAC,CAAC,cAAc,EAAE,CAAC;OACpB;MAEM,aAAa,CAAC,CAAgB;UACnC,QAAQ,CAAC,CAAC,GAAG;cACb,KAAK,SAAS;kBACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;kBACnB,MAAM;cACR,KAAK,OAAO;kBACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;kBACpB,MAAM;cACR,KAAK,WAAW;kBACd,IAAI,IAAI,CAAC,MAAM,EAAE;sBACf,IAAI,IAAI,CAAC,MAAM,EAAE;0BACf,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;uBAC5C;mBACF;uBAAM;sBACL,IAAI,CAAC,UAAU,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;mBACvC;kBACD,MAAM;cACR,KAAK,YAAY;kBACf,IAAI,IAAI,CAAC,MAAM,EAAE;sBACf,IAAI,IAAI,CAAC,MAAM,EAAE;0BACf,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;uBAC7C;mBACF;uBAAM;sBACL,IAAI,CAAC,UAAU,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;mBACtC;kBACD,MAAM;cACR,KAAK,WAAW;kBACd,IAAI,IAAI,CAAC,MAAM,EAAE;sBACf,IAAI,IAAI,CAAC,MAAM,EAAE;0BACf,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;uBAC5C;mBACF;uBAAM;sBACL,IAAI,CAAC,UAAU,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;mBACvC;kBACD,MAAM;cACR,KAAK,SAAS;kBACZ,IAAI,IAAI,CAAC,MAAM,EAAE;sBACf,IAAI,IAAI,CAAC,MAAM,EAAE;0BACf,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;uBAC7C;mBACF;uBAAM;sBACL,IAAI,CAAC,UAAU,CAAC,IAAIA,aAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;mBACtC;kBACD,MAAM;cACR,KAAK,MAAM;kBACT,IAAI,CAAC,UAAU,EAAE,CAAC;kBAClB,MAAM;;;;;;;cAOR,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;kBACrB,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;kBACrB,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,QAAQ,EAAE,CAAC;kBAChB,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,MAAM,EAAE;sBACf,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;mBAC1B;kBACD,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,UAAU,EAAE,CAAC;kBAClB,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,KAAK,EAAE,CAAC;kBACb,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,aAAa,EAAE,CAAC;kBACrB,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,CAAC,aAAa,EAAE,CAAC;kBACrB,MAAM;;cAER,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,OAAO,EAAE;;sBAEhB,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;mBACpC;kBACD,MAAM;cACR,KAAK,GAAG;kBACN,IAAI,IAAI,CAAC,OAAO,EAAE;;sBAEhB,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;mBACpC;kBACD,MAAM;WAKP;UAED,IAAI,IAAI,CAAC,MAAM,EAAE;cACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;WAC7B;OACF;MAEM,WAAW,CAAC,CAAgB;UACjC,QAAQ,CAAC,CAAC,GAAG;cACb,KAAK,SAAS;kBACZ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;kBACpB,MAAM;cACR,KAAK,OAAO;kBACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;kBACrB,MAAM;WAIP;UAED,IAAI,IAAI,CAAC,MAAM,EAAE;cACf,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;WAC/B;OACF;MAEM,UAAU,CAAC,YAAoB;UACpC,IAAI,IAAI,CAAC,WAAW,EAAE;cACpB,IAAI,CAAC,WAAW,IAAI,YAAY,CAAC;cAEjC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE;kBAC3C,IAAI,CAAC,aAAa,EAAE,CAAC;eACtB;cAED,MAAM,GAAG,GAAW,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;cACnG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,GAAG,CAAC;WAChC;eAAM;cACL,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC;WACnC;OACF;MAEM,aAAa;UAClB,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,EAAE;cACpC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;WAC1D;UACD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;UAC9B,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;UAC/D,IAAI,CAAC,QAAQ,EAAE,CAAC;OACjB;MAEM,aAAa;UAClB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;UAC9B,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;cAC7D,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,CAAC;WACjC;UACD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;UAC/D,IAAI,CAAC,QAAQ,EAAE,CAAC;OACjB;MAEM,QAAQ,CAAC,cAAuB,KAAK;;UAE1C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;UAC1B,IAAI,CAAC,WAAW,EAAE;cAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;WAAE;;UAErD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;;UAErB,IAAI,IAAI,CAAC,MAAM,EAAE;cACf,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE,CAAC;WACzC;;UAED,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;UAC1G,IAAI,CAAC,WAAW,EAAE;cAChB,IAAI,CAAC,UAAU,EAAE,CAAC;WACnB;OACF;MAEM,KAAK;UACV,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;OACpD;MAEM,UAAU;UACf,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;UAC/B,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC;OACrC;MAEM,UAAU;UACf,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;OACtC;MAEM,cAAc,CAAC,IAAY;UAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;UAE5C,IAAI,YAAY,GAAW,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;UACnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;UAExB,IAAI,YAAY,GAAG,IAAI,EAAE;cAAE,YAAY,GAAG,IAAI,CAAC;WAAE;UAEjD,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC;UAChC,IAAI,CAAC,YAAY,EAAE,CAAC;UAEpB,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;cAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC;cAC1D,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;cACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;cAEpB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;WAC7D;UAED,IAAI,YAAY,GAAG,CAAC,EAAE;cACpB,MAAM,GAAG,GAAoC,IAAI,CAAC,KAAK,CAAC;;cAGxD,MAAM,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC;;cAG5B,IAAI,GAAG,EAAE;kBACP,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;;;kBAOzD,GAAG,CAAC,IAAI,EAAE,CAAC;;kBAGX,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;kBAC/D,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;kBAGjB,MAAM,CAAC,GAAW,GAAG,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;kBAC9D,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;kBAChB,GAAG,CAAC,SAAS,IAAI,CAAC,CAAC;;kBAGnB,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;kBACpD,GAAG,CAAC,SAAS,IAAI,QAAQ,CAAC,MAAM,CAAC;;kBAEjC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;kBAE1D,IAAI,IAAI,CAAC,MAAM,EAAE;sBAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;mBAAE;;;kBAIvD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;;;kBAI5C,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;kBAChE,IAAI,IAAI,CAAC,YAAY,CAAC,oCAAoC,EAAE,EAAE;sBAC5D,GAAG,IAAI,KAAK,CAAC;sBACb,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;mBACzC;kBACD,IAAI,IAAI,CAAC,MAAM,EAAE;sBAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;mBAAE;;;;;;kBAQhD,GAAG,CAAC,OAAO,EAAE,CAAC;eACf;;cAGD,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE;kBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;eACrB;;cAGD,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;WAC/B;OACF;GACF;EAiGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}